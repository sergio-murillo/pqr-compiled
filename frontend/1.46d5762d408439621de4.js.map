{"version":3,"sources":["./node_modules/rxjs/_esm5/internal/util/Immediate.js","./node_modules/rxjs/_esm5/internal/operators/audit.js","./node_modules/rxjs/_esm5/internal/observable/timer.js","./node_modules/rxjs/_esm5/internal/operators/auditTime.js","./node_modules/rxjs/_esm5/internal/operators/pairwise.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm5/scrolling.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm5/portal.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm5/overlay.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm5/layout.js","./node_modules/@angular/material/__ivy_ngcc__/fesm5/button.js","./node_modules/rxjs/_esm5/internal/operators/skip.js","./node_modules/@angular/material/__ivy_ngcc__/fesm5/snack-bar.js","./src/app/modules/request/store/index.ts","./src/app/modules/request/store/request.facade.ts","./src/app/modules/request/store/request.reducer.ts","./src/app/core/components/autocomplete/autocomplete.module.ts","./node_modules/@swimlane/ngx-datatable/__ivy_ngcc__/fesm5/swimlane-ngx-datatable.js","./src/app/core/components/autocomplete/autocomplete.component.html","./src/app/core/components/autocomplete/autocomplete.component.ts","./src/app/core/helpers/scroll.helper.ts","./src/app/core/pipes/pipes.module.ts","./src/app/core/pipes/state.pipe.ts","./src/app/core/pipes/format-customer.pipe.ts","./node_modules/rxjs/_esm5/internal/operators/takeUntil.js","./src/app/core/pipes/request-type.pipe.ts"],"names":["AuditOperator","durationSelector","this","prototype","call","subscriber","source","subscribe","_super","AuditSubscriber","destination","_this","hasValue","_next","value","throttled","duration","err","error","innerSubscription","subscribeToResult","closed","clearThrottle","add","remove","unsubscribe","next","notifyNext","outerValue","innerValue","outerIndex","innerIndex","notifyComplete","OuterSubscriber","dispatch","state","index","period","complete","schedule","auditTime","scheduler","dueTime","periodOrScheduler","isNumeric","Number","isScheduler","Observable","due","now","timer","lift","ScrollDispatcher","_ngZone","_platform","document","_scrolled","Subject","_globalSubscription","_scrolledCount","scrollContainers","Map","_document","register","scrollable","has","set","elementScrolled","deregister","scrollableReference","get","delete","scrolled","auditTimeInMs","isBrowser","observer","_addGlobalListener","subscription","pipe","_removeGlobalListener","of","ngOnDestroy","forEach","_","container","ancestorScrolled","elementRef","ancestors","getAncestorScrollContainers","filter","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","push","_getDocument","_getWindow","defaultView","window","element","nativeElement","scrollableElement","getElementRef","parentElement","runOutsideAngular","fromEvent","ɵprov","factory","token","providedIn","ɵfac","t","ViewportRuler","ngZone","_change","merge","_invalidateCache","change","_updateViewportSize","getViewportSize","_viewportSize","output","width","height","getViewportRect","scrollPosition","getViewportScrollPosition","_a","top","left","bottom","right","documentElement","documentRect","getBoundingClientRect","body","scrollTop","scrollY","scrollLeft","scrollX","throttleTime","innerWidth","innerHeight","CdkScrollableModule","ɵmod","type","ɵinj","ScrollingModule","imports","throwPortalAlreadyAttachedError","Error","Portal","attach","host","throwNullPortalOutletError","hasAttached","_attachedHost","detach","throwNoPortalAttachedError","Object","defineProperty","enumerable","configurable","setAttachedHost","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","template","context","templateRef","undefined","DomPortal","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","throwNullPortalError","throwPortalOutletAlreadyDisposedError","attachComponentPortal","attachTemplatePortal","throwUnknownPortalTypeError","_invokeDisposeFn","dispose","setDisposeFn","fn","_disposeFn","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","parentNode","anchorNode","createComment","insertBefore","appendChild","replaceChild","componentRef","componentFactory","resolveComponentFactory","createComponent","length","destroy","create","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","removeChild","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ngOnInit","ref","emit","clear","nodeType","ELEMENT_NODE","ɵdir","selectors","inputs","outputs","exportAs","features","PortalModule","PortalInjector","_parentInjector","_customTokens","notFoundValue","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","_isEnabled","enable","_canBeEnabled","root","_previousScrollPosition","style","classList","disable","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","contains","viewport","scrollHeight","scrollWidth","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","_overlayRef","run","overlayRef","stream","threshold","_initialScrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","some","containerBounds","isElementClippedByScrolling","scrollContainerRect","RepositionScrollStrategy","scrollThrottle","autoClose","overlayRect","overlayElement","ScrollStrategyOptions","noop","close","config","block","reposition","e_1","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","keys","configKeys_1","configKeys_1_1","done","key","e_1_1","return","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","_keydownEvents","observers","_isAttached","addEventListener","splice","removeEventListener","isTestEnvironment","__karma__","jasmine","OverlayContainer","_containerElement","getContainerElement","_createContainer","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","Subscription","EMPTY","_backdropClickHandler","_scrollStrategy","_positionStrategy","positionStrategy","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","asObservable","take","_togglePointerEvents","_attachBackdrop","_toggleClasses","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","backdropClick","attachments","detachments","keydownEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","requestAnimationFrame","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","takeUntil","children","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isInitialRender","_lastPosition","e_2","_b","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","fallback","originRect","viewportRect","flexibleFits","_c","_d","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","flexibleFits_1","flexibleFits_1_1","fit","score","weight","e_2_1","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","positions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","point","_getOffset","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","_pushOverlayOnScreen","start","pushX","pushY","overflowRight","max","overflowBottom","overflowTop","overflowLeft","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","xOrigin","elements","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","virtualKeyboardOffset","clientHeight","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","_i","arguments","reduce","currentValue","currentOverflow","axis","pair","Element","hasOwnProperty","input","split","units","parseFloat","mediaQueryStyleNode","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFallbackPosition","_direction","recalculateLastPosition","withDirection","withOffsetX","withOffsetY","slice","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","global","flexibleConnectedTo","nextUniqueId","Overlay","scrollStrategies","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","providers","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_elementRef","MatButton","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","BUTTON_HOST_ATTRIBUTES_1","BUTTON_HOST_ATTRIBUTES_1_1","attr","_getHostElement","monitor","color","stopMonitoring","focus","options","focusVia","_isRippleDisabled","disableRipple","disabled","attributes","attribute","hasAttribute","ɵcmp","viewQuery","rf","ctx","_t","ripple","first","hostAttrs","hostVars","hostBindings","attrs","ngContentSelectors","decls","vars","consts","directives","encapsulation","changeDetection","MatButtonModule","SkipOperator","total","SkipSubscriber","count","Subscriber","mediaQueriesForWebkitCompatibility","Set","MediaMatcher","_matchMedia","matchMedia","bind","noopMatchMedia","query","WEBKIT","head","sheet","insertRule","e","console","createEmptyStyleRule","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","splitQueries","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","combineLatest","concat","debounceTime","breakpointStates","response","breakpoints","handler","startWith","nextMql","queries","a1","a2","SimpleSnackBar_div_2_Template","_r2","action","ctx_r0","data","MatSnackBarContainer_ng_template_0_Template","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","exit","_durationTimeoutId","dismissWithAction","closeWithAction","_dismissAfter","_open","dismissedByAction","afterDismissed","afterOpened","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","SimpleSnackBar","snackBarRef","message","hasAction","matSnackBarAnimations","snackBarState","opacity","MatSnackBarContainer","_changeDetectorRef","snackBarConfig","_destroyed","_animationState","_assertNotAttached","_applySnackBarClasses","_role","onAnimationEnd","toState","fromState","_completeExit","onEnter_1","enter","onMicrotaskEmpty","panelClasses","Array","isArray","$event","animation","MatSnackBarModule","MAT_SNACK_BAR_DEFAULT_OPTIONS","MatSnackBar","_overlay","_live","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","_openedSnackBarRef","openFromComponent","_attach","openFromTemplate","open","_attachSnackBarContainer","WeakMap","containerPortal","containerRef","instance","content","userConfig","_createOverlay","$implicit","_createInjector","contentRef","_animateSnackBar","announce","isLeft","isRight","RequestRootSelector","createRequestSelector","isLoadingRequestsSelector","isLoadingRequests","store","create$","select","isLoadingRequests$","requestCreate","setLoadingClaims","isLoading","RequestFacade","requestFeatureName","requestReducers","reducer","AutocompleteModule","_c0","DataTableBodyComponent_datatable_progress_2_Template","DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template","ctx_r4","summaryHeight","rows","columns","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template","_r14","group_r7","onTreeAction","i_r8","ctx_r15","onActivate","indexes","ctx_r9","_r0","getRowSelected","getRowHeight","getRowIndex","getRowExpanded","rowClass","displayCheck","treeStatus","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template","_r22","i_r20","row_r19","ctx_r18","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template","ctx_r11","rowTrackingFn","DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template","_r26","rowContextmenu","_r10","ctx_r5","groupedRows","getRowsStyles","rowDetail","groupHeader","getDetailRowHeight","DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template","ctx_r6","getBottomSummaryRowStyles","DataTableBodyComponent_datatable_scroller_3_Template","_r28","onBodyScroll","ctx_r2","scrollbarV","scrollbarH","columnGroupWidths","summaryRow","summaryPosition","temp","DataTableBodyComponent_div_4_Template","ctx_r3","emptyMessage","DataTableHeaderComponent_div_1_datatable_header_cell_1_Template","_r5","column_r3","onColumnResized","onLongPressStart","onLongPressEnd","onSort","columnContextmenu","resizeable","reorderable","draggable","dragging","dragEventTarget","headerHeight","isTarget","targetMarkerTemplate","targetMarkerContext","sortType","sorts","selectionType","sortAscendingIcon","sortDescendingIcon","allRowsSelected","DataTableHeaderComponent_div_1_Template","colGroup_r1","_styleByGroup","columnTrackingFn","DatatableComponent_datatable_header_1_Template","_r3","onColumnSort","onColumnResize","onColumnReorder","onHeaderSelect","onColumnContextmenu","_innerWidth","_internalColumns","sortAscending","sortDescending","DatatableComponent_datatable_footer_4_Template","_r9","onFooterPage","ctx_r1","rowCount","pageSize","footerHeight","footer","messages","totalMessage","pagerLeftArrow","pagerRightArrow","pagerPrevious","selected","selectedMessage","pagerNext","DataTableHeaderCellComponent_1_ng_template_0_Template","DataTableHeaderCellComponent_1_Template","DataTableHeaderCellComponent_label_2_Template","_r6","DataTableHeaderCellComponent_span_3_Template","_r8","name","DataTableHeaderCellComponent_4_ng_template_0_Template","DataTableHeaderCellComponent_4_Template","column","headerTemplate","cellContext","DataTableFooterComponent_1_ng_template_0_Template","_c1","a0","a3","a4","selectedCount","curPage","DataTableFooterComponent_1_Template","footerTemplate","DataTableFooterComponent_div_2_span_1_Template","toLocaleString","DataTableFooterComponent_div_2_Template","DataTableFooterComponent_datatable_pager_3_Template","page","pagerLeftArrowIcon","pagerRightArrowIcon","pagerPreviousIcon","pagerNextIcon","isVisible","_c2","DataTablePagerComponent_li_7_Template","pg_r1","selectPage","number","text","DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template","_r7","ii_r5","column_r4","row","group","expanded","isSelected","rowIndex","rowHeight","DataTableBodyRowComponent_div_0_Template","_groupStyles","DataTableRowWrapperComponent_div_0_1_ng_template_0_Template","DataTableRowWrapperComponent_div_0_1_Template","groupContext","DataTableRowWrapperComponent_div_0_Template","getGroupHeaderStyle","DataTableRowWrapperComponent_1_Template","DataTableRowWrapperComponent_div_2_1_ng_template_0_Template","DataTableRowWrapperComponent_div_2_1_Template","rowContext","DataTableRowWrapperComponent_div_2_Template","detailRowHeight","_c3","DataTableBodyCellComponent_label_1_Template","onCheckboxChange","DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template","DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template","DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template","DataTableBodyCellComponent_ng_container_2_button_1_Template","_r12","DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template","_c4","DataTableBodyCellComponent_ng_container_2_2_Template","ctx_r7","treeToggleTemplate","DataTableBodyCellComponent_ng_container_2_Template","DataTableBodyCellComponent_span_3_Template","sanitizedValue","DataTableBodyCellComponent_4_ng_template_0_Template","DataTableBodyCellComponent_4_Template","cellTemplate","DataTableSummaryRowComponent_datatable_body_row_0_Template","ScrollbarHelper","getWidth","outer","visibility","msOverflowStyle","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","DimensionsHelper","getDimensions","ColumnChangesService","columnInputChanges","onInputChange","DataTableFooterTemplateDirective","VisibilityDirective","zone","visible","runCheck","timeout","onVisibilityChange","check","offsetHeight","DraggableDirective","dragX","dragY","dragStart","dragEnd","isDragging","ngOnChanges","changes","dragModel","onMousedown","_destroySubscription","onMouseup","model","preventDefault","mouseDownPos_1","clientX","clientY","mouseup","ev","mouseMoveSub","move","mouseDownPos","ResizeableDirective","renderer","resizeEnabled","resize","resizing","ngAfterViewInit","renderer2","node","addClass","isHandle","initialWidth","mouseDownScreenX","screenX","stopPropagation","newWidth","OrderableDirective","differs","reorder","targetChanged","differ","find","ngAfterContentInit","updateSubscriptions","draggables","d","diffs","diff","createMapDiffs","unsubscribe_1","previousValue","forEachAddedItem","onDragStart","onDragging","onDragEnd","forEachRemovedItem","toArray","dragger","elm","parseInt","offsetLeft","toString","prop","prevPos","lastDraggingIndex","prevIndex","newIndex","initialIndex","targets","elementsFromPoint","_loop_1","this_1","el","state_1","acc","curr","$$id","contentQueries","dirIndex","LongPressDirective","pressEnabled","longPressStart","longPressing","longPressEnd","mouseX","mouseY","pressing","isLongPressing","onMouseDown","which","pressModel","mouseEvent","onMouseMove","loop","xThres","yThres","endPress","press","isLongPress","ScrollerComponent","scrollYPos","scrollXPos","prevScrollYPos","prevScrollXPos","_scrollEventListener","onScrolled","setOffset","dom","updateOffset","DatatableGroupHeaderTemplateDirective","DatatableGroupHeaderDirective","toggle","_templateInput","_templateQuery","toggleExpandGroup","expandAllGroups","collapseAllGroups","emptyStringGetter","getterForProp","numericIndexGetter","deepValueGetter","shallowValueGetter","obj","fieldName","path","current","optionalGetterForProp","groupRowsByParents","from","to","nodeById","l","TreeNode","uniqIDs","arr","item","toValue","parent_1","fromValue","resolvedRows_1","flatten","level","f","recursive","child","camelCase","str","replace","toLowerCase","a","b","c","toUpperCase","setColumnDefaults","treeColumnFound","columns_1","columns_1_1","random","isNullOrUndefined","$$valueGetter","String","match","sortable","canAutoResize","isTreeColumn","DataTableColumnHeaderDirective","DataTableColumnCellDirective","DataTableColumnCellTreeToggle","DataTableColumnDirective","columnChangesService","isFirstChange","_cellTemplateInput","_cellTemplateQuery","_headerTemplateInput","_headerTemplateQuery","_treeToggleTemplateInput","_treeToggleTemplateQuery","frozenLeft","frozenRight","flexGrow","comparator","checkboxable","headerCheckboxable","headerClass","cellClass","treeLevelIndent","summaryFunc","summaryTemplate","DatatableRowDetailTemplateDirective","DatatableRowDetailDirective","toggleExpandRow","expandAllRows","collapseAllRows","DatatableFooterDirective","columnsByPin","cols","ret","center","cols_1","cols_1_1","col","groups","all","columnTotalWidth","floor","totalWidth","columnsByPinArr","val","colsByPinArr","colsByPin","RowHeightCache","treeArray","clearCache","initCache","details","externalVirtual","rowIndexes","rowExpansions","isFn","isDetailFn","isNaN","n","currentRowHeight","update","calcRowIndex","atRowIndex","byRowHeight","atIndex","sum","queryBetween","atIndexA","atIndexB","dataLength","blockSize","nextPos","cache","testStyle","prefix","getComputedStyle","join","pre","RegExp","lowercase","css","js","substr","getVendorPrefixedName","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","translateXY","DataTableBodyComponent","cd","activate","detailToggle","treeAction","rowHeightsCache","idx","trackByProp","_pageSize","recalcLayout","_rows","_columns","_offset","_rowCount","_bodyHeight","virtualization","listener","toggleRowExpansion","toggleAllRows","updateIndexes","updateRows","markForCheck","updateOffsetY","scroller","updatePage","ceil","last","getGroupHeight","getRowAndDetailHeight","hideIndicator","loadingIndicator","bodyHeight","externalPaging","refreshRowHeightCache","getAdjustedViewPortIndex","viewPortFirstRowIndex","currentIndex","rowExpanded","stylesByGroup","widths","bodyWidth","size","groupExpansionDefault","rowIdentity","selectCheck","groupRowsBy","selectEnabled","DataTableSelectionComponent","ProgressBarComponent","DataTableSummaryRowComponent","DataTableRowWrapperComponent","DataTableBodyRowComponent","DataTableHeaderComponent","sort","_columnGroupWidths","colByPin","setStylesByGroup","_headerHeight","_columnsByPin","trackByGroups","colGroup","prevValue","newValue","onColumnReordered","getColumn","onTargetChanged","oldColumn","newColumn","class","leftColumnCount","centerColumnCount","calcNewSorts","s","calcStylesByGroup","headerWidth","dealsWithGroup","DataTableHeaderCellComponent","throttle","func","wait","args","result","previous","later","leading","Date","remaining","trailing","removeProcessedColumns","columnsToResize","columnsProcessed","e_6","columnsProcessed_1","columnsProcessed_1_1","e_6_1","getContentWidth","allColumns","defaultColWidth","e_7","contentWidth","allColumns_1","allColumns_1_1","e_7_1","orderByComparator","isFinite","DatatableComponent","scrollbarHelper","dimensionsHelper","configuration","columnMode","externalSorting","swapColumns","selectAllRowsOnPage","tableContextmenu","_count","_subscriptions","rowDiffer","_internalRows","sortInternalRows","treeFromRelation","treeToRelation","recalculate","_groupRowsBy","groupArrayBy","recalculateColumns","_limit","_columnTemplates","translateColumns","bodyComponent","limit","columnTemplates","v","listenForColumnInputChanges","templates","e_3","templates_1","templates_1_1","props","getOwnPropertyNames","props_1","props_1_1","e_3_1","translateTemplates","originalArray","groupBy","ngDoCheck","recalculatePages","recalculateDims","onWindowResize","forceIdx","allowBleed","expectedWidth","startIdx","e_4","e_5","columnsToResize_1","columnsToResize_1_1","$$oldWidth","e_4_1","additionWidthPerColumn","exceedsWindow","remainingWidth","columnsToResize_2","columnsToResize_2_1","newSize","e_5_1","forceFillColumnWidths","columnsWidth","columns_2","columns_2_1","columnsTotalWidth","totalFlexGrow","getTotalFlexGrow","colsByGroup","hasMinWidth","widthPerFlexPoint","_e","_f","scaleColumns","dims","calcPageSize","calcRowCount","onBodyPage","onRowContextmenu","prevCol","movedCol","allSelected","onBodySelect","findIndex","r","columnInputChanges$","notifyOnChanges","dirs","rowToIndexMap","cachedDirs","valueGetter","compareFn","rowA","rowB","cachedDirs_1","cachedDirs_1_1","cachedDir","propA","propB","comparison","sortRows","descriptor","Function","headerComponent","isFixedHeader","isFixedRow","isVertScroll","isVirtualized","isHorScroll","isSelectable","isCheckboxSelection","isCellSelection","isSingleSelection","isMultiSelection","isMultiClickSelection","DataTableFooterComponent","pipes","sortFn","selectFn","sortDir","_allRowsSelected","_column","_sorts","calcSortDir","sortClass","calcSortClass","cls","res","keys_1","keys_1_1","k","onContextmenu","columnCssClasses","isCheckboxable","DataTablePagerComponent","_page","_size","pages","calcPages","canPrevious","canNext","totalPages","prevPage","nextPage","startPage","endPage","maxSize","num","Keys","up","down","escape","_element","_rowDiffer","buildStylesByGroup","cellIndex","rowElement","onKeyDown","keyCode","onMouseenter","columnsTotalWidths","DataTableBodyCellComponent","_expanded","_rowIndex","isFocused","onCheckboxChangeFn","activateFn","_group","checkValueUpdates","_rowHeight","_isSelected","_row","_treeStatus","status","userPipe","stripHtml","onFocus","onBlur","onClick","cellElement","onDblClick","calcLeftMargin","selectRows","comparefn","selectedIndex","selectRow","chkbox","multiClick","shiftKey","reverse","range","end","selectRowsBetween","getRowSelectedIdx","ctrlKey","metaKey","onKeyboardFocus","focusCell","focusRow","nextRowElement","getPrevNextRow","focusElement","previousElementSibling","nextElementSibling","nextCellElement","getElementsByClassName","rowId","defaultSumFunc","cells","cellsWithValues","cell","noopSumFunc","updateInternalColumns","updateValues","cellsFromSingleColumn","sumFunc","getSummaryFunction","NgxDatatableModule","forRoot","ngModule","useValue","previousPointerEvents","elementFromPoint","getPropertyValue","priority","getPropertyPriority","setProperty","items","textClass","doBlur","doFocus","itemsFiltered","isOpen","clickOut","BehaviorSubject","counter","maxItemsVisibles","isItemSelected","itemId","itemTextId","maxListHeight","cumulativeHeight","itemElementArray","subscriptions","formGroup","valueChanges","filterList","sub","clickedOutside","toElement","offsetParent","containerId","includes","selectItem","setValue","itemSelected","checkItemSelected","applyFilter","restartList","itemElement","calculateMaxItems","activateItem","increase","itemActived","calculatePositionScroll","scrollear","resultElement","focusInput","valFocus","maxItems","prev","cur","AutocompleteComponent","PipesModule","StatePipe","identification_number","first_name","last_name","FormatCustomerPipe","notifier","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","notifierSubscription","seenValue","innerSub","RequestTypePipe"],"mappings":"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","file":"1.46d5762d408439621de4.js","sourcesContent":["/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();\nvar activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport var TestTools = {\n    pending: function () {\n        return Object.keys(activeHandles).length;\n    }\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = void 0;\n            try {\n                var durationSelector = this.durationSelector;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            var innerSubscription = subscribeToResult(this, duration);\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        var pair;\n        if (this.hasPrev) {\n            pair = [this.prev, value];\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n        if (pair) {\n            this.destination.next(pair);\n        }\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { __extends, __values, __read } from 'tslib';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nvar _c0 = [\"contentWrapper\"];\nvar _c1 = [\"*\"];\nvar VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nvar FixedSizeVirtualScrollStrategy = /** @class */ (function () {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    function FixedSizeVirtualScrollStrategy(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    FixedSizeVirtualScrollStrategy.prototype.attach = function (viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    FixedSizeVirtualScrollStrategy.prototype.detach = function () {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    };\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    FixedSizeVirtualScrollStrategy.prototype.updateItemAndBufferSize = function (itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    FixedSizeVirtualScrollStrategy.prototype.onContentScrolled = function () {\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    FixedSizeVirtualScrollStrategy.prototype.onDataLengthChanged = function () {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    FixedSizeVirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    FixedSizeVirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    };\n    /** Update the viewport's total content size. */\n    FixedSizeVirtualScrollStrategy.prototype._updateTotalContentSize = function () {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    };\n    /** Update the viewport's rendered range. */\n    FixedSizeVirtualScrollStrategy.prototype._updateRenderedRange = function () {\n        if (!this._viewport) {\n            return;\n        }\n        var scrollOffset = this._viewport.measureScrollOffset();\n        var firstVisibleIndex = scrollOffset / this._itemSize;\n        var renderedRange = this._viewport.getRenderedRange();\n        var newRange = { start: renderedRange.start, end: renderedRange.end };\n        var viewportSize = this._viewport.getViewportSize();\n        var dataLength = this._viewport.getDataLength();\n        var startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            var endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    };\n    return FixedSizeVirtualScrollStrategy;\n}());\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nvar CdkFixedSizeVirtualScroll = /** @class */ (function () {\n    function CdkFixedSizeVirtualScroll() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"itemSize\", {\n        /** The size of the items in the list (in pixels). */\n        get: function () { return this._itemSize; },\n        set: function (value) { this._itemSize = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"minBufferPx\", {\n        /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         */\n        get: function () { return this._minBufferPx; },\n        set: function (value) { this._minBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"maxBufferPx\", {\n        /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         */\n        get: function () { return this._maxBufferPx; },\n        set: function (value) { this._maxBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    CdkFixedSizeVirtualScroll.prototype.ngOnChanges = function () {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    };\n    CdkFixedSizeVirtualScroll.propDecorators = {\n        itemSize: [{ type: Input }],\n        minBufferPx: [{ type: Input }],\n        maxBufferPx: [{ type: Input }]\n    };\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(function () { return CdkFixedSizeVirtualScroll; })]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(function () { return CdkFixedSizeVirtualScroll; })]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n    return CdkFixedSizeVirtualScroll;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = /** @class */ (function () {\n    function ScrollDispatcher(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    ScrollDispatcher.prototype.register = function (scrollable) {\n        var _this = this;\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(function () { return _this._scrolled.next(scrollable); }));\n        }\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    ScrollDispatcher.prototype.deregister = function (scrollable) {\n        var scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    };\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    ScrollDispatcher.prototype.scrolled = function (auditTimeInMs) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable(function (observer) {\n            if (!_this._globalSubscription) {\n                _this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            var subscription = auditTimeInMs > 0 ?\n                _this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                _this._scrolled.subscribe(observer);\n            _this._scrolledCount++;\n            return function () {\n                subscription.unsubscribe();\n                _this._scrolledCount--;\n                if (!_this._scrolledCount) {\n                    _this._removeGlobalListener();\n                }\n            };\n        });\n    };\n    ScrollDispatcher.prototype.ngOnDestroy = function () {\n        var _this = this;\n        this._removeGlobalListener();\n        this.scrollContainers.forEach(function (_, container) { return _this.deregister(container); });\n        this._scrolled.complete();\n    };\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ScrollDispatcher.prototype.ancestorScrolled = function (elementRef, auditTimeInMs) {\n        var ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(function (target) {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    };\n    /** Returns all registered Scrollables that contain the provided element. */\n    ScrollDispatcher.prototype.getAncestorScrollContainers = function (elementRef) {\n        var _this = this;\n        var scrollingContainers = [];\n        this.scrollContainers.forEach(function (_subscription, scrollable) {\n            if (_this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    };\n    /** Access injected document if available or fallback to global document reference */\n    ScrollDispatcher.prototype._getDocument = function () {\n        return this._document || document;\n    };\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    ScrollDispatcher.prototype._getWindow = function () {\n        var doc = this._getDocument();\n        return doc.defaultView || window;\n    };\n    /** Returns true if the element is contained within the provided Scrollable. */\n    ScrollDispatcher.prototype._scrollableContainsElement = function (scrollable, elementRef) {\n        var element = elementRef.nativeElement;\n        var scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    };\n    /** Sets up the global scroll listeners. */\n    ScrollDispatcher.prototype._addGlobalListener = function () {\n        var _this = this;\n        this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n            var window = _this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(function () { return _this._scrolled.next(); });\n        });\n    };\n    /** Cleans up the global scroll listener. */\n    ScrollDispatcher.prototype._removeGlobalListener = function () {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    };\n    /** @nocollapse */\n    ScrollDispatcher.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Platform },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ScrollDispatcher;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar CdkScrollable = /** @class */ (function () {\n    function CdkScrollable(elementRef, scrollDispatcher, ngZone, dir) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable(function (observer) {\n            return _this.ngZone.runOutsideAngular(function () {\n                return fromEvent(_this.elementRef.nativeElement, 'scroll').pipe(takeUntil(_this._destroyed))\n                    .subscribe(observer);\n            });\n        });\n    }\n    CdkScrollable.prototype.ngOnInit = function () {\n        this.scrollDispatcher.register(this);\n    };\n    CdkScrollable.prototype.ngOnDestroy = function () {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    CdkScrollable.prototype.elementScrolled = function () {\n        return this._elementScrolled;\n    };\n    /** Gets the ElementRef for the viewport. */\n    CdkScrollable.prototype.getElementRef = function () {\n        return this.elementRef;\n    };\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    CdkScrollable.prototype.scrollTo = function (options) {\n        var el = this.elementRef.nativeElement;\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    };\n    CdkScrollable.prototype._applyScrollToOptions = function (options) {\n        var el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    };\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    CdkScrollable.prototype.measureScrollOffset = function (from) {\n        var LEFT = 'left';\n        var RIGHT = 'right';\n        var el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    };\n    /** @nocollapse */\n    CdkScrollable.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n    return CdkScrollable;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nvar DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nvar ViewportRuler = /** @class */ (function () {\n    function ViewportRuler(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        var _this = this;\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular(function () {\n            var window = _this._getWindow();\n            _this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            _this._invalidateCache = _this.change().subscribe(function () { return _this._updateViewportSize(); });\n        });\n    }\n    ViewportRuler.prototype.ngOnDestroy = function () {\n        this._invalidateCache.unsubscribe();\n    };\n    /** Returns the viewport's width and height. */\n    ViewportRuler.prototype.getViewportSize = function () {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        var output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    };\n    /** Gets a ClientRect for the viewport's bounds. */\n    ViewportRuler.prototype.getViewportRect = function () {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        var scrollPosition = this.getViewportScrollPosition();\n        var _a = this.getViewportSize(), width = _a.width, height = _a.height;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /** Gets the (top, left) scroll position of the viewport. */\n    ViewportRuler.prototype.getViewportScrollPosition = function () {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        var document = this._getDocument();\n        var window = this._getWindow();\n        var documentElement = document.documentElement;\n        var documentRect = documentElement.getBoundingClientRect();\n        var top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        var left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    ViewportRuler.prototype.change = function (throttleTime) {\n        if (throttleTime === void 0) { throttleTime = DEFAULT_RESIZE_TIME; }\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    };\n    /** Access injected document if available or fallback to global document reference */\n    ViewportRuler.prototype._getDocument = function () {\n        return this._document || document;\n    };\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    ViewportRuler.prototype._getWindow = function () {\n        var doc = this._getDocument();\n        return doc.defaultView || window;\n    };\n    /** Updates the cached viewport size. */\n    ViewportRuler.prototype._updateViewportSize = function () {\n        var window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    };\n    /** @nocollapse */\n    ViewportRuler.ctorParameters = function () { return [\n        { type: Platform },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ViewportRuler;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nvar SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nvar CdkVirtualScrollViewport = /** @class */ (function (_super) {\n    __extends(CdkVirtualScrollViewport, _super);\n    function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        var _this = _super.call(this, elementRef, scrollDispatcher, ngZone, dir) || this;\n        _this.elementRef = elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        _this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        _this._renderedRangeSubject = new Subject();\n        _this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        _this.scrolledIndexChange = new Observable(function (observer) {\n            return _this._scrollStrategy.scrolledIndexChange.subscribe(function (index) {\n                return Promise.resolve().then(function () { return _this.ngZone.run(function () { return observer.next(index); }); });\n            });\n        });\n        /** A stream that emits whenever the rendered range changes. */\n        _this.renderedRangeStream = _this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        _this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        _this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        _this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        _this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        _this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        _this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        _this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        _this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        _this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        _this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        _this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            _this._viewportChanges = viewportRuler.change().subscribe(function () {\n                _this.checkViewportSize();\n            });\n        }\n        return _this;\n    }\n    Object.defineProperty(CdkVirtualScrollViewport.prototype, \"orientation\", {\n        /** The direction the viewport scrolls. */\n        get: function () {\n            return this._orientation;\n        },\n        set: function (orientation) {\n            if (this._orientation !== orientation) {\n                this._orientation = orientation;\n                this._calculateSpacerSize();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CdkVirtualScrollViewport.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n            _this._measureViewportSize();\n            _this._scrollStrategy.attach(_this);\n            _this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(function () { return _this._scrollStrategy.onContentScrolled(); });\n            _this._markChangeDetectionNeeded();\n        }); });\n    };\n    CdkVirtualScrollViewport.prototype.ngOnDestroy = function () {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    /** Attaches a `CdkVirtualForOf` to this viewport. */\n    CdkVirtualScrollViewport.prototype.attach = function (forOf) {\n        var _this = this;\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(function () {\n            _this._forOf = forOf;\n            _this._forOf.dataStream.pipe(takeUntil(_this._detachedSubject)).subscribe(function (data) {\n                var newLength = data.length;\n                if (newLength !== _this._dataLength) {\n                    _this._dataLength = newLength;\n                    _this._scrollStrategy.onDataLengthChanged();\n                }\n                _this._doChangeDetection();\n            });\n        });\n    };\n    /** Detaches the current `CdkVirtualForOf`. */\n    CdkVirtualScrollViewport.prototype.detach = function () {\n        this._forOf = null;\n        this._detachedSubject.next();\n    };\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    CdkVirtualScrollViewport.prototype.getDataLength = function () {\n        return this._dataLength;\n    };\n    /** Gets the size of the viewport (in pixels). */\n    CdkVirtualScrollViewport.prototype.getViewportSize = function () {\n        return this._viewportSize;\n    };\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    CdkVirtualScrollViewport.prototype.getRenderedRange = function () {\n        return this._renderedRange;\n    };\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    CdkVirtualScrollViewport.prototype.setTotalContentSize = function (size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    };\n    /** Sets the currently rendered range of indices. */\n    CdkVirtualScrollViewport.prototype.setRenderedRange = function (range) {\n        var _this = this;\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(function () { return _this._scrollStrategy.onContentRendered(); });\n        }\n    };\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    CdkVirtualScrollViewport.prototype.getOffsetToRenderedContentStart = function () {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    };\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedContentOffset = function (offset, to) {\n        var _this = this;\n        if (to === void 0) { to = 'to-start'; }\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        var isHorizontal = this.orientation == 'horizontal';\n        var axis = isHorizontal ? 'X' : 'Y';\n        var axisDirection = isHorizontal && isRtl ? -1 : 1;\n        var transform = \"translate\" + axis + \"(\" + Number(axisDirection * offset) + \"px)\";\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += \" translate\" + axis + \"(-100%)\";\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(function () {\n                if (_this._renderedContentOffsetNeedsRewrite) {\n                    _this._renderedContentOffset -= _this.measureRenderedContentSize();\n                    _this._renderedContentOffsetNeedsRewrite = false;\n                    _this.setRenderedContentOffset(_this._renderedContentOffset);\n                }\n                else {\n                    _this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    };\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    CdkVirtualScrollViewport.prototype.scrollToOffset = function (offset, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        var options = { behavior: behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    };\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    CdkVirtualScrollViewport.prototype.scrollToIndex = function (index, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    };\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    CdkVirtualScrollViewport.prototype.measureScrollOffset = function (from) {\n        return from ?\n            _super.prototype.measureScrollOffset.call(this, from) :\n            _super.prototype.measureScrollOffset.call(this, this.orientation === 'horizontal' ? 'start' : 'top');\n    };\n    /** Measure the combined size of all of the rendered items. */\n    CdkVirtualScrollViewport.prototype.measureRenderedContentSize = function () {\n        var contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    };\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    CdkVirtualScrollViewport.prototype.measureRangeSize = function (range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    };\n    /** Update the viewport dimensions and re-render. */\n    CdkVirtualScrollViewport.prototype.checkViewportSize = function () {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    };\n    /** Measure the viewport size. */\n    CdkVirtualScrollViewport.prototype._measureViewportSize = function () {\n        var viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    };\n    /** Queue up change detection to run. */\n    CdkVirtualScrollViewport.prototype._markChangeDetectionNeeded = function (runAfter) {\n        var _this = this;\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(function () { return Promise.resolve().then(function () {\n                _this._doChangeDetection();\n            }); });\n        }\n    };\n    /** Run change detection. */\n    CdkVirtualScrollViewport.prototype._doChangeDetection = function () {\n        var e_1, _a;\n        var _this = this;\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(function () { return _this._changeDetectorRef.markForCheck(); });\n        var runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        try {\n            for (var runAfterChangeDetection_1 = __values(runAfterChangeDetection), runAfterChangeDetection_1_1 = runAfterChangeDetection_1.next(); !runAfterChangeDetection_1_1.done; runAfterChangeDetection_1_1 = runAfterChangeDetection_1.next()) {\n                var fn = runAfterChangeDetection_1_1.value;\n                fn();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (runAfterChangeDetection_1_1 && !runAfterChangeDetection_1_1.done && (_a = runAfterChangeDetection_1.return)) _a.call(runAfterChangeDetection_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    CdkVirtualScrollViewport.prototype._calculateSpacerSize = function () {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : this._totalContentSize + \"px\";\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? this._totalContentSize + \"px\" : '';\n    };\n    /** @nocollapse */\n    CdkVirtualScrollViewport.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ScrollDispatcher },\n        { type: ViewportRuler, decorators: [{ type: Optional }] }\n    ]; };\n    CdkVirtualScrollViewport.propDecorators = {\n        orientation: [{ type: Input }],\n        scrolledIndexChange: [{ type: Output }],\n        _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n    };\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { orientation: [{\n            type: Input\n        }], scrolledIndexChange: [{\n            type: Output\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n    return CdkVirtualScrollViewport;\n}(CdkScrollable));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract size from a DOM Node. */\nfunction getSize(orientation, node) {\n    var el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    var rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nvar CdkVirtualForOf = /** @class */ (function () {\n    function CdkVirtualForOf(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        var _this = this;\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(function (_a) {\n            var _b = __read(_a, 2), prev = _b[0], cur = _b[1];\n            return _this._changeDataSource(prev, cur);\n        }), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(function (data) {\n            _this._data = data;\n            _this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(function (range) {\n            _this._renderedRange = range;\n            ngZone.run(function () { return _this.viewChange.next(_this._renderedRange); });\n            _this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForOf\", {\n        /** The DataSource to display. */\n        get: function () {\n            return this._cdkVirtualForOf;\n        },\n        set: function (value) {\n            this._cdkVirtualForOf = value;\n            if (isDataSource(value)) {\n                this._dataSourceChanges.next(value);\n            }\n            else {\n                // Slice the value if its an NgIterable to ensure we're working with an array.\n                this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTrackBy\", {\n        /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         */\n        get: function () {\n            return this._cdkVirtualForTrackBy;\n        },\n        set: function (fn) {\n            var _this = this;\n            this._needsUpdate = true;\n            this._cdkVirtualForTrackBy = fn ?\n                function (index, item) { return fn(index + (_this._renderedRange ? _this._renderedRange.start : 0), item); } :\n                undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTemplate\", {\n        /** The template used to stamp out new elements. */\n        set: function (value) {\n            if (value) {\n                this._needsUpdate = true;\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    CdkVirtualForOf.prototype.measureRangeSize = function (range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(\"Error: attempted to measure an item that isn't rendered.\");\n        }\n        // The index into the list of rendered views for the first item in the range.\n        var renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        var rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        var totalSize = 0;\n        var i = rangeLen;\n        while (i--) {\n            var view = this._viewContainerRef.get(i + renderedStartIndex);\n            var j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, view.rootNodes[j]);\n            }\n        }\n        return totalSize;\n    };\n    CdkVirtualForOf.prototype.ngDoCheck = function () {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            var changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    };\n    CdkVirtualForOf.prototype.ngOnDestroy = function () {\n        var e_1, _a;\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        try {\n            for (var _b = __values(this._templateCache), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var view = _c.value;\n                view.destroy();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** React to scroll state changes in the viewport. */\n    CdkVirtualForOf.prototype._onRenderedDataChange = function () {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    };\n    /** Swap out one `DataSource` for another. */\n    CdkVirtualForOf.prototype._changeDataSource = function (oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    };\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    CdkVirtualForOf.prototype._updateContext = function () {\n        var count = this._data.length;\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            var view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    };\n    /** Apply changes to the DOM. */\n    CdkVirtualForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation(function (record, adjustedPreviousIndex, currentIndex) {\n            if (record.previousIndex == null) { // Item added.\n                var view = _this._insertViewForNewItem(currentIndex);\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                _this._cacheView(_this._detachView(adjustedPreviousIndex));\n            }\n            else { // Item moved.\n                var view = _this._viewContainerRef.get(adjustedPreviousIndex);\n                _this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        });\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange(function (record) {\n            var view = _this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        var count = this._data.length;\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            var view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    };\n    /** Cache the given detached view. */\n    CdkVirtualForOf.prototype._cacheView = function (view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            var index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    };\n    /** Inserts a view for a new item, either from the cache or by creating a new one. */\n    CdkVirtualForOf.prototype._insertViewForNewItem = function (index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    };\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    CdkVirtualForOf.prototype._updateComputedContextProperties = function (context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    };\n    /** Creates a new embedded view and moves it to the given index */\n    CdkVirtualForOf.prototype._createEmbeddedViewAt = function (index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: null,\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    };\n    /** Inserts a recycled view from the cache at the given index. */\n    CdkVirtualForOf.prototype._insertViewFromCache = function (index) {\n        var cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    };\n    /** Detaches the embedded view at the given index. */\n    CdkVirtualForOf.prototype._detachView = function (index) {\n        return this._viewContainerRef.detach(index);\n    };\n    /** @nocollapse */\n    CdkVirtualForOf.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: IterableDiffers },\n        { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n        { type: NgZone }\n    ]; };\n    CdkVirtualForOf.propDecorators = {\n        cdkVirtualForOf: [{ type: Input }],\n        cdkVirtualForTrackBy: [{ type: Input }],\n        cdkVirtualForTemplate: [{ type: Input }],\n        cdkVirtualForTemplateCacheSize: [{ type: Input }]\n    };\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n    return CdkVirtualForOf;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CdkScrollableModule = /** @class */ (function () {\n    function CdkScrollableModule() {\n    }\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], function () { return []; }, null); })();\n    return CdkScrollableModule;\n}());\nvar ScrollingModule = /** @class */ (function () {\n    function ScrollingModule() {\n    }\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return ScrollingModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { __extends } from 'tslib';\nimport { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nvar Portal = /** @class */ (function () {\n    function Portal() {\n    }\n    /** Attach this portal to a host. */\n    Portal.prototype.attach = function (host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    };\n    /** Detach this portal from its host */\n    Portal.prototype.detach = function () {\n        var host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    Portal.prototype.setAttachedHost = function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nvar ComponentPortal = /** @class */ (function (_super) {\n    __extends(ComponentPortal, _super);\n    function ComponentPortal(component, viewContainerRef, injector, componentFactoryResolver) {\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        _this.componentFactoryResolver = componentFactoryResolver;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nvar TemplatePortal = /** @class */ (function (_super) {\n    __extends(TemplatePortal, _super);\n    function TemplatePortal(template, viewContainerRef, context) {\n        var _this = _super.call(this) || this;\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        _this.context = context;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        get: function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    TemplatePortal.prototype.attach = function (host, context) {\n        if (context === void 0) { context = this.context; }\n        this.context = context;\n        return _super.prototype.attach.call(this, host);\n    };\n    TemplatePortal.prototype.detach = function () {\n        this.context = undefined;\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nvar DomPortal = /** @class */ (function (_super) {\n    __extends(DomPortal, _super);\n    function DomPortal(element) {\n        var _this = _super.call(this) || this;\n        _this.element = element instanceof ElementRef ? element.nativeElement : element;\n        return _this;\n    }\n    return DomPortal;\n}(Portal));\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nvar BasePortalOutlet = /** @class */ (function () {\n    function BasePortalOutlet() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    BasePortalOutlet.prototype.hasAttached = function () {\n        return !!this._attachedPortal;\n    };\n    /** Attaches a portal. */\n    BasePortalOutlet.prototype.attach = function (portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    };\n    /** Detaches a previously attached portal. */\n    BasePortalOutlet.prototype.detach = function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    };\n    /** Permanently dispose of this portal host. */\n    BasePortalOutlet.prototype.dispose = function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    };\n    /** @docs-private */\n    BasePortalOutlet.prototype.setDisposeFn = function (fn) {\n        this._disposeFn = fn;\n    };\n    BasePortalOutlet.prototype._invokeDisposeFn = function () {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    return BasePortalOutlet;\n}());\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nvar BasePortalHost = /** @class */ (function (_super) {\n    __extends(BasePortalHost, _super);\n    function BasePortalHost() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BasePortalHost;\n}(BasePortalOutlet));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nvar DomPortalOutlet = /** @class */ (function (_super) {\n    __extends(DomPortalOutlet, _super);\n    function DomPortalOutlet(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        var _this = _super.call(this) || this;\n        _this.outletElement = outletElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        _this.attachDomPortal = function (portal) {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!_this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            var element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            var anchorNode = _this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            _this.outletElement.appendChild(element);\n            _super.prototype.setDisposeFn.call(_this, function () {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        _this._document = _document;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    DomPortalOutlet.prototype.attachComponentPortal = function (portal) {\n        var _this = this;\n        var resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        var componentFactory = resolver.resolveComponentFactory(portal.component);\n        var componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    DomPortalOutlet.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        var viewContainer = portal.viewContainerRef;\n        var viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(function (rootNode) { return _this.outletElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            var index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    DomPortalOutlet.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    };\n    /** Gets the root HTMLElement for an instantiated component. */\n    DomPortalOutlet.prototype._getComponentRootNode = function (componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    };\n    return DomPortalOutlet;\n}(BasePortalOutlet));\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nvar DomPortalHost = /** @class */ (function (_super) {\n    __extends(DomPortalHost, _super);\n    function DomPortalHost() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DomPortalHost;\n}(DomPortalOutlet));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nvar CdkPortal = /** @class */ (function (_super) {\n    __extends(CdkPortal, _super);\n    function CdkPortal(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    /** @nocollapse */\n    CdkPortal.ctorParameters = function () { return [\n        { type: TemplateRef },\n        { type: ViewContainerRef }\n    ]; };\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n    return CdkPortal;\n}(TemplatePortal));\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nvar TemplatePortalDirective = /** @class */ (function (_super) {\n    __extends(TemplatePortalDirective, _super);\n    function TemplatePortalDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n    return TemplatePortalDirective;\n}(CdkPortal));\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nvar CdkPortalOutlet = /** @class */ (function (_super) {\n    __extends(CdkPortalOutlet, _super);\n    function CdkPortalOutlet(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        _this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        _this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        _this.attachDomPortal = function (portal) {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!_this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            var element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            var anchorNode = _this._document.createComment('dom-portal');\n            portal.setAttachedHost(_this);\n            element.parentNode.insertBefore(anchorNode, element);\n            _this._getRootNode().appendChild(element);\n            _super.prototype.setDisposeFn.call(_this, function () {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        _this._document = _document;\n        return _this;\n    }\n    Object.defineProperty(CdkPortalOutlet.prototype, \"portal\", {\n        /** Portal associated with the Portal outlet. */\n        get: function () {\n            return this._attachedPortal;\n        },\n        set: function (portal) {\n            // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n            // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n            // and attach a portal programmatically in the parent component. When Angular does the first CD\n            // round, it will fire the setter with empty string, causing the user's content to be cleared.\n            if (this.hasAttached() && !portal && !this._isInitialized) {\n                return;\n            }\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._attachedPortal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"attachedRef\", {\n        /** Component or view reference that is attached to the portal. */\n        get: function () {\n            return this._attachedRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CdkPortalOutlet.prototype.ngOnInit = function () {\n        this._isInitialized = true;\n    };\n    CdkPortalOutlet.prototype.ngOnDestroy = function () {\n        _super.prototype.dispose.call(this);\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    };\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    CdkPortalOutlet.prototype.attachComponentPortal = function (portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        var viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        var resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        var componentFactory = resolver.resolveComponentFactory(portal.component);\n        var ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    };\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    CdkPortalOutlet.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        var viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    };\n    /** Gets the root node of the portal outlet. */\n    CdkPortalOutlet.prototype._getRootNode = function () {\n        var nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : nativeElement.parentNode);\n    };\n    /** @nocollapse */\n    CdkPortalOutlet.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    CdkPortalOutlet.propDecorators = {\n        attached: [{ type: Output }]\n    };\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\n    return CdkPortalOutlet;\n}(BasePortalOutlet));\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nvar PortalHostDirective = /** @class */ (function (_super) {\n    __extends(PortalHostDirective, _super);\n    function PortalHostDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nvar ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\n    return PortalHostDirective;\n}(CdkPortalOutlet));\nvar PortalModule = /** @class */ (function () {\n    function PortalModule() {\n    }\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return PortalModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n */\nvar PortalInjector = /** @class */ (function () {\n    function PortalInjector(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    PortalInjector.prototype.get = function (token, notFoundValue) {\n        var value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return PortalInjector;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { __values, __assign, __read, __extends } from 'tslib';\nimport { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nvar BlockScrollStrategy = /** @class */ (function () {\n    function BlockScrollStrategy(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    BlockScrollStrategy.prototype.attach = function () { };\n    /** Blocks page-level scroll while the attached overlay is open. */\n    BlockScrollStrategy.prototype.enable = function () {\n        if (this._canBeEnabled()) {\n            var root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    };\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    BlockScrollStrategy.prototype.disable = function () {\n        if (this._isEnabled) {\n            var html = this._document.documentElement;\n            var body = this._document.body;\n            var htmlStyle = html.style;\n            var bodyStyle = body.style;\n            var previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            var previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    };\n    BlockScrollStrategy.prototype._canBeEnabled = function () {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        var html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        var body = this._document.body;\n        var viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    };\n    return BlockScrollStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(\"Scroll strategy has already been attached.\");\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nvar CloseScrollStrategy = /** @class */ (function () {\n    function CloseScrollStrategy(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = function () {\n            _this.disable();\n            if (_this._overlayRef.hasAttached()) {\n                _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    CloseScrollStrategy.prototype.attach = function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables the closing of the attached overlay on scroll. */\n    CloseScrollStrategy.prototype.enable = function () {\n        var _this = this;\n        if (this._scrollSubscription) {\n            return;\n        }\n        var stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(function () {\n                var scrollPosition = _this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - _this._initialScrollPosition) > _this._config.threshold) {\n                    _this._detach();\n                }\n                else {\n                    _this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    };\n    /** Disables the closing the attached overlay on scroll. */\n    CloseScrollStrategy.prototype.disable = function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    CloseScrollStrategy.prototype.detach = function () {\n        this.disable();\n        this._overlayRef = null;\n    };\n    return CloseScrollStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nvar NoopScrollStrategy = /** @class */ (function () {\n    function NoopScrollStrategy() {\n    }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    NoopScrollStrategy.prototype.enable = function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    NoopScrollStrategy.prototype.disable = function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    NoopScrollStrategy.prototype.attach = function () { };\n    return NoopScrollStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(function (containerBounds) {\n        var outsideAbove = element.bottom < containerBounds.top;\n        var outsideBelow = element.top > containerBounds.bottom;\n        var outsideLeft = element.right < containerBounds.left;\n        var outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(function (scrollContainerRect) {\n        var clippedAbove = element.top < scrollContainerRect.top;\n        var clippedBelow = element.bottom > scrollContainerRect.bottom;\n        var clippedLeft = element.left < scrollContainerRect.left;\n        var clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nvar RepositionScrollStrategy = /** @class */ (function () {\n    function RepositionScrollStrategy(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    RepositionScrollStrategy.prototype.attach = function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables repositioning of the attached overlay on scroll. */\n    RepositionScrollStrategy.prototype.enable = function () {\n        var _this = this;\n        if (!this._scrollSubscription) {\n            var throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(function () {\n                _this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (_this._config && _this._config.autoClose) {\n                    var overlayRect = _this._overlayRef.overlayElement.getBoundingClientRect();\n                    var _a = _this._viewportRuler.getViewportSize(), width = _a.width, height = _a.height;\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    var parentRects = [{ width: width, height: height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        _this.disable();\n                        _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n                    }\n                }\n            });\n        }\n    };\n    /** Disables repositioning of the attached overlay on scroll. */\n    RepositionScrollStrategy.prototype.disable = function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    RepositionScrollStrategy.prototype.detach = function () {\n        this.disable();\n        this._overlayRef = null;\n    };\n    return RepositionScrollStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nvar ScrollStrategyOptions = /** @class */ (function () {\n    function ScrollStrategyOptions(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = function () { return new NoopScrollStrategy(); };\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = function (config) { return new CloseScrollStrategy(_this._scrollDispatcher, _this._ngZone, _this._viewportRuler, config); };\n        /** Block scrolling. */\n        this.block = function () { return new BlockScrollStrategy(_this._viewportRuler, _this._document); };\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = function (config) { return new RepositionScrollStrategy(_this._scrollDispatcher, _this._viewportRuler, _this._ngZone, config); };\n        this._document = document;\n    }\n    /** @nocollapse */\n    ScrollStrategyOptions.ctorParameters = function () { return [\n        { type: ScrollDispatcher },\n        { type: ViewportRuler },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ScrollStrategyOptions;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nvar OverlayConfig = /** @class */ (function () {\n    function OverlayConfig(config) {\n        var e_1, _a;\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            var configKeys = Object.keys(config);\n            try {\n                for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\n                    var key = configKeys_1_1.value;\n                    if (config[key] !== undefined) {\n                        // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                        // as \"I don't know *which* key this is, so the only valid value is the intersection\n                        // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                        // is not smart enough to see that the right-hand-side is actually an access of the same\n                        // exact type with the same exact key, meaning that the value type must be identical.\n                        // So we use `any` to work around this.\n                        this[key] = config[key];\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n    }\n    return OverlayConfig;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nvar ConnectionPositionPair = /** @class */ (function () {\n    function ConnectionPositionPair(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nvar ScrollingVisibility = /** @class */ (function () {\n    function ScrollingVisibility() {\n    }\n    return ScrollingVisibility;\n}());\n/** The change event emitted by the strategy when a fallback position is used. */\nvar ConnectedOverlayPositionChange = /** @class */ (function () {\n    function ConnectedOverlayPositionChange(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    /** @nocollapse */\n    ConnectedOverlayPositionChange.ctorParameters = function () { return [\n        { type: ConnectionPositionPair },\n        { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n    ]; };\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"top\\\", \\\"bottom\\\" or \\\"center\\\".\");\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"start\\\", \\\"end\\\" or \\\"center\\\".\");\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nvar OverlayKeyboardDispatcher = /** @class */ (function () {\n    function OverlayKeyboardDispatcher(document) {\n        var _this = this;\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = function (event) {\n            var overlays = _this._attachedOverlays;\n            for (var i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n        this._document = document;\n    }\n    OverlayKeyboardDispatcher.prototype.ngOnDestroy = function () {\n        this._detach();\n    };\n    /** Add a new overlay to the list of attached overlay refs. */\n    OverlayKeyboardDispatcher.prototype.add = function (overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    };\n    /** Remove an overlay from the list of attached overlay refs. */\n    OverlayKeyboardDispatcher.prototype.remove = function (overlayRef) {\n        var index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    };\n    /** Detaches the global keyboard event listener. */\n    OverlayKeyboardDispatcher.prototype._detach = function () {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    };\n    /** @nocollapse */\n    OverlayKeyboardDispatcher.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return OverlayKeyboardDispatcher;\n}());\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nvar OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n */\nvar isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(window.__karma__ || window.jasmine);\n/** Container inside which all overlays will render. */\nvar OverlayContainer = /** @class */ (function () {\n    function OverlayContainer(document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    OverlayContainer.prototype.ngOnDestroy = function () {\n        var container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    };\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    OverlayContainer.prototype.getContainerElement = function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    OverlayContainer.prototype._createContainer = function () {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        var isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        var containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            var oppositePlatformContainers = this._document.querySelectorAll(\".\" + containerClass + \"[platform=\\\"server\\\"], \" +\n                (\".\" + containerClass + \"[platform=\\\"test\\\"]\"));\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (var i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        var container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    /** @nocollapse */\n    OverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform }\n    ]; };\n    OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n    return OverlayContainer;\n}());\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nvar OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = /** @class */ (function () {\n    function OverlayRef(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, \n    // @breaking-change 8.0.0 `_location` parameter to be made required.\n    _location) {\n        var _this = this;\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = function (event) { return _this._backdropClick.next(event); };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /** The overlay's HTML element */\n        get: function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"backdropElement\", {\n        /** The overlay's backdrop HTML element. */\n        get: function () {\n            return this._backdropElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"hostElement\", {\n        /**\n         * Wrapper around the panel element. Can be used for advanced\n         * positioning where a wrapper with specific styling is\n         * required around the overlay pane.\n         */\n        get: function () {\n            return this._host;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    OverlayRef.prototype.attach = function (portal) {\n        var _this = this;\n        var attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(function () {\n            // The overlay could've been detached before the zone has stabilized.\n            if (_this.hasAttached()) {\n                _this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe(function () { return _this.dispose(); });\n        }\n        return attachResult;\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    OverlayRef.prototype.detach = function () {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        var detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    };\n    /** Cleans up the overlay from the DOM. */\n    OverlayRef.prototype.dispose = function () {\n        var isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = null;\n        }\n        this._previousHostParent = this._pane = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    };\n    /** Whether the overlay has attached content. */\n    OverlayRef.prototype.hasAttached = function () {\n        return this._portalOutlet.hasAttached();\n    };\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    OverlayRef.prototype.backdropClick = function () {\n        return this._backdropClick.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been attached. */\n    OverlayRef.prototype.attachments = function () {\n        return this._attachments.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been detached. */\n    OverlayRef.prototype.detachments = function () {\n        return this._detachments.asObservable();\n    };\n    /** Gets an observable of keydown events targeted to this overlay. */\n    OverlayRef.prototype.keydownEvents = function () {\n        return this._keydownEvents.asObservable();\n    };\n    /** Gets the current overlay configuration, which is immutable. */\n    OverlayRef.prototype.getConfig = function () {\n        return this._config;\n    };\n    /** Updates the position of the overlay based on the position strategy. */\n    OverlayRef.prototype.updatePosition = function () {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    };\n    /** Switches to a new position strategy and updates the overlay position. */\n    OverlayRef.prototype.updatePositionStrategy = function (strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    };\n    /** Update the size properties of the overlay. */\n    OverlayRef.prototype.updateSize = function (sizeConfig) {\n        this._config = __assign(__assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    };\n    /** Sets the LTR/RTL direction for the overlay. */\n    OverlayRef.prototype.setDirection = function (dir) {\n        this._config = __assign(__assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    };\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    OverlayRef.prototype.addPanelClass = function (classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    };\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    OverlayRef.prototype.removePanelClass = function (classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    };\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    OverlayRef.prototype.getDirection = function () {\n        var direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    };\n    /** Switches to a new scroll strategy. */\n    OverlayRef.prototype.updateScrollStrategy = function (strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    };\n    /** Updates the text direction of the overlay panel. */\n    OverlayRef.prototype._updateElementDirection = function () {\n        this._host.setAttribute('dir', this.getDirection());\n    };\n    /** Updates the size of the overlay element based on the overlay config. */\n    OverlayRef.prototype._updateElementSize = function () {\n        if (!this._pane) {\n            return;\n        }\n        var style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    };\n    /** Toggles the pointer events for the overlay pane element. */\n    OverlayRef.prototype._togglePointerEvents = function (enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    };\n    /** Attaches a backdrop for this overlay. */\n    OverlayRef.prototype._attachBackdrop = function () {\n        var _this = this;\n        var showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () {\n                    if (_this._backdropElement) {\n                        _this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    OverlayRef.prototype._updateStackingOrder = function () {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    };\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    OverlayRef.prototype.detachBackdrop = function () {\n        var _this = this;\n        var backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        var timeoutId;\n        var finishDetach = function () {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', _this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (_this._backdropElement == backdropToDetach) {\n                _this._backdropElement = null;\n            }\n            if (_this._config.backdropClass) {\n                _this._toggleClasses(backdropToDetach, _this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(function () {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(function () { return setTimeout(finishDetach, 500); });\n    };\n    /** Toggles a single CSS class or an array of classes on an element. */\n    OverlayRef.prototype._toggleClasses = function (element, cssClasses, isAdd) {\n        var classList = element.classList;\n        coerceArray(cssClasses).forEach(function (cssClass) {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        });\n    };\n    /** Detaches the overlay content next time the zone stabilizes. */\n    OverlayRef.prototype._detachContentWhenStable = function () {\n        var _this = this;\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(function () {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            var subscription = _this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(_this._attachments, _this._detachments)))\n                .subscribe(function () {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!_this._pane || !_this._host || _this._pane.children.length === 0) {\n                    if (_this._pane && _this._config.panelClass) {\n                        _this._toggleClasses(_this._pane, _this._config.panelClass, false);\n                    }\n                    if (_this._host && _this._host.parentElement) {\n                        _this._previousHostParent = _this._host.parentElement;\n                        _this._previousHostParent.removeChild(_this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    };\n    /** Disposes of a scroll strategy. */\n    OverlayRef.prototype._disposeScrollStrategy = function () {\n        var scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    };\n    return OverlayRef;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nvar boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nvar cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar FlexibleConnectedPositionStrategy = /** @class */ (function () {\n    function FlexibleConnectedPositionStrategy(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    Object.defineProperty(FlexibleConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attaches this position strategy to an overlay. */\n    FlexibleConnectedPositionStrategy.prototype.attach = function (overlayRef) {\n        var _this = this;\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(function () {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            _this._isInitialRender = true;\n            _this.apply();\n        });\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    FlexibleConnectedPositionStrategy.prototype.apply = function () {\n        var e_1, _a, e_2, _b;\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        var originRect = this._originRect;\n        var overlayRect = this._overlayRect;\n        var viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        var flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        var fallback;\n        try {\n            // Go through each of the preferred positions looking for a good fit.\n            // If a good fit is found, it will be applied immediately.\n            for (var _c = __values(this._preferredPositions), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var pos = _d.value;\n                // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n                var originPoint = this._getOriginPoint(originRect, pos);\n                // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n                // overlay in this position. We use the top-left corner for calculations and later translate\n                // this into an appropriate (top, left, bottom, right) style.\n                var overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n                // Calculate how well the overlay would fit into the viewport with this point.\n                var overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n                // If the overlay, without any further work, fits into the viewport, use this position.\n                if (overlayFit.isCompletelyWithinViewport) {\n                    this._isPushed = false;\n                    this._applyPosition(pos, originPoint);\n                    return;\n                }\n                // If the overlay has flexible dimensions, we can use this position\n                // so long as there's enough space for the minimum dimensions.\n                if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                    // Save positions where the overlay will fit with flexible dimensions. We will use these\n                    // if none of the positions fit *without* flexible dimensions.\n                    flexibleFits.push({\n                        position: pos,\n                        origin: originPoint,\n                        overlayRect: overlayRect,\n                        boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                    });\n                    continue;\n                }\n                // If the current preferred position does not fit on the screen, remember the position\n                // if it has more visible area on-screen than we've seen and move onto the next preferred\n                // position.\n                if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                    fallback = { overlayFit: overlayFit, overlayPoint: overlayPoint, originPoint: originPoint, position: pos, overlayRect: overlayRect };\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            var bestFit = null;\n            var bestScore = -1;\n            try {\n                for (var flexibleFits_1 = __values(flexibleFits), flexibleFits_1_1 = flexibleFits_1.next(); !flexibleFits_1_1.done; flexibleFits_1_1 = flexibleFits_1.next()) {\n                    var fit = flexibleFits_1_1.value;\n                    var score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                    if (score > bestScore) {\n                        bestScore = score;\n                        bestFit = fit;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (flexibleFits_1_1 && !flexibleFits_1_1.done && (_b = flexibleFits_1.return)) _b.call(flexibleFits_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    };\n    FlexibleConnectedPositionStrategy.prototype.detach = function () {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    };\n    /** Cleanup after the element gets destroyed. */\n    FlexibleConnectedPositionStrategy.prototype.dispose = function () {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    };\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    FlexibleConnectedPositionStrategy.prototype.reapplyLastPosition = function () {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            var lastPosition = this._lastPosition || this._preferredPositions[0];\n            var originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withScrollableContainers = function (scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    };\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withPositions = function (positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    };\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withViewportMargin = function (margin) {\n        this._viewportMargin = margin;\n        return this;\n    };\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    FlexibleConnectedPositionStrategy.prototype.withFlexibleDimensions = function (flexibleDimensions) {\n        if (flexibleDimensions === void 0) { flexibleDimensions = true; }\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    };\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    FlexibleConnectedPositionStrategy.prototype.withGrowAfterOpen = function (growAfterOpen) {\n        if (growAfterOpen === void 0) { growAfterOpen = true; }\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    };\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    FlexibleConnectedPositionStrategy.prototype.withPush = function (canPush) {\n        if (canPush === void 0) { canPush = true; }\n        this._canPush = canPush;\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withLockedPosition = function (isLocked) {\n        if (isLocked === void 0) { isLocked = true; }\n        this._positionLocked = isLocked;\n        return this;\n    };\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    FlexibleConnectedPositionStrategy.prototype.setOrigin = function (origin) {\n        this._origin = origin;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetX = function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetY = function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    FlexibleConnectedPositionStrategy.prototype.withTransformOriginOn = function (selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOriginPoint = function (originRect, pos) {\n        var x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            var startX = this._isRtl() ? originRect.right : originRect.left;\n            var endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        var y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        var overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        var overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    };\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayFit = function (point, overlay, viewport, position) {\n        var x = point.x, y = point.y;\n        var offsetX = this._getOffset(position, 'x');\n        var offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        var leftOverflow = 0 - x;\n        var rightOverflow = (x + overlay.width) - viewport.width;\n        var topOverflow = 0 - y;\n        var bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        var visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        var visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        var visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea: visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    };\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    FlexibleConnectedPositionStrategy.prototype._canFitWithFlexibleDimensions = function (fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            var availableHeight = viewport.bottom - point.y;\n            var availableWidth = viewport.right - point.x;\n            var minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            var minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            var verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            var horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    };\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    FlexibleConnectedPositionStrategy.prototype._pushOverlayOnScreen = function (start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        var viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        var overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        var overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        var overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        var overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        var pushX = 0;\n        var pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    };\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    FlexibleConnectedPositionStrategy.prototype._applyPosition = function (position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            var scrollableViewProperties = this._getScrollVisibility();\n            var changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    };\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    FlexibleConnectedPositionStrategy.prototype._setTransformOrigin = function (position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        var elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        var xOrigin;\n        var yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (var i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = xOrigin + \" \" + yOrigin;\n        }\n    };\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    FlexibleConnectedPositionStrategy.prototype._calculateBoundingBoxRect = function (origin, position) {\n        var viewport = this._viewportRect;\n        var isRtl = this._isRtl();\n        var height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            var smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            var previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        var isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        var isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        var width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            var smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            var previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width: width, height: height };\n    };\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    FlexibleConnectedPositionStrategy.prototype._setBoundingBoxStyles = function (origin, position) {\n        var boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        var styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            var maxHeight = this._overlayRef.getConfig().maxHeight;\n            var maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    };\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    FlexibleConnectedPositionStrategy.prototype._resetBoundingBoxStyles = function () {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    };\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    FlexibleConnectedPositionStrategy.prototype._resetOverlayElementStyles = function () {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    };\n    /** Sets positioning styles to the overlay element. */\n    FlexibleConnectedPositionStrategy.prototype._setOverlayElementStyles = function (originPoint, position) {\n        var styles = {};\n        var hasExactPosition = this._hasExactPosition();\n        var hasFlexibleDimensions = this._hasFlexibleDimensions;\n        var config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            var scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        var transformString = '';\n        var offsetX = this._getOffset(position, 'x');\n        var offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += \"translateX(\" + offsetX + \"px) \";\n        }\n        if (offsetY) {\n            transformString += \"translateY(\" + offsetY + \"px)\";\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    };\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayY = function (position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        var styles = { top: '', bottom: '' };\n        var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        var virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            var documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = documentHeight - (overlayPoint.y + this._overlayRect.height) + \"px\";\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    };\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayX = function (position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        var styles = { left: '', right: '' };\n        var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        var horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            var documentWidth = this._document.documentElement.clientWidth;\n            styles.right = documentWidth - (overlayPoint.x + this._overlayRect.width) + \"px\";\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    FlexibleConnectedPositionStrategy.prototype._getScrollVisibility = function () {\n        // Note: needs fresh rects since the position could've changed.\n        var originBounds = this._getOriginRect();\n        var overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        var scrollContainerBounds = this._scrollables.map(function (scrollable) {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    };\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    FlexibleConnectedPositionStrategy.prototype._subtractOverflows = function (length) {\n        var overflows = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            overflows[_i - 1] = arguments[_i];\n        }\n        return overflows.reduce(function (currentValue, currentOverflow) {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    };\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    FlexibleConnectedPositionStrategy.prototype._getNarrowedViewportRect = function () {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        var width = this._document.documentElement.clientWidth;\n        var height = this._document.documentElement.clientHeight;\n        var scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    };\n    /** Whether the we're dealing with an RTL context */\n    FlexibleConnectedPositionStrategy.prototype._isRtl = function () {\n        return this._overlayRef.getDirection() === 'rtl';\n    };\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    FlexibleConnectedPositionStrategy.prototype._hasExactPosition = function () {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    };\n    /** Retrieves the offset of a position along the x or y axis. */\n    FlexibleConnectedPositionStrategy.prototype._getOffset = function (position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    };\n    /** Validates that the current position match the expected values. */\n    FlexibleConnectedPositionStrategy.prototype._validatePositions = function () {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach(function (pair) {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        });\n    };\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    FlexibleConnectedPositionStrategy.prototype._addPanelClasses = function (cssClasses) {\n        var _this = this;\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(function (cssClass) {\n                if (cssClass !== '' && _this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    _this._appliedPanelClasses.push(cssClass);\n                    _this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    };\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    FlexibleConnectedPositionStrategy.prototype._clearPanelClasses = function () {\n        var _this = this;\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(function (cssClass) {\n                _this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    };\n    /** Returns the ClientRect of the current origin. */\n    FlexibleConnectedPositionStrategy.prototype._getOriginRect = function () {\n        var origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        var width = origin.width || 0;\n        var height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height: height,\n            width: width\n        };\n    };\n    return FlexibleConnectedPositionStrategy;\n}());\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        var _a = __read(input.split(cssUnitPattern), 2), value = _a[0], units = _a[1];\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * @breaking-change 8.0.0\n */\nvar ConnectedPositionStrategy = /** @class */ (function () {\n    function ConnectedPositionStrategy(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /** Whether the we're dealing with an RTL context */\n        get: function () {\n            return this._overlayRef.getDirection() === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /** Emits an event when the connection point changes. */\n        get: function () {\n            return this._positionStrategy.positionChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attach this position strategy to an overlay. */\n    ConnectedPositionStrategy.prototype.attach = function (overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    };\n    /** Disposes all resources used by the position strategy. */\n    ConnectedPositionStrategy.prototype.dispose = function () {\n        this._positionStrategy.dispose();\n    };\n    /** @docs-private */\n    ConnectedPositionStrategy.prototype.detach = function () {\n        this._positionStrategy.detach();\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    ConnectedPositionStrategy.prototype.apply = function () {\n        this._positionStrategy.apply();\n    };\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = function () {\n        this._positionStrategy.reapplyLastPosition();\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = function (scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    };\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos, offsetX, offsetY) {\n        var position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    ConnectedPositionStrategy.prototype.withDirection = function (dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    ConnectedPositionStrategy.prototype.withLockedPosition = function (isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    };\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    ConnectedPositionStrategy.prototype.withPositions = function (positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    ConnectedPositionStrategy.prototype.setOrigin = function (origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    };\n    return ConnectedPositionStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nvar wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar GlobalPositionStrategy = /** @class */ (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    GlobalPositionStrategy.prototype.attach = function (overlayRef) {\n        var config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    };\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    GlobalPositionStrategy.prototype.top = function (value) {\n        if (value === void 0) { value = ''; }\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    GlobalPositionStrategy.prototype.left = function (value) {\n        if (value === void 0) { value = ''; }\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    GlobalPositionStrategy.prototype.bottom = function (value) {\n        if (value === void 0) { value = ''; }\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    GlobalPositionStrategy.prototype.right = function (value) {\n        if (value === void 0) { value = ''; }\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    GlobalPositionStrategy.prototype.width = function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    GlobalPositionStrategy.prototype.height = function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    GlobalPositionStrategy.prototype.centerVertically = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    GlobalPositionStrategy.prototype.apply = function () {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        var styles = this._overlayRef.overlayElement.style;\n        var parentStyles = this._overlayRef.hostElement.style;\n        var config = this._overlayRef.getConfig();\n        var width = config.width, height = config.height, maxWidth = config.maxWidth, maxHeight = config.maxHeight;\n        var shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        var shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    };\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    GlobalPositionStrategy.prototype.dispose = function () {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        var styles = this._overlayRef.overlayElement.style;\n        var parent = this._overlayRef.hostElement;\n        var parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    };\n    return GlobalPositionStrategy;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Builder for overlay position strategy. */\nvar OverlayPositionBuilder = /** @class */ (function () {\n    function OverlayPositionBuilder(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    OverlayPositionBuilder.prototype.global = function () {\n        return new GlobalPositionStrategy();\n    };\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @breaking-change 8.0.0\n     */\n    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    };\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    OverlayPositionBuilder.prototype.flexibleConnectedTo = function (origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    };\n    /** @nocollapse */\n    OverlayPositionBuilder.ctorParameters = function () { return [\n        { type: ViewportRuler },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform },\n        { type: OverlayContainer }\n    ]; };\n    OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\n    return OverlayPositionBuilder;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Next overlay unique ID. */\nvar nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nvar Overlay = /** @class */ (function () {\n    function Overlay(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, \n    // @breaking-change 8.0.0 `_location` parameter to be made required.\n    _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    Overlay.prototype.create = function (config) {\n        var host = this._createHostElement();\n        var pane = this._createPaneElement(host);\n        var portalOutlet = this._createPortalOutlet(pane);\n        var overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    };\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    Overlay.prototype.position = function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = function (host) {\n        var pane = this._document.createElement('div');\n        pane.id = \"cdk-overlay-\" + nextUniqueId++;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    };\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    Overlay.prototype._createHostElement = function () {\n        var host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    };\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    Overlay.prototype._createPortalOutlet = function (pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    };\n    /** @nocollapse */\n    Overlay.ctorParameters = function () { return [\n        { type: ScrollStrategyOptions },\n        { type: OverlayContainer },\n        { type: ComponentFactoryResolver },\n        { type: OverlayPositionBuilder },\n        { type: OverlayKeyboardDispatcher },\n        { type: Injector },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Directionality },\n        { type: Location, decorators: [{ type: Optional }] }\n    ]; };\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: function (t) { return Overlay.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n    return Overlay;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nvar defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function (config) { return overlay.scrollStrategies.reposition(config); };\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar CdkOverlayOrigin = /** @class */ (function () {\n    function CdkOverlayOrigin(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    /** @nocollapse */\n    CdkOverlayOrigin.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return CdkOverlayOrigin;\n}());\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nvar CdkConnectedOverlay = /** @class */ (function () {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    function CdkConnectedOverlay(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetX\", {\n        /** The offset in pixels for the overlay connection point on the x-axis */\n        get: function () { return this._offsetX; },\n        set: function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._updatePositionStrategy(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetY\", {\n        /** The offset in pixels for the overlay connection point on the y-axis */\n        get: function () { return this._offsetY; },\n        set: function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._updatePositionStrategy(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"hasBackdrop\", {\n        /** Whether or not the overlay should attach a backdrop. */\n        get: function () { return this._hasBackdrop; },\n        set: function (value) { this._hasBackdrop = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"lockPosition\", {\n        /** Whether or not the overlay should be locked when scrolling. */\n        get: function () { return this._lockPosition; },\n        set: function (value) { this._lockPosition = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"flexibleDimensions\", {\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        get: function () { return this._flexibleDimensions; },\n        set: function (value) {\n            this._flexibleDimensions = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"growAfterOpen\", {\n        /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n        get: function () { return this._growAfterOpen; },\n        set: function (value) { this._growAfterOpen = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"push\", {\n        /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n        get: function () { return this._push; },\n        set: function (value) { this._push = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"overlayRef\", {\n        /** The associated overlay reference. */\n        get: function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"dir\", {\n        /** The element's layout direction. */\n        get: function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CdkConnectedOverlay.prototype.ngOnDestroy = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    CdkConnectedOverlay.prototype.ngOnChanges = function (changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    };\n    /** Creates an overlay */\n    CdkConnectedOverlay.prototype._createOverlay = function () {\n        var _this = this;\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe(function (event) {\n            _this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                _this._detachOverlay();\n            }\n        });\n    };\n    /** Builds the overlay config based on the directive's inputs */\n    CdkConnectedOverlay.prototype._buildConfig = function () {\n        var positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        var overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy: positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    };\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    CdkConnectedOverlay.prototype._updatePositionStrategy = function (positionStrategy) {\n        var _this = this;\n        var positions = this.positions.map(function (currentPosition) { return ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || _this.offsetX,\n            offsetY: currentPosition.offsetY || _this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }); });\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    };\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    CdkConnectedOverlay.prototype._createPositionStrategy = function () {\n        var _this = this;\n        var strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe(function (p) { return _this.positionChange.emit(p); });\n        return strategy;\n    };\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    CdkConnectedOverlay.prototype._attachOverlay = function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function (event) {\n                _this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    };\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    CdkConnectedOverlay.prototype._detachOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    /** @nocollapse */\n    CdkConnectedOverlay.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: TemplateRef },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    CdkConnectedOverlay.propDecorators = {\n        origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n        positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n        positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n        offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n        offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n        width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n        height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n        minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n        minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n        backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n        panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n        viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n        scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n        open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n        transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n        hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n        lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n        flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n        growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n        push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n        backdropClick: [{ type: Output }],\n        positionChange: [{ type: Output }],\n        attach: [{ type: Output }],\n        detach: [{ type: Output }],\n        overlayKeydown: [{ type: Output }]\n    };\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\n    return CdkConnectedOverlay;\n}());\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/** @docs-private */\nvar CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar OverlayModule = /** @class */ (function () {\n    function OverlayModule() {\n    }\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay, CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return OverlayModule;\n}());\n/**\n * @deprecated Use `OverlayModule` instead.\n * @breaking-change 8.0.0\n * @docs-private\n */\nvar OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nvar FullscreenOverlayContainer = /** @class */ (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        return _super.call(this, _document, platform) || this;\n    }\n    FullscreenOverlayContainer.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    };\n    FullscreenOverlayContainer.prototype._createContainer = function () {\n        var _this = this;\n        _super.prototype._createContainer.call(this);\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n    };\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = function () {\n        if (!this._containerElement) {\n            return;\n        }\n        var fullscreenElement = this.getFullscreenElement();\n        var parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    };\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = function (fn) {\n        var eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    };\n    FullscreenOverlayContainer.prototype._getEventName = function () {\n        if (!this._fullScreenEventName) {\n            var _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = function () {\n        var _document = this._document;\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    };\n    /** @nocollapse */\n    FullscreenOverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: Platform }\n    ]; };\n    FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nvar LayoutModule = /** @class */ (function () {\n    function LayoutModule() {\n    }\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return []; }, null); })();\n    return LayoutModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nvar mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nvar mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nvar MediaMatcher = /** @class */ (function () {\n    function MediaMatcher(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    MediaMatcher.prototype.matchMedia = function (query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    };\n    /** @nocollapse */\n    MediaMatcher.ctorParameters = function () { return [\n        { type: Platform }\n    ]; };\n    MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n    return MediaMatcher;\n}());\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: function () { },\n        removeListener: function () { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nvar BreakpointObserver = /** @class */ (function () {\n    function BreakpointObserver(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    BreakpointObserver.prototype.ngOnDestroy = function () {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    };\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    BreakpointObserver.prototype.isMatched = function (value) {\n        var _this = this;\n        var queries = splitQueries(coerceArray(value));\n        return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n    };\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    BreakpointObserver.prototype.observe = function (value) {\n        var _this = this;\n        var queries = splitQueries(coerceArray(value));\n        var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n        var stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(function (breakpointStates) {\n            var response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(function (state) {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            });\n            return response;\n        }));\n    };\n    /** Registers a specific query to be listened for. */\n    BreakpointObserver.prototype._registerQuery = function (query) {\n        var _this = this;\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        var mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        var queryObservable = new Observable(function (observer) {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            var handler = function (e) { return _this._zone.run(function () { return observer.next(e); }); };\n            mql.addListener(handler);\n            return function () {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(function (nextMql) { return ({ query: query, matches: nextMql.matches }); }), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        var output = { observable: queryObservable, mql: mql };\n        this._queries.set(query, output);\n        return output;\n    };\n    /** @nocollapse */\n    BreakpointObserver.ctorParameters = function () { return [\n        { type: MediaMatcher },\n        { type: NgZone }\n    ]; };\n    BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n    return BreakpointObserver;\n}());\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(function (query) { return query.split(','); })\n        .reduce(function (a1, a2) { return a1.concat(a2); })\n        .map(function (query) { return query.trim(); });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nvar Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { __extends, __values } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nvar _c0 = [\"mat-button\", \"\"];\nvar _c1 = [\"*\"];\nvar DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nvar BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nvar MatButtonBase = /** @class */ (function () {\n    function MatButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatButtonBase;\n}());\nvar _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nvar MatButton = /** @class */ (function (_super) {\n    __extends(MatButton, _super);\n    function MatButton(elementRef, _focusMonitor, _animationMode) {\n        var e_1, _a;\n        var _this = _super.call(this, elementRef) || this;\n        _this._focusMonitor = _focusMonitor;\n        _this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        _this.isIconButton = _this._hasHostAttributes('mat-icon-button');\n        try {\n            // For each of the variant selectors that is present in the button's host\n            // attributes, add the correct corresponding class.\n            for (var BUTTON_HOST_ATTRIBUTES_1 = __values(BUTTON_HOST_ATTRIBUTES), BUTTON_HOST_ATTRIBUTES_1_1 = BUTTON_HOST_ATTRIBUTES_1.next(); !BUTTON_HOST_ATTRIBUTES_1_1.done; BUTTON_HOST_ATTRIBUTES_1_1 = BUTTON_HOST_ATTRIBUTES_1.next()) {\n                var attr = BUTTON_HOST_ATTRIBUTES_1_1.value;\n                if (_this._hasHostAttributes(attr)) {\n                    _this._getHostElement().classList.add(attr);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (BUTTON_HOST_ATTRIBUTES_1_1 && !BUTTON_HOST_ATTRIBUTES_1_1.done && (_a = BUTTON_HOST_ATTRIBUTES_1.return)) _a.call(BUTTON_HOST_ATTRIBUTES_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        _this._focusMonitor.monitor(_this._elementRef, true);\n        if (_this.isRoundButton) {\n            _this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n        return _this;\n    }\n    MatButton.prototype.ngOnDestroy = function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Focuses the button. */\n    MatButton.prototype.focus = function (origin, options) {\n        if (origin === void 0) { origin = 'program'; }\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    };\n    MatButton.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    MatButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /** Gets whether the button has one of the given attributes. */\n    MatButton.prototype._hasHostAttributes = function () {\n        var _this = this;\n        var attributes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            attributes[_i] = arguments[_i];\n        }\n        return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n    };\n    /** @nocollapse */\n    MatButton.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatButton.propDecorators = {\n        ripple: [{ type: ViewChild, args: [MatRipple,] }]\n    };\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\",\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n    return MatButton;\n}(_MatButtonMixinBase));\n/**\n * Material design anchor button.\n */\nvar MatAnchor = /** @class */ (function (_super) {\n    __extends(MatAnchor, _super);\n    function MatAnchor(focusMonitor, elementRef, animationMode) {\n        return _super.call(this, elementRef, focusMonitor, animationMode) || this;\n    }\n    MatAnchor.prototype._haltDisabledEvents = function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    /** @nocollapse */\n    MatAnchor.ctorParameters = function () { return [\n        { type: FocusMonitor },\n        { type: ElementRef },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatAnchor.propDecorators = {\n        tabIndex: [{ type: Input }]\n    };\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\",\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n    return MatAnchor;\n}(MatButton));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatButtonModule = /** @class */ (function () {\n    function MatButtonModule() {\n    }\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return MatButtonModule;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar SkipOperator = /*@__PURE__*/ (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skip.js.map\n","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { CdkPortalOutlet, BasePortalOutlet, PortalModule, PortalInjector, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, TemplateRef, Injectable, Injector, Optional, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { __extends, __assign } from 'tslib';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nvar MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nvar MatSnackBarRef = /** @class */ (function () {\n    function MatSnackBarRef(containerInstance, _overlayRef) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(function () { return _this.dismiss(); });\n        containerInstance._onExit.subscribe(function () { return _this._finishDismiss(); });\n    }\n    /** Dismisses the snack bar. */\n    MatSnackBarRef.prototype.dismiss = function () {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    };\n    /** Marks the snackbar action clicked. */\n    MatSnackBarRef.prototype.dismissWithAction = function () {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    };\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    MatSnackBarRef.prototype.closeWithAction = function () {\n        this.dismissWithAction();\n    };\n    /** Dismisses the snack bar after some duration */\n    MatSnackBarRef.prototype._dismissAfter = function (duration) {\n        var _this = this;\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(function () { return _this.dismiss(); }, Math.min(duration, MAX_TIMEOUT));\n    };\n    /** Marks the snackbar as opened */\n    MatSnackBarRef.prototype._open = function () {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    };\n    /** Cleans up the DOM after closing. */\n    MatSnackBarRef.prototype._finishDismiss = function () {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    };\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    MatSnackBarRef.prototype.afterDismissed = function () {\n        return this._afterDismissed.asObservable();\n    };\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    MatSnackBarRef.prototype.afterOpened = function () {\n        return this.containerInstance._onEnter;\n    };\n    /** Gets an observable that is notified when the snack bar action is called. */\n    MatSnackBarRef.prototype.onAction = function () {\n        return this._onAction.asObservable();\n    };\n    return MatSnackBarRef;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nvar MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nvar MatSnackBarConfig = /** @class */ (function () {\n    function MatSnackBarConfig() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n    return MatSnackBarConfig;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = /** @class */ (function () {\n    function SimpleSnackBar(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    SimpleSnackBar.prototype.action = function () {\n        this.snackBarRef.dismissWithAction();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /** If the action button should be shown. */\n        get: function () {\n            return !!this.data.action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @nocollapse */\n    SimpleSnackBar.ctorParameters = function () { return [\n        { type: MatSnackBarRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n    ]; };\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n    return SimpleSnackBar;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nvar matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nvar MatSnackBarContainer = /** @class */ (function (_super) {\n    __extends(MatSnackBarContainer, _super);\n    function MatSnackBarContainer(_ngZone, _elementRef, _changeDetectorRef, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.snackBarConfig = snackBarConfig;\n        /** Whether the component has been destroyed. */\n        _this._destroyed = false;\n        /** Subject for notifying that the snack bar has exited from view. */\n        _this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        _this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        _this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        _this.attachDomPortal = function (portal) {\n            _this._assertNotAttached();\n            _this._applySnackBarClasses();\n            return _this._portalOutlet.attachDomPortal(portal);\n        };\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            _this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            _this._role = null;\n        }\n        else {\n            _this._role = 'status';\n        }\n        return _this;\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    MatSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    };\n    /** Attach a template portal as content to this snack bar container. */\n    MatSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    };\n    /** Handle end of animations, updating the state of the snackbar. */\n    MatSnackBarContainer.prototype.onAnimationEnd = function (event) {\n        var fromState = event.fromState, toState = event.toState;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            var onEnter_1 = this._onEnter;\n            this._ngZone.run(function () {\n                onEnter_1.next();\n                onEnter_1.complete();\n            });\n        }\n    };\n    /** Begin animation of snack bar entrance into view. */\n    MatSnackBarContainer.prototype.enter = function () {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    };\n    /** Begin animation of the snack bar exiting from view. */\n    MatSnackBarContainer.prototype.exit = function () {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        return this._onExit;\n    };\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    MatSnackBarContainer.prototype.ngOnDestroy = function () {\n        this._destroyed = true;\n        this._completeExit();\n    };\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    MatSnackBarContainer.prototype._completeExit = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(function () {\n            _this._onExit.next();\n            _this._onExit.complete();\n        });\n    };\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    MatSnackBarContainer.prototype._applySnackBarClasses = function () {\n        var element = this._elementRef.nativeElement;\n        var panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(function (cssClass) { return element.classList.add(cssClass); });\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    };\n    /** Asserts that no content is already attached to the container. */\n    MatSnackBarContainer.prototype._assertNotAttached = function () {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    };\n    /** @nocollapse */\n    MatSnackBarContainer.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: MatSnackBarConfig }\n    ]; };\n    MatSnackBarContainer.propDecorators = {\n        _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n    };\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n    return MatSnackBarContainer;\n}(BasePortalOutlet));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MatSnackBarModule = /** @class */ (function () {\n    function MatSnackBarModule() {\n    }\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], function () { return []; }, null); })();\n    return MatSnackBarModule;\n}());\n\n/** Injection token that can be used to specify default snack bar. */\nvar MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nvar MatSnackBar = /** @class */ (function () {\n    function MatSnackBar(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    Object.defineProperty(MatSnackBar.prototype, \"_openedSnackBarRef\", {\n        /** Reference to the currently opened snackbar at *any* level. */\n        get: function () {\n            var parent = this._parentSnackBar;\n            return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n        },\n        set: function (value) {\n            if (this._parentSnackBar) {\n                this._parentSnackBar._openedSnackBarRef = value;\n            }\n            else {\n                this._snackBarRefAtThisLevel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    MatSnackBar.prototype.openFromComponent = function (component, config) {\n        return this._attach(component, config);\n    };\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    MatSnackBar.prototype.openFromTemplate = function (template, config) {\n        return this._attach(template, config);\n    };\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    MatSnackBar.prototype.open = function (message, action, config) {\n        if (action === void 0) { action = ''; }\n        var _config = __assign(__assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message: message, action: action };\n        if (!_config.announcementMessage) {\n            _config.announcementMessage = message;\n        }\n        return this.openFromComponent(SimpleSnackBar, _config);\n    };\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    MatSnackBar.prototype.dismiss = function () {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    };\n    MatSnackBar.prototype.ngOnDestroy = function () {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    };\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    MatSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {\n        var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        var injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarConfig, config]\n        ]));\n        var containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n        var containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    MatSnackBar.prototype._attach = function (content, userConfig) {\n        var config = __assign(__assign(__assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        var overlayRef = this._createOverlay(config);\n        var container = this._attachSnackBarContainer(overlayRef, config);\n        var snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            var portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef: snackBarRef\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            var injector = this._createInjector(config, snackBarRef);\n            var portal = new ComponentPortal(content, undefined, injector);\n            var contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(function (state) {\n            var classList = overlayRef.overlayElement.classList;\n            var className = 'mat-snack-bar-handset';\n            state.matches ? classList.add(className) : classList.remove(className);\n        });\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    };\n    /** Animates the old snack bar out and the new one in. */\n    MatSnackBar.prototype._animateSnackBar = function (snackBarRef, config) {\n        var _this = this;\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(function () {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (_this._openedSnackBarRef == snackBarRef) {\n                _this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                _this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(function () {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(function () { return snackBarRef._dismissAfter(config.duration); });\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    };\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    MatSnackBar.prototype._createOverlay = function (config) {\n        var overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        var positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        var isRtl = config.direction === 'rtl';\n        var isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        var isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    };\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    MatSnackBar.prototype._createInjector = function (config, snackBarRef) {\n        var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarRef, snackBarRef],\n            [MAT_SNACK_BAR_DATA, config.data]\n        ]));\n    };\n    /** @nocollapse */\n    MatSnackBar.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: LiveAnnouncer },\n        { type: Injector },\n        { type: BreakpointObserver },\n        { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n        { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n    return MatSnackBar;\n}());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { RequestState } from './request.state';\nimport { requestFeatureName } from './request.reducer';\n\nexport const RequestRootSelector = createFeatureSelector<RequestState>(\n  requestFeatureName,\n);\n\nexport const createRequestSelector = createSelector(\n  RequestRootSelector,\n  (data) => data?.create,\n);\n\nexport const isLoadingRequestsSelector = createSelector(\n  RequestRootSelector,\n  (data) => data.isLoadingRequests,\n);\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport * as RequestActions from './request.actions';\nimport { createRequestSelector, isLoadingRequestsSelector } from '.';\nimport { CreateRequest } from '../entities/request.entities';\nimport { Request } from '@core/entities/common.entities';\n\n@Injectable()\nexport class RequestFacade {\n  public create$: Observable<Request> = this.store.select(\n    createRequestSelector,\n  );\n\n  public isLoadingRequests$: Observable<boolean> = this.store.select(\n    isLoadingRequestsSelector,\n  );\n\n  constructor(private store: Store<any>) {}\n\n  public requestCreate(body: CreateRequest): void {\n    this.store.dispatch(RequestActions.requestCreate({ body }));\n  }\n\n  public setLoadingClaims(isLoading: boolean): void {\n    this.store.dispatch(RequestActions.setLoadingRequests({ isLoading }));\n  }\n}\n","import { createReducer, on, Action } from '@ngrx/store';\nimport { Request } from '@core/entities/common.entities';\n\nimport * as RequestActions from './request.actions';\nimport { RequestState } from './request.state';\n\nexport const requestFeatureName = 'request';\n\nexport const initialState: RequestState = {\n  create: ({} as any) as Request,\n  isLoadingRequests: false,\n};\n\nconst requestReducers = createReducer(\n  initialState,\n  on(RequestActions.responseCreate, (state, { response }) => {\n    return {\n      ...state,\n      create: response,\n    };\n  }),\n  on(RequestActions.setLoadingRequests, (state, { isLoading }) => {\n    return {\n      ...state,\n      isLoadingRequests: isLoading,\n    };\n  }),\n);\n\nexport function reducer(state: RequestState | undefined, action: Action) {\n  return requestReducers(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AutocompleteComponent } from './autocomplete.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, FormsModule, ReactiveFormsModule],\n  declarations: [AutocompleteComponent],\n  exports: [AutocompleteComponent],\n})\nexport class AutocompleteModule {}\n","import { Injectable, Inject, Directive, TemplateRef, EventEmitter, ElementRef, NgZone, HostBinding, Output, Input, Renderer2, HostListener, KeyValueDiffers, ContentChildren, Component, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, ViewChild, ViewEncapsulation, SkipSelf, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __values, __spread, __assign, __decorate, __metadata } from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar _c0 = [\"*\"];\nfunction DataTableBodyComponent_datatable_progress_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-progress\");\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-summary-row\", 9);\n} if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"rowHeight\", ctx_r4.summaryHeight)(\"offsetX\", ctx_r4.offsetX)(\"innerWidth\", ctx_r4.innerWidth)(\"rows\", ctx_r4.rows)(\"columns\", ctx_r4.columns);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template(rf, ctx) { if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-row\", 13);\n    ɵngcc0.ɵɵlistener(\"treeAction\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_treeAction_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var group_r7 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.onTreeAction(group_r7); })(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template_datatable_body_row_activate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var i_r8 = ɵngcc0.ɵɵnextContext().index; var ctx_r15 = ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.onActivate($event, ctx_r15.indexes.first + i_r8); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var group_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵproperty(\"isSelected\", _r0.getRowSelected(group_r7))(\"innerWidth\", ctx_r9.innerWidth)(\"offsetX\", ctx_r9.offsetX)(\"columns\", ctx_r9.columns)(\"rowHeight\", ctx_r9.getRowHeight(group_r7))(\"row\", group_r7)(\"rowIndex\", ctx_r9.getRowIndex(group_r7))(\"expanded\", ctx_r9.getRowExpanded(group_r7))(\"rowClass\", ctx_r9.rowClass)(\"displayCheck\", ctx_r9.displayCheck)(\"treeStatus\", group_r7.treeStatus);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template(rf, ctx) { if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-row\", 15);\n    ɵngcc0.ɵɵlistener(\"activate\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template_datatable_body_row_activate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var i_r20 = ctx.index; ɵngcc0.ɵɵnextContext(4); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.onActivate($event, i_r20); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var row_r19 = ctx.$implicit;\n    var group_r7 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵproperty(\"isSelected\", _r0.getRowSelected(row_r19))(\"innerWidth\", ctx_r18.innerWidth)(\"offsetX\", ctx_r18.offsetX)(\"columns\", ctx_r18.columns)(\"rowHeight\", ctx_r18.getRowHeight(row_r19))(\"row\", row_r19)(\"group\", group_r7.value)(\"rowIndex\", ctx_r18.getRowIndex(row_r19))(\"expanded\", ctx_r18.getRowExpanded(row_r19))(\"rowClass\", ctx_r18.rowClass);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_datatable_body_row_0_Template, 1, 10, \"datatable-body-row\", 14);\n} if (rf & 2) {\n    var group_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", group_r7.value)(\"ngForTrackBy\", ctx_r11.rowTrackingFn);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template(rf, ctx) { if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-row-wrapper\", 10);\n    ɵngcc0.ɵɵlistener(\"rowContextmenu\", function DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template_datatable_row_wrapper_rowContextmenu_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); var ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.rowContextmenu.emit($event); });\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_datatable_body_row_1_Template, 1, 11, \"datatable-body-row\", 11);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_ng_template_2_Template, 1, 2, \"ng-template\", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var group_r7 = ctx.$implicit;\n    var i_r8 = ctx.index;\n    var _r10 = ɵngcc0.ɵɵreference(3);\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"groupedRows\", ctx_r5.groupedRows)(\"innerWidth\", ctx_r5.innerWidth)(\"ngStyle\", ctx_r5.getRowsStyles(group_r7))(\"rowDetail\", ctx_r5.rowDetail)(\"groupHeader\", ctx_r5.groupHeader)(\"offsetX\", ctx_r5.offsetX)(\"detailRowHeight\", ctx_r5.getDetailRowHeight(group_r7[i_r8], i_r8))(\"row\", group_r7)(\"expanded\", ctx_r5.getRowExpanded(group_r7))(\"rowIndex\", ctx_r5.getRowIndex(group_r7[i_r8]));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.groupedRows)(\"ngIfElse\", _r10);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-summary-row\", 16);\n} if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r6.getBottomSummaryRowStyles())(\"rowHeight\", ctx_r6.summaryHeight)(\"offsetX\", ctx_r6.offsetX)(\"innerWidth\", ctx_r6.innerWidth)(\"rows\", ctx_r6.rows)(\"columns\", ctx_r6.columns);\n} }\nfunction DataTableBodyComponent_datatable_scroller_3_Template(rf, ctx) { if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-scroller\", 5);\n    ɵngcc0.ɵɵlistener(\"scroll\", function DataTableBodyComponent_datatable_scroller_3_Template_datatable_scroller_scroll_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); var ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.onBodyScroll($event); });\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_1_Template, 1, 5, \"datatable-summary-row\", 6);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyComponent_datatable_scroller_3_datatable_row_wrapper_2_Template, 4, 12, \"datatable-row-wrapper\", 7);\n    ɵngcc0.ɵɵtemplate(3, DataTableBodyComponent_datatable_scroller_3_datatable_summary_row_3_Template, 1, 6, \"datatable-summary-row\", 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"scrollbarV\", ctx_r2.scrollbarV)(\"scrollbarH\", ctx_r2.scrollbarH)(\"scrollHeight\", ctx_r2.scrollHeight)(\"scrollWidth\", ctx_r2.columnGroupWidths == null ? null : ctx_r2.columnGroupWidths.total);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"top\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.temp)(\"ngForTrackBy\", ctx_r2.rowTrackingFn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.summaryRow && ctx_r2.summaryPosition === \"bottom\");\n} }\nfunction DataTableBodyComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 17);\n} if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r3.emptyMessage, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction DataTableHeaderComponent_div_1_datatable_header_cell_1_Template(rf, ctx) { if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-header-cell\", 4);\n    ɵngcc0.ɵɵlistener(\"resize\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_resize_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var column_r3 = ctx.$implicit; var ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onColumnResized($event, column_r3); })(\"longPressStart\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressStart_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onLongPressStart($event); })(\"longPressEnd\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_longPressEnd_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onLongPressEnd($event); })(\"sort\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_sort_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onSort($event); })(\"select\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.select.emit($event); })(\"columnContextmenu\", function DataTableHeaderComponent_div_1_datatable_header_cell_1_Template_datatable_header_cell_columnContextmenu_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.columnContextmenu.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var column_r3 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"resizeEnabled\", column_r3.resizeable)(\"pressModel\", column_r3)(\"pressEnabled\", ctx_r2.reorderable && column_r3.draggable)(\"dragX\", ctx_r2.reorderable && column_r3.draggable && column_r3.dragging)(\"dragY\", false)(\"dragModel\", column_r3)(\"dragEventTarget\", ctx_r2.dragEventTarget)(\"headerHeight\", ctx_r2.headerHeight)(\"isTarget\", column_r3.isTarget)(\"targetMarkerTemplate\", ctx_r2.targetMarkerTemplate)(\"targetMarkerContext\", column_r3.targetMarkerContext)(\"column\", column_r3)(\"sortType\", ctx_r2.sortType)(\"sorts\", ctx_r2.sorts)(\"selectionType\", ctx_r2.selectionType)(\"sortAscendingIcon\", ctx_r2.sortAscendingIcon)(\"sortDescendingIcon\", ctx_r2.sortDescendingIcon)(\"allRowsSelected\", ctx_r2.allRowsSelected);\n} }\nfunction DataTableHeaderComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_datatable_header_cell_1_Template, 1, 18, \"datatable-header-cell\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var colGroup_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(\"datatable-row-\" + colGroup_r1.type);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0._styleByGroup[colGroup_r1.type]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", colGroup_r1.columns)(\"ngForTrackBy\", ctx_r0.columnTrackingFn);\n} }\nfunction DatatableComponent_datatable_header_1_Template(rf, ctx) { if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-header\", 4);\n    ɵngcc0.ɵɵlistener(\"sort\", function DatatableComponent_datatable_header_1_Template_datatable_header_sort_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onColumnSort($event); })(\"resize\", function DatatableComponent_datatable_header_1_Template_datatable_header_resize_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onColumnResize($event); })(\"reorder\", function DatatableComponent_datatable_header_1_Template_datatable_header_reorder_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onColumnReorder($event); })(\"select\", function DatatableComponent_datatable_header_1_Template_datatable_header_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onHeaderSelect($event); })(\"columnContextmenu\", function DatatableComponent_datatable_header_1_Template_datatable_header_columnContextmenu_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onColumnContextmenu($event); });\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"sorts\", ctx_r0.sorts)(\"sortType\", ctx_r0.sortType)(\"scrollbarH\", ctx_r0.scrollbarH)(\"innerWidth\", ctx_r0._innerWidth)(\"offsetX\", ɵngcc0.ɵɵpipeBind1(1, 14, ctx_r0._offsetX))(\"dealsWithGroup\", ctx_r0.groupedRows !== undefined)(\"columns\", ctx_r0._internalColumns)(\"headerHeight\", ctx_r0.headerHeight)(\"reorderable\", ctx_r0.reorderable)(\"targetMarkerTemplate\", ctx_r0.targetMarkerTemplate)(\"sortAscendingIcon\", ctx_r0.cssClasses.sortAscending)(\"sortDescendingIcon\", ctx_r0.cssClasses.sortDescending)(\"allRowsSelected\", ctx_r0.allRowsSelected)(\"selectionType\", ctx_r0.selectionType);\n} }\nfunction DatatableComponent_datatable_footer_4_Template(rf, ctx) { if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-footer\", 5);\n    ɵngcc0.ɵɵlistener(\"page\", function DatatableComponent_datatable_footer_4_Template_datatable_footer_page_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onFooterPage($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"rowCount\", ctx_r1.rowCount)(\"pageSize\", ctx_r1.pageSize)(\"offset\", ctx_r1.offset)(\"footerHeight\", ctx_r1.footerHeight)(\"footerTemplate\", ctx_r1.footer)(\"totalMessage\", ctx_r1.messages.totalMessage)(\"pagerLeftArrowIcon\", ctx_r1.cssClasses.pagerLeftArrow)(\"pagerRightArrowIcon\", ctx_r1.cssClasses.pagerRightArrow)(\"pagerPreviousIcon\", ctx_r1.cssClasses.pagerPrevious)(\"selectedCount\", ctx_r1.selected.length)(\"selectedMessage\", !!ctx_r1.selectionType && ctx_r1.messages.selectedMessage)(\"pagerNextIcon\", ctx_r1.cssClasses.pagerNext);\n} }\nfunction DataTableHeaderCellComponent_1_ng_template_0_Template(rf, ctx) { }\nfunction DataTableHeaderCellComponent_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableHeaderCellComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.targetMarkerTemplate)(\"ngTemplateOutletContext\", ctx_r0.targetMarkerContext);\n} }\nfunction DataTableHeaderCellComponent_label_2_Template(rf, ctx) { if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 7);\n    ɵngcc0.ɵɵlistener(\"change\", function DataTableHeaderCellComponent_label_2_Template_input_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.select.emit(!ctx_r5.allRowsSelected); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r1.allRowsSelected);\n} }\nfunction DataTableHeaderCellComponent_span_3_Template(rf, ctx) { if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_span_3_Template_span_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onSort(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r2.name, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction DataTableHeaderCellComponent_4_ng_template_0_Template(rf, ctx) { }\nfunction DataTableHeaderCellComponent_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableHeaderCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n} if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.headerTemplate)(\"ngTemplateOutletContext\", ctx_r3.cellContext);\n} }\nfunction DataTableFooterComponent_1_ng_template_0_Template(rf, ctx) { }\nvar _c1 = function (a0, a1, a2, a3, a4) { return { rowCount: a0, pageSize: a1, selectedCount: a2, curPage: a3, offset: a4 }; };\nfunction DataTableFooterComponent_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableFooterComponent_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.footerTemplate.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction5(2, _c1, ctx_r0.rowCount, ctx_r0.pageSize, ctx_r0.selectedCount, ctx_r0.curPage, ctx_r0.offset));\n} }\nfunction DataTableFooterComponent_div_2_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.selectedCount == null ? null : ctx_r4.selectedCount.toLocaleString(), \" \", ctx_r4.selectedMessage, \" / \");\n} }\nfunction DataTableFooterComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(1, DataTableFooterComponent_div_2_span_1_Template, 2, 2, \"span\", 1);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedMessage);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r1.rowCount == null ? null : ctx_r1.rowCount.toLocaleString(), \" \", ctx_r1.totalMessage, \" \");\n} }\nfunction DataTableFooterComponent_datatable_pager_3_Template(rf, ctx) { if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-pager\", 6);\n    ɵngcc0.ɵɵlistener(\"change\", function DataTableFooterComponent_datatable_pager_3_Template_datatable_pager_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.page.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"pagerLeftArrowIcon\", ctx_r2.pagerLeftArrowIcon)(\"pagerRightArrowIcon\", ctx_r2.pagerRightArrowIcon)(\"pagerPreviousIcon\", ctx_r2.pagerPreviousIcon)(\"pagerNextIcon\", ctx_r2.pagerNextIcon)(\"page\", ctx_r2.curPage)(\"size\", ctx_r2.pageSize)(\"count\", ctx_r2.rowCount)(\"hidden\", !ctx_r2.isVisible);\n} }\nvar _c2 = function (a0) { return { \"selected-count\": a0 }; };\nfunction DataTablePagerComponent_li_7_Template(rf, ctx) { if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_li_7_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); var pg_r1 = ctx.$implicit; var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.selectPage(pg_r1.number); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var pg_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pg_r1.number === ctx_r0.page);\n    ɵngcc0.ɵɵattribute(\"aria-label\", \"page \" + pg_r1.number);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pg_r1.text, \" \");\n} }\nfunction DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template(rf, ctx) { if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"datatable-body-cell\", 3);\n    ɵngcc0.ɵɵlistener(\"activate\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_activate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ii_r5 = ctx.index; var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onActivate($event, ii_r5); })(\"treeAction\", function DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template_datatable_body_cell_treeAction_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onTreeAction(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var column_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"row\", ctx_r3.row)(\"group\", ctx_r3.group)(\"expanded\", ctx_r3.expanded)(\"isSelected\", ctx_r3.isSelected)(\"rowIndex\", ctx_r3.rowIndex)(\"column\", column_r4)(\"rowHeight\", ctx_r3.rowHeight)(\"displayCheck\", ctx_r3.displayCheck)(\"treeStatus\", ctx_r3.treeStatus);\n} }\nfunction DataTableBodyRowComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyRowComponent_div_0_datatable_body_cell_1_Template, 1, 9, \"datatable-body-cell\", 2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var colGroup_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"datatable-row-\", colGroup_r1.type, \" datatable-row-group\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0._groupStyles[colGroup_r1.type]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", colGroup_r1.columns)(\"ngForTrackBy\", ctx_r0.columnTrackingFn);\n} }\nfunction DataTableRowWrapperComponent_div_0_1_ng_template_0_Template(rf, ctx) { }\nfunction DataTableRowWrapperComponent_div_0_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n} if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.groupHeader.template)(\"ngTemplateOutletContext\", ctx_r3.groupContext);\n} }\nfunction DataTableRowWrapperComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_0_1_Template, 1, 2, undefined, 1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.getGroupHeaderStyle());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.groupHeader && ctx_r0.groupHeader.template);\n} }\nfunction DataTableRowWrapperComponent_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\"]);\n} }\nfunction DataTableRowWrapperComponent_div_2_1_ng_template_0_Template(rf, ctx) { }\nfunction DataTableRowWrapperComponent_div_2_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n} if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.rowDetail.template)(\"ngTemplateOutletContext\", ctx_r5.rowContext);\n} }\nfunction DataTableRowWrapperComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_div_2_1_Template, 1, 2, undefined, 1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r2.detailRowHeight, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.rowDetail && ctx_r2.rowDetail.template);\n} }\nvar _c3 = [\"cellTemplate\"];\nfunction DataTableBodyCellComponent_label_1_Template(rf, ctx) { if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_label_1_Template_input_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onCheckboxChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.isSelected);\n} }\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 11);\n} }\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 12);\n} }\nfunction DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n} }\nfunction DataTableBodyCellComponent_ng_container_2_button_1_Template(rf, ctx) { if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function DataTableBodyCellComponent_ng_container_2_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.onTreeAction(); });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_button_1_i_2_Template, 1, 0, \"i\", 8);\n    ɵngcc0.ɵɵtemplate(3, DataTableBodyCellComponent_ng_container_2_button_1_i_3_Template, 1, 0, \"i\", 9);\n    ɵngcc0.ɵɵtemplate(4, DataTableBodyCellComponent_ng_container_2_button_1_i_4_Template, 1, 0, \"i\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r6.treeStatus === \"disabled\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"loading\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"collapsed\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.treeStatus === \"expanded\" || ctx_r6.treeStatus === \"disabled\");\n} }\nfunction DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) { }\nvar _c4 = function (a0) { return { cellContext: a0 }; };\nfunction DataTableBodyCellComponent_ng_container_2_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyCellComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n} if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.column.treeToggleTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r7.cellContext));\n} }\nfunction DataTableBodyCellComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DataTableBodyCellComponent_ng_container_2_button_1_Template, 5, 4, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_2_Template, 1, 4, undefined, 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.column.treeToggleTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.treeToggleTemplate);\n} }\nfunction DataTableBodyCellComponent_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 15);\n} if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r2.sanitizedValue)(\"innerHTML\", ctx_r2.value, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction DataTableBodyCellComponent_4_ng_template_0_Template(rf, ctx) { }\nfunction DataTableBodyCellComponent_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DataTableBodyCellComponent_4_ng_template_0_Template, 0, 0, \"ng-template\", 14, 16, ɵngcc0.ɵɵtemplateRefExtractor);\n} if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.cellTemplate)(\"ngTemplateOutletContext\", ctx_r3.cellContext);\n} }\nfunction DataTableSummaryRowComponent_datatable_body_row_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"datatable-body-row\", 1);\n} if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerWidth\", ctx_r0.innerWidth)(\"offsetX\", ctx_r0.offsetX)(\"columns\", ctx_r0._internalColumns)(\"rowHeight\", ctx_r0.rowHeight)(\"row\", ctx_r0.summaryRow)(\"rowIndex\", 0 - 1);\n} }\nvar ScrollbarHelper = /** @class */ (function () {\n    function ScrollbarHelper(document) {\n        this.document = document;\n        this.width = this.getWidth();\n    }\n    /**\n     * @return {?}\n     */\n    ScrollbarHelper.prototype.getWidth = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var outer = this.document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.width = '100px';\n        outer.style.msOverflowStyle = 'scrollbar';\n        this.document.body.appendChild(outer);\n        /** @type {?} */\n        var widthNoScroll = outer.offsetWidth;\n        outer.style.overflow = 'scroll';\n        /** @type {?} */\n        var inner = this.document.createElement('div');\n        inner.style.width = '100%';\n        outer.appendChild(inner);\n        /** @type {?} */\n        var widthWithScroll = inner.offsetWidth;\n        outer.parentNode.removeChild(outer);\n        return widthNoScroll - widthWithScroll;\n    };\n    /** @nocollapse */\n    ScrollbarHelper.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\nScrollbarHelper.ɵfac = function ScrollbarHelper_Factory(t) { return new (t || ScrollbarHelper)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollbarHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ScrollbarHelper, factory: function (t) { return ScrollbarHelper.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollbarHelper, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return ScrollbarHelper;\n}());\nif (false) {\n    /** @type {?} */\n    ScrollbarHelper.prototype.width;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollbarHelper.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nvar DimensionsHelper = /** @class */ (function () {\n    function DimensionsHelper() {\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    DimensionsHelper.prototype.getDimensions = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        return element.getBoundingClientRect();\n    };\nDimensionsHelper.ɵfac = function DimensionsHelper_Factory(t) { return new (t || DimensionsHelper)(); };\nDimensionsHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DimensionsHelper, factory: function (t) { return DimensionsHelper.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DimensionsHelper, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n    return DimensionsHelper;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\nvar ColumnChangesService = /** @class */ (function () {\n    function ColumnChangesService() {\n        this.columnInputChanges = new Subject();\n    }\n    Object.defineProperty(ColumnChangesService.prototype, \"columnInputChanges$\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.columnInputChanges.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ColumnChangesService.prototype.onInputChange = /**\n     * @return {?}\n     */\n    function () {\n        this.columnInputChanges.next();\n    };\nColumnChangesService.ɵfac = function ColumnChangesService_Factory(t) { return new (t || ColumnChangesService)(); };\nColumnChangesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ColumnChangesService, factory: function (t) { return ColumnChangesService.ɵfac(t); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColumnChangesService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n    return ColumnChangesService;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ColumnChangesService.prototype.columnInputChanges;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableFooterTemplateDirective = /** @class */ (function () {\n    function DataTableFooterTemplateDirective(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DataTableFooterTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDataTableFooterTemplateDirective.ɵfac = function DataTableFooterTemplateDirective_Factory(t) { return new (t || DataTableFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDataTableFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableFooterTemplateDirective, selectors: [[\"\", \"ngx-datatable-footer-template\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableFooterTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngx-datatable-footer-template]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DataTableFooterTemplateDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableFooterTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nvar VisibilityDirective = /** @class */ (function () {\n    function VisibilityDirective(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    VisibilityDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.runCheck();\n    };\n    /**\n     * @return {?}\n     */\n    VisibilityDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timeout);\n    };\n    /**\n     * @return {?}\n     */\n    VisibilityDirective.prototype.onVisibilityChange = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // trigger zone recalc for columns\n        this.zone.run((/**\n         * @return {?}\n         */\n        function () {\n            _this.isVisible = true;\n            _this.visible.emit(true);\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    VisibilityDirective.prototype.runCheck = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var check = (/**\n         * @return {?}\n         */\n        function () {\n            // https://davidwalsh.name/offsetheight-visibility\n            var _a = _this.element.nativeElement, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(_this.timeout);\n                _this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(_this.timeout);\n                _this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this.timeout = setTimeout((/**\n                     * @return {?}\n                     */\n                    function () { return check(); }), 50);\n                }));\n            }\n        });\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        function () { return check(); }));\n    };\n    /** @nocollapse */\n    VisibilityDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    VisibilityDirective.propDecorators = {\n        isVisible: [{ type: HostBinding, args: ['class.visible',] }],\n        visible: [{ type: Output }]\n    };\nVisibilityDirective.ɵfac = function VisibilityDirective_Factory(t) { return new (t || VisibilityDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nVisibilityDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VisibilityDirective, selectors: [[\"\", \"visibilityObserver\", \"\"]], hostVars: 2, hostBindings: function VisibilityDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"visible\", ctx.isVisible);\n    } }, outputs: { visible: \"visible\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VisibilityDirective, [{\n        type: Directive,\n        args: [{ selector: '[visibilityObserver]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { isVisible: [{\n            type: HostBinding,\n            args: ['class.visible']\n        }], visible: [{\n            type: Output\n        }] }); })();\n    return VisibilityDirective;\n}());\nif (false) {\n    /** @type {?} */\n    VisibilityDirective.prototype.isVisible;\n    /** @type {?} */\n    VisibilityDirective.prototype.visible;\n    /** @type {?} */\n    VisibilityDirective.prototype.timeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.zone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nvar DraggableDirective = /** @class */ (function () {\n    function DraggableDirective(element) {\n        this.dragX = true;\n        this.dragY = true;\n        this.dragStart = new EventEmitter();\n        this.dragging = new EventEmitter();\n        this.dragEnd = new EventEmitter();\n        this.isDragging = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n            this.onMousedown(changes['dragEventTarget'].currentValue);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroySubscription();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseup = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.isDragging)\n            return;\n        this.isDragging = false;\n        this.element.classList.remove('dragging');\n        if (this.subscription) {\n            this._destroySubscription();\n            this.dragEnd.emit({\n                event: event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMousedown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // we only want to drag the inner header text\n        /** @type {?} */\n        var isDragElm = ((/** @type {?} */ (event.target))).classList.contains('draggable');\n        if (isDragElm && (this.dragX || this.dragY)) {\n            event.preventDefault();\n            this.isDragging = true;\n            /** @type {?} */\n            var mouseDownPos_1 = { x: event.clientX, y: event.clientY };\n            /** @type {?} */\n            var mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            function (ev) { return _this.onMouseup(ev); }));\n            /** @type {?} */\n            var mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            function (ev) { return _this.move(ev, mouseDownPos_1); }));\n            this.subscription.add(mouseMoveSub);\n            this.dragStart.emit({\n                event: event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    };\n    /**\n     * @param {?} event\n     * @param {?} mouseDownPos\n     * @return {?}\n     */\n    DraggableDirective.prototype.move = /**\n     * @param {?} event\n     * @param {?} mouseDownPos\n     * @return {?}\n     */\n    function (event, mouseDownPos) {\n        if (!this.isDragging)\n            return;\n        /** @type {?} */\n        var x = event.clientX - mouseDownPos.x;\n        /** @type {?} */\n        var y = event.clientY - mouseDownPos.y;\n        if (this.dragX)\n            this.element.style.left = x + \"px\";\n        if (this.dragY)\n            this.element.style.top = y + \"px\";\n        this.element.classList.add('dragging');\n        this.dragging.emit({\n            event: event,\n            element: this.element,\n            model: this.dragModel\n        });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DraggableDirective.prototype._destroySubscription = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    };\n    /** @nocollapse */\n    DraggableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DraggableDirective.propDecorators = {\n        dragEventTarget: [{ type: Input }],\n        dragModel: [{ type: Input }],\n        dragX: [{ type: Input }],\n        dragY: [{ type: Input }],\n        dragStart: [{ type: Output }],\n        dragging: [{ type: Output }],\n        dragEnd: [{ type: Output }]\n    };\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) { return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDraggableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DraggableDirective, selectors: [[\"\", \"draggable\", \"\"]], inputs: { dragX: \"dragX\", dragY: \"dragY\", dragEventTarget: \"dragEventTarget\", dragModel: \"dragModel\" }, outputs: { dragStart: \"dragStart\", dragging: \"dragging\", dragEnd: \"dragEnd\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n        type: Directive,\n        args: [{ selector: '[draggable]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dragX: [{\n            type: Input\n        }], dragY: [{\n            type: Input\n        }], dragStart: [{\n            type: Output\n        }], dragging: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragEventTarget: [{\n            type: Input\n        }], dragModel: [{\n            type: Input\n        }] }); })();\n    return DraggableDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DraggableDirective.prototype.dragEventTarget;\n    /** @type {?} */\n    DraggableDirective.prototype.dragModel;\n    /** @type {?} */\n    DraggableDirective.prototype.dragX;\n    /** @type {?} */\n    DraggableDirective.prototype.dragY;\n    /** @type {?} */\n    DraggableDirective.prototype.dragStart;\n    /** @type {?} */\n    DraggableDirective.prototype.dragging;\n    /** @type {?} */\n    DraggableDirective.prototype.dragEnd;\n    /** @type {?} */\n    DraggableDirective.prototype.element;\n    /** @type {?} */\n    DraggableDirective.prototype.isDragging;\n    /** @type {?} */\n    DraggableDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/** @type {?} */\nvar MouseEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .MouseEvent));\n/** @type {?} */\nvar KeyboardEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .KeyboardEvent));\n/** @type {?} */\nvar Event = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global)))).Event));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ResizeableDirective = /** @class */ (function () {\n    function ResizeableDirective(element, renderer) {\n        this.renderer = renderer;\n        this.resizeEnabled = true;\n        this.resize = new EventEmitter();\n        this.resizing = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ResizeableDirective.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renderer2 = this.renderer;\n        /** @type {?} */\n        var node = renderer2.createElement('span');\n        if (this.resizeEnabled) {\n            renderer2.addClass(node, 'resize-handle');\n        }\n        else {\n            renderer2.addClass(node, 'resize-handle--not-resizable');\n        }\n        renderer2.appendChild(this.element, node);\n    };\n    /**\n     * @return {?}\n     */\n    ResizeableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroySubscription();\n    };\n    /**\n     * @return {?}\n     */\n    ResizeableDirective.prototype.onMouseup = /**\n     * @return {?}\n     */\n    function () {\n        this.resizing = false;\n        if (this.subscription && !this.subscription.closed) {\n            this._destroySubscription();\n            this.resize.emit(this.element.clientWidth);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ResizeableDirective.prototype.onMousedown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        /** @type {?} */\n        var isHandle = ((/** @type {?} */ (event.target))).classList.contains('resize-handle');\n        /** @type {?} */\n        var initialWidth = this.element.clientWidth;\n        /** @type {?} */\n        var mouseDownScreenX = event.screenX;\n        if (isHandle) {\n            event.stopPropagation();\n            this.resizing = true;\n            /** @type {?} */\n            var mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            function (ev) { return _this.onMouseup(); }));\n            /** @type {?} */\n            var mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) { return _this.move(e, initialWidth, mouseDownScreenX); }));\n            this.subscription.add(mouseMoveSub);\n        }\n    };\n    /**\n     * @param {?} event\n     * @param {?} initialWidth\n     * @param {?} mouseDownScreenX\n     * @return {?}\n     */\n    ResizeableDirective.prototype.move = /**\n     * @param {?} event\n     * @param {?} initialWidth\n     * @param {?} mouseDownScreenX\n     * @return {?}\n     */\n    function (event, initialWidth, mouseDownScreenX) {\n        /** @type {?} */\n        var movementX = event.screenX - mouseDownScreenX;\n        /** @type {?} */\n        var newWidth = initialWidth + movementX;\n        /** @type {?} */\n        var overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n        /** @type {?} */\n        var underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n        if (overMinWidth && underMaxWidth) {\n            this.element.style.width = newWidth + \"px\";\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    ResizeableDirective.prototype._destroySubscription = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    };\n    /** @nocollapse */\n    ResizeableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    ResizeableDirective.propDecorators = {\n        resizeEnabled: [{ type: Input }],\n        minWidth: [{ type: Input }],\n        maxWidth: [{ type: Input }],\n        resize: [{ type: Output }],\n        onMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n    };\nResizeableDirective.ɵfac = function ResizeableDirective_Factory(t) { return new (t || ResizeableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nResizeableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ResizeableDirective, selectors: [[\"\", \"resizeable\", \"\"]], hostVars: 2, hostBindings: function ResizeableDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function ResizeableDirective_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"resizeable\", ctx.resizeEnabled);\n    } }, inputs: { resizeEnabled: \"resizeEnabled\", minWidth: \"minWidth\", maxWidth: \"maxWidth\" }, outputs: { resize: \"resize\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ResizeableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[resizeable]',\n                host: {\n                    '[class.resizeable]': 'resizeEnabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { resizeEnabled: [{\n            type: Input\n        }], resize: [{\n            type: Output\n        }], onMousedown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], minWidth: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }] }); })();\n    return ResizeableDirective;\n}());\nif (false) {\n    /** @type {?} */\n    ResizeableDirective.prototype.resizeEnabled;\n    /** @type {?} */\n    ResizeableDirective.prototype.minWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.maxWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.resize;\n    /** @type {?} */\n    ResizeableDirective.prototype.element;\n    /** @type {?} */\n    ResizeableDirective.prototype.subscription;\n    /** @type {?} */\n    ResizeableDirective.prototype.resizing;\n    /**\n     * @type {?}\n     * @private\n     */\n    ResizeableDirective.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar OrderableDirective = /** @class */ (function () {\n    function OrderableDirective(differs, document) {\n        this.document = document;\n        this.reorder = new EventEmitter();\n        this.targetChanged = new EventEmitter();\n        this.differ = differs.find({}).create();\n    }\n    /**\n     * @return {?}\n     */\n    OrderableDirective.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        // HACK: Investigate Better Way\n        this.updateSubscriptions();\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    };\n    /**\n     * @return {?}\n     */\n    OrderableDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.draggables.forEach((/**\n         * @param {?} d\n         * @return {?}\n         */\n        function (d) {\n            d.dragStart.unsubscribe();\n            d.dragging.unsubscribe();\n            d.dragEnd.unsubscribe();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    OrderableDirective.prototype.updateSubscriptions = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var diffs = this.differ.diff(this.createMapDiffs());\n        if (diffs) {\n            /** @type {?} */\n            var subscribe = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var currentValue = _a.currentValue, previousValue = _a.previousValue;\n                unsubscribe_1({ previousValue: previousValue });\n                if (currentValue) {\n                    currentValue.dragStart.subscribe(_this.onDragStart.bind(_this));\n                    currentValue.dragging.subscribe(_this.onDragging.bind(_this));\n                    currentValue.dragEnd.subscribe(_this.onDragEnd.bind(_this));\n                }\n            });\n            /** @type {?} */\n            var unsubscribe_1 = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var previousValue = _a.previousValue;\n                if (previousValue) {\n                    previousValue.dragStart.unsubscribe();\n                    previousValue.dragging.unsubscribe();\n                    previousValue.dragEnd.unsubscribe();\n                }\n            });\n            diffs.forEachAddedItem(subscribe);\n            // diffs.forEachChangedItem(subscribe.bind(this));\n            diffs.forEachRemovedItem(unsubscribe_1);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    OrderableDirective.prototype.onDragStart = /**\n     * @return {?}\n     */\n    function () {\n        var e_1, _a;\n        this.positions = {};\n        /** @type {?} */\n        var i = 0;\n        try {\n            for (var _b = __values(this.draggables.toArray()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var dragger = _c.value;\n                /** @type {?} */\n                var elm = dragger.element;\n                /** @type {?} */\n                var left = parseInt(elm.offsetLeft.toString(), 0);\n                this.positions[dragger.dragModel.prop] = {\n                    left: left,\n                    right: left + parseInt(elm.offsetWidth.toString(), 0),\n                    index: i++,\n                    element: elm\n                };\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    OrderableDirective.prototype.onDragging = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var element = _a.element, model = _a.model, event = _a.event;\n        /** @type {?} */\n        var prevPos = this.positions[model.prop];\n        /** @type {?} */\n        var target = this.isTarget(model, event);\n        if (target) {\n            if (this.lastDraggingIndex !== target.i) {\n                this.targetChanged.emit({\n                    prevIndex: this.lastDraggingIndex,\n                    newIndex: target.i,\n                    initialIndex: prevPos.index\n                });\n                this.lastDraggingIndex = target.i;\n            }\n        }\n        else if (this.lastDraggingIndex !== prevPos.index) {\n            this.targetChanged.emit({\n                prevIndex: this.lastDraggingIndex,\n                initialIndex: prevPos.index\n            });\n            this.lastDraggingIndex = prevPos.index;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    OrderableDirective.prototype.onDragEnd = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var element = _a.element, model = _a.model, event = _a.event;\n        /** @type {?} */\n        var prevPos = this.positions[model.prop];\n        /** @type {?} */\n        var target = this.isTarget(model, event);\n        if (target) {\n            this.reorder.emit({\n                prevIndex: prevPos.index,\n                newIndex: target.i,\n                model: model\n            });\n        }\n        this.lastDraggingIndex = undefined;\n        element.style.left = 'auto';\n    };\n    /**\n     * @param {?} model\n     * @param {?} event\n     * @return {?}\n     */\n    OrderableDirective.prototype.isTarget = /**\n     * @param {?} model\n     * @param {?} event\n     * @return {?}\n     */\n    function (model, event) {\n        /** @type {?} */\n        var i = 0;\n        /** @type {?} */\n        var x = event.x || event.clientX;\n        /** @type {?} */\n        var y = event.y || event.clientY;\n        /** @type {?} */\n        var targets = this.document.elementsFromPoint(x, y);\n        var _loop_1 = function (prop) {\n            // current column position which throws event.\n            /** @type {?} */\n            var pos = this_1.positions[prop];\n            // since we drag the inner span, we need to find it in the elements at the cursor\n            if (model.prop !== prop && targets.find((/**\n             * @param {?} el\n             * @return {?}\n             */\n            function (el) { return el === pos.element; }))) {\n                return { value: {\n                        pos: pos,\n                        i: i\n                    } };\n            }\n            i++;\n        };\n        var this_1 = this;\n        for (var prop in this.positions) {\n            var state_1 = _loop_1(prop);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    OrderableDirective.prototype.createMapDiffs = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.draggables.toArray().reduce((/**\n         * @param {?} acc\n         * @param {?} curr\n         * @return {?}\n         */\n        function (acc, curr) {\n            acc[curr.dragModel.$$id] = curr;\n            return acc;\n        }), {});\n    };\n    /** @nocollapse */\n    OrderableDirective.ctorParameters = function () { return [\n        { type: KeyValueDiffers },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    OrderableDirective.propDecorators = {\n        reorder: [{ type: Output }],\n        targetChanged: [{ type: Output }],\n        draggables: [{ type: ContentChildren, args: [DraggableDirective, { descendants: true },] }]\n    };\nOrderableDirective.ɵfac = function OrderableDirective_Factory(t) { return new (t || OrderableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nOrderableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: OrderableDirective, selectors: [[\"\", \"orderable\", \"\"]], contentQueries: function OrderableDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DraggableDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.draggables = _t);\n    } }, outputs: { reorder: \"reorder\", targetChanged: \"targetChanged\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OrderableDirective, [{\n        type: Directive,\n        args: [{ selector: '[orderable]' }]\n    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { reorder: [{\n            type: Output\n        }], targetChanged: [{\n            type: Output\n        }], draggables: [{\n            type: ContentChildren,\n            args: [DraggableDirective, { descendants: true }]\n        }] }); })();\n    return OrderableDirective;\n}());\nif (false) {\n    /** @type {?} */\n    OrderableDirective.prototype.reorder;\n    /** @type {?} */\n    OrderableDirective.prototype.targetChanged;\n    /** @type {?} */\n    OrderableDirective.prototype.draggables;\n    /** @type {?} */\n    OrderableDirective.prototype.positions;\n    /** @type {?} */\n    OrderableDirective.prototype.differ;\n    /** @type {?} */\n    OrderableDirective.prototype.lastDraggingIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    OrderableDirective.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LongPressDirective = /** @class */ (function () {\n    function LongPressDirective() {\n        this.pressEnabled = true;\n        this.duration = 500;\n        this.longPressStart = new EventEmitter();\n        this.longPressing = new EventEmitter();\n        this.longPressEnd = new EventEmitter();\n        this.mouseX = 0;\n        this.mouseY = 0;\n    }\n    Object.defineProperty(LongPressDirective.prototype, \"press\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.pressing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LongPressDirective.prototype, \"isLongPress\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.isLongPressing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    LongPressDirective.prototype.onMouseDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // don't do right/middle clicks\n        if (event.which !== 1 || !this.pressEnabled)\n            return;\n        // don't start drag if its on resize handle\n        /** @type {?} */\n        var target = (/** @type {?} */ (event.target));\n        if (target.classList.contains('resize-handle'))\n            return;\n        this.mouseX = event.clientX;\n        this.mouseY = event.clientY;\n        this.pressing = true;\n        this.isLongPressing = false;\n        /** @type {?} */\n        var mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        function (ev) { return _this.onMouseup(); }));\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this.isLongPressing = true;\n            _this.longPressStart.emit({\n                event: event,\n                model: _this.pressModel\n            });\n            _this.subscription.add(fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} mouseEvent\n             * @return {?}\n             */\n            function (mouseEvent) { return _this.onMouseMove(mouseEvent); })));\n            _this.loop(event);\n        }), this.duration);\n        this.loop(event);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    LongPressDirective.prototype.onMouseMove = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.pressing && !this.isLongPressing) {\n            /** @type {?} */\n            var xThres = Math.abs(event.clientX - this.mouseX) > 10;\n            /** @type {?} */\n            var yThres = Math.abs(event.clientY - this.mouseY) > 10;\n            if (xThres || yThres) {\n                this.endPress();\n            }\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    LongPressDirective.prototype.loop = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        if (this.isLongPressing) {\n            this.timeout = setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                _this.longPressing.emit({\n                    event: event,\n                    model: _this.pressModel\n                });\n                _this.loop(event);\n            }), 50);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LongPressDirective.prototype.endPress = /**\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timeout);\n        this.isLongPressing = false;\n        this.pressing = false;\n        this._destroySubscription();\n        this.longPressEnd.emit({\n            model: this.pressModel\n        });\n    };\n    /**\n     * @return {?}\n     */\n    LongPressDirective.prototype.onMouseup = /**\n     * @return {?}\n     */\n    function () {\n        this.endPress();\n    };\n    /**\n     * @return {?}\n     */\n    LongPressDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroySubscription();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    LongPressDirective.prototype._destroySubscription = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    };\n    LongPressDirective.propDecorators = {\n        pressEnabled: [{ type: Input }],\n        pressModel: [{ type: Input }],\n        duration: [{ type: Input }],\n        longPressStart: [{ type: Output }],\n        longPressing: [{ type: Output }],\n        longPressEnd: [{ type: Output }],\n        press: [{ type: HostBinding, args: ['class.press',] }],\n        isLongPress: [{ type: HostBinding, args: ['class.longpress',] }],\n        onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n    };\nLongPressDirective.ɵfac = function LongPressDirective_Factory(t) { return new (t || LongPressDirective)(); };\nLongPressDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LongPressDirective, selectors: [[\"\", \"long-press\", \"\"]], hostVars: 4, hostBindings: function LongPressDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function LongPressDirective_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"press\", ctx.press)(\"longpress\", ctx.isLongPress);\n    } }, inputs: { pressEnabled: \"pressEnabled\", duration: \"duration\", pressModel: \"pressModel\" }, outputs: { longPressStart: \"longPressStart\", longPressing: \"longPressing\", longPressEnd: \"longPressEnd\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LongPressDirective, [{\n        type: Directive,\n        args: [{ selector: '[long-press]' }]\n    }], function () { return []; }, { pressEnabled: [{\n            type: Input\n        }], duration: [{\n            type: Input\n        }], longPressStart: [{\n            type: Output\n        }], longPressing: [{\n            type: Output\n        }], longPressEnd: [{\n            type: Output\n        }], press: [{\n            type: HostBinding,\n            args: ['class.press']\n        }], isLongPress: [{\n            type: HostBinding,\n            args: ['class.longpress']\n        }], onMouseDown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], pressModel: [{\n            type: Input\n        }] }); })();\n    return LongPressDirective;\n}());\nif (false) {\n    /** @type {?} */\n    LongPressDirective.prototype.pressEnabled;\n    /** @type {?} */\n    LongPressDirective.prototype.pressModel;\n    /** @type {?} */\n    LongPressDirective.prototype.duration;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressStart;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressEnd;\n    /** @type {?} */\n    LongPressDirective.prototype.pressing;\n    /** @type {?} */\n    LongPressDirective.prototype.isLongPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.timeout;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseX;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseY;\n    /** @type {?} */\n    LongPressDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ScrollerComponent = /** @class */ (function () {\n    function ScrollerComponent(ngZone, element, renderer) {\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollbarV = false;\n        this.scrollbarH = false;\n        this.scroll = new EventEmitter();\n        this.scrollYPos = 0;\n        this.scrollXPos = 0;\n        this.prevScrollYPos = 0;\n        this.prevScrollXPos = 0;\n        this._scrollEventListener = null;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ScrollerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        // manual bind so we don't always listen\n        if (this.scrollbarV || this.scrollbarH) {\n            /** @type {?} */\n            var renderer = this.renderer;\n            this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n            this._scrollEventListener = this.onScrolled.bind(this);\n            this.parentElement.addEventListener('scroll', this._scrollEventListener);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ScrollerComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._scrollEventListener) {\n            this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n            this._scrollEventListener = null;\n        }\n    };\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    ScrollerComponent.prototype.setOffset = /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    function (offsetY) {\n        if (this.parentElement) {\n            this.parentElement.scrollTop = offsetY;\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ScrollerComponent.prototype.onScrolled = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        /** @type {?} */\n        var dom = (/** @type {?} */ (event.currentTarget));\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        function () {\n            _this.scrollYPos = dom.scrollTop;\n            _this.scrollXPos = dom.scrollLeft;\n            _this.updateOffset();\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    ScrollerComponent.prototype.updateOffset = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var direction;\n        if (this.scrollYPos < this.prevScrollYPos) {\n            direction = 'down';\n        }\n        else if (this.scrollYPos > this.prevScrollYPos) {\n            direction = 'up';\n        }\n        this.scroll.emit({\n            direction: direction,\n            scrollYPos: this.scrollYPos,\n            scrollXPos: this.scrollXPos\n        });\n        this.prevScrollYPos = this.scrollYPos;\n        this.prevScrollXPos = this.scrollXPos;\n    };\n    /** @nocollapse */\n    ScrollerComponent.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: ElementRef },\n        { type: Renderer2 }\n    ]; };\n    ScrollerComponent.propDecorators = {\n        scrollbarV: [{ type: Input }],\n        scrollbarH: [{ type: Input }],\n        scrollHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n        scrollWidth: [{ type: HostBinding, args: ['style.width.px',] }, { type: Input }],\n        scroll: [{ type: Output }]\n    };\nScrollerComponent.ɵfac = function ScrollerComponent_Factory(t) { return new (t || ScrollerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nScrollerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScrollerComponent, selectors: [[\"datatable-scroller\"]], hostAttrs: [1, \"datatable-scroll\"], hostVars: 4, hostBindings: function ScrollerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.scrollHeight, \"px\")(\"width\", ctx.scrollWidth, \"px\");\n    } }, inputs: { scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", scrollHeight: \"scrollHeight\", scrollWidth: \"scrollWidth\" }, outputs: { scroll: \"scroll\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScrollerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-scroller',\n                template: \"\\n    <ng-content></ng-content>\\n  \",\n                host: {\n                    class: 'datatable-scroll'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { scrollbarV: [{\n            type: Input\n        }], scrollbarH: [{\n            type: Input\n        }], scroll: [{\n            type: Output\n        }], scrollHeight: [{\n            type: HostBinding,\n            args: ['style.height.px']\n        }, {\n            type: Input\n        }], scrollWidth: [{\n            type: HostBinding,\n            args: ['style.width.px']\n        }, {\n            type: Input\n        }] }); })();\n    return ScrollerComponent;\n}());\nif (false) {\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarV;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarH;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollHeight;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollWidth;\n    /** @type {?} */\n    ScrollerComponent.prototype.scroll;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.element;\n    /** @type {?} */\n    ScrollerComponent.prototype.parentElement;\n    /** @type {?} */\n    ScrollerComponent.prototype.onScrollListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype._scrollEventListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableGroupHeaderTemplateDirective = /** @class */ (function () {\n    function DatatableGroupHeaderTemplateDirective(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DatatableGroupHeaderTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDatatableGroupHeaderTemplateDirective.ɵfac = function DatatableGroupHeaderTemplateDirective_Factory(t) { return new (t || DatatableGroupHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDatatableGroupHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatatableGroupHeaderTemplateDirective, selectors: [[\"\", \"ngx-datatable-group-header-template\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableGroupHeaderTemplateDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngx-datatable-group-header-template]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DatatableGroupHeaderTemplateDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DatatableGroupHeaderTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableGroupHeaderDirective = /** @class */ (function () {\n    function DatatableGroupHeaderDirective() {\n        /**\n         * Row height is required when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Track toggling of group visibility\n         */\n        this.toggle = new EventEmitter();\n    }\n    Object.defineProperty(DatatableGroupHeaderDirective.prototype, \"template\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._templateInput || this._templateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggle the expansion of a group\n     */\n    /**\n     * Toggle the expansion of a group\n     * @param {?} group\n     * @return {?}\n     */\n    DatatableGroupHeaderDirective.prototype.toggleExpandGroup = /**\n     * Toggle the expansion of a group\n     * @param {?} group\n     * @return {?}\n     */\n    function (group) {\n        this.toggle.emit({\n            type: 'group',\n            value: group\n        });\n    };\n    /**\n     * Expand all groups\n     */\n    /**\n     * Expand all groups\n     * @return {?}\n     */\n    DatatableGroupHeaderDirective.prototype.expandAllGroups = /**\n     * Expand all groups\n     * @return {?}\n     */\n    function () {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    };\n    /**\n     * Collapse all groups\n     */\n    /**\n     * Collapse all groups\n     * @return {?}\n     */\n    DatatableGroupHeaderDirective.prototype.collapseAllGroups = /**\n     * Collapse all groups\n     * @return {?}\n     */\n    function () {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    };\n    DatatableGroupHeaderDirective.propDecorators = {\n        rowHeight: [{ type: Input }],\n        _templateInput: [{ type: Input, args: ['template',] }],\n        _templateQuery: [{ type: ContentChild, args: [DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true },] }],\n        toggle: [{ type: Output }]\n    };\nDatatableGroupHeaderDirective.ɵfac = function DatatableGroupHeaderDirective_Factory(t) { return new (t || DatatableGroupHeaderDirective)(); };\nDatatableGroupHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatatableGroupHeaderDirective, selectors: [[\"ngx-datatable-group-header\"]], contentQueries: function DatatableGroupHeaderDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, DatatableGroupHeaderTemplateDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    } }, inputs: { rowHeight: \"rowHeight\", _templateInput: [\"template\", \"_templateInput\"] }, outputs: { toggle: \"toggle\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableGroupHeaderDirective, [{\n        type: Directive,\n        args: [{ selector: 'ngx-datatable-group-header' }]\n    }], function () { return []; }, { rowHeight: [{\n            type: Input\n        }], toggle: [{\n            type: Output\n        }], _templateInput: [{\n            type: Input,\n            args: ['template']\n        }], _templateQuery: [{\n            type: ContentChild,\n            args: [DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true }]\n        }] }); })();\n    return DatatableGroupHeaderDirective;\n}());\nif (false) {\n    /**\n     * Row height is required when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateQuery;\n    /**\n     * Track toggling of group visibility\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Always returns the empty string ''\n * @return {?}\n */\nfunction emptyStringGetter() {\n    return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n * @param {?} prop\n * @return {?}\n */\nfunction getterForProp(prop) {\n    if (prop == null) {\n        return emptyStringGetter;\n    }\n    if (typeof prop === 'number') {\n        return numericIndexGetter;\n    }\n    else {\n        // deep or simple\n        if (prop.indexOf('.') !== -1) {\n            return deepValueGetter;\n        }\n        else {\n            return shallowValueGetter;\n        }\n    }\n}\n/**\n * Returns the value at this numeric index.\n * @param {?} row array of values\n * @param {?} index numeric index\n * @return {?} any or '' if invalid index\n */\nfunction numericIndexGetter(row, index) {\n    if (row == null) {\n        return '';\n    }\n    // mimic behavior of deepValueGetter\n    if (!row || index == null) {\n        return row;\n    }\n    /** @type {?} */\n    var value = row[index];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param {?} obj object containing the field\n * @param {?} fieldName field name string\n * @return {?}\n */\nfunction shallowValueGetter(obj, fieldName) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !fieldName) {\n        return obj;\n    }\n    /** @type {?} */\n    var value = obj[fieldName];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {?} obj\n * @param {?} path\n * @return {?}\n */\nfunction deepValueGetter(obj, path) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !path) {\n        return obj;\n    }\n    // check if path matches a root-level field\n    // { \"a.b.c\": 123 }\n    /** @type {?} */\n    var current = obj[path];\n    if (current !== undefined) {\n        return current;\n    }\n    current = obj;\n    /** @type {?} */\n    var split = path.split('.');\n    if (split.length) {\n        for (var i = 0; i < split.length; i++) {\n            current = current[split[i]];\n            // if found undefined, return empty string\n            if (current === undefined || current === null) {\n                return '';\n            }\n        }\n    }\n    return current;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction optionalGetterForProp(prop) {\n    return prop && ((/**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) { return getterForProp(prop)(row, prop); }));\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param {?} rows\n *\n * @param {?=} from\n * @param {?=} to\n * @return {?}\n */\nfunction groupRowsByParents(rows, from, to) {\n    if (from && to) {\n        /** @type {?} */\n        var nodeById = {};\n        /** @type {?} */\n        var l = rows.length;\n        /** @type {?} */\n        var node = null;\n        nodeById[0] = new TreeNode(); // that's the root node\n        // that's the root node\n        /** @type {?} */\n        var uniqIDs = rows.reduce((/**\n         * @param {?} arr\n         * @param {?} item\n         * @return {?}\n         */\n        function (arr, item) {\n            /** @type {?} */\n            var toValue = to(item);\n            if (arr.indexOf(toValue) === -1) {\n                arr.push(toValue);\n            }\n            return arr;\n        }), []);\n        for (var i = 0; i < l; i++) {\n            // make TreeNode objects for each item\n            nodeById[to(rows[i])] = new TreeNode(rows[i]);\n        }\n        for (var i = 0; i < l; i++) {\n            // link all TreeNode objects\n            node = nodeById[to(rows[i])];\n            /** @type {?} */\n            var parent_1 = 0;\n            /** @type {?} */\n            var fromValue = from(node.row);\n            if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n                parent_1 = fromValue;\n            }\n            node.parent = nodeById[parent_1];\n            node.row['level'] = node.parent.row['level'] + 1;\n            node.parent.children.push(node);\n        }\n        /** @type {?} */\n        var resolvedRows_1 = [];\n        nodeById[0].flatten((/**\n         * @return {?}\n         */\n        function () {\n            resolvedRows_1 = __spread(resolvedRows_1, [this.row]);\n        }), true);\n        return resolvedRows_1;\n    }\n    else {\n        return rows;\n    }\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(row) {\n        if (row === void 0) { row = null; }\n        if (!row) {\n            row = {\n                level: -1,\n                treeStatus: 'expanded'\n            };\n        }\n        this.row = row;\n        this.parent = null;\n        this.children = [];\n    }\n    /**\n     * @param {?} f\n     * @param {?} recursive\n     * @return {?}\n     */\n    TreeNode.prototype.flatten = /**\n     * @param {?} f\n     * @param {?} recursive\n     * @return {?}\n     */\n    function (f, recursive) {\n        if (this.row['treeStatus'] === 'expanded') {\n            for (var i = 0, l = this.children.length; i < l; i++) {\n                /** @type {?} */\n                var child = this.children[i];\n                f.apply(child, Array.prototype.slice.call(arguments, 2));\n                if (recursive)\n                    child.flatten.apply(child, arguments);\n            }\n        }\n    };\n    return TreeNode;\n}());\nif (false) {\n    /** @type {?} */\n    TreeNode.prototype.row;\n    /** @type {?} */\n    TreeNode.prototype.parent;\n    /** @type {?} */\n    TreeNode.prototype.children;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param {?} str\n * @return {?}\n */\nfunction camelCase(str) {\n    // Replace special characters with a space\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n    // put a space before an uppercase letter\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n    // Lower case first character and some other stuff\n    str = str\n        .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n        .trim()\n        .toLowerCase();\n    // uppercase characters preceded by a space or number\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, (/**\n     * @param {?} a\n     * @param {?} b\n     * @param {?} c\n     * @return {?}\n     */\n    function (a, b, c) {\n        return b.trim() + c.toUpperCase();\n    }));\n    return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n * @param {?} str\n * @return {?}\n */\nfunction deCamelCase(str) {\n    return str.replace(/([A-Z])/g, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    function (match) { return \" \" + match; })).replace(/^./, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    function (match) { return match.toUpperCase(); }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n * @return {?}\n */\nfunction id() {\n    return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sets the column defaults\n * @param {?} columns\n * @return {?}\n */\nfunction setColumnDefaults(columns) {\n    var e_1, _a;\n    if (!columns)\n        return;\n    // Only one column should hold the tree view\n    // Thus if multiple columns are provided with\n    // isTreeColumn as true we take only the first one\n    /** @type {?} */\n    var treeColumnFound = false;\n    try {\n        for (var columns_1 = __values(columns), columns_1_1 = columns_1.next(); !columns_1_1.done; columns_1_1 = columns_1.next()) {\n            var column = columns_1_1.value;\n            if (!column.$$id) {\n                column.$$id = id();\n            }\n            // prop can be numeric; zero is valid not a missing prop\n            // translate name => prop\n            if (isNullOrUndefined(column.prop) && column.name) {\n                column.prop = camelCase(column.name);\n            }\n            if (!column.$$valueGetter) {\n                column.$$valueGetter = getterForProp(column.prop);\n            }\n            // format props if no name passed\n            if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n                column.name = deCamelCase(String(column.prop));\n            }\n            if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n                column.name = ''; // Fixes IE and Edge displaying `null`\n            }\n            if (!column.hasOwnProperty('resizeable')) {\n                column.resizeable = true;\n            }\n            if (!column.hasOwnProperty('sortable')) {\n                column.sortable = true;\n            }\n            if (!column.hasOwnProperty('draggable')) {\n                column.draggable = true;\n            }\n            if (!column.hasOwnProperty('canAutoResize')) {\n                column.canAutoResize = true;\n            }\n            if (!column.hasOwnProperty('width')) {\n                column.width = 150;\n            }\n            if (!column.hasOwnProperty('isTreeColumn')) {\n                column.isTreeColumn = false;\n            }\n            else {\n                if (column.isTreeColumn && !treeColumnFound) {\n                    // If the first column with isTreeColumn is true found\n                    // we mark that treeCoulmn is found\n                    treeColumnFound = true;\n                }\n                else {\n                    // After that isTreeColumn property for any other column\n                    // will be set as false\n                    column.isTreeColumn = false;\n                }\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (columns_1_1 && !columns_1_1.done && (_a = columns_1.return)) _a.call(columns_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n * @param {?} templates\n * @return {?}\n */\nfunction translateTemplates(templates) {\n    var e_2, _a, e_3, _b;\n    /** @type {?} */\n    var result = [];\n    try {\n        for (var templates_1 = __values(templates), templates_1_1 = templates_1.next(); !templates_1_1.done; templates_1_1 = templates_1.next()) {\n            var temp = templates_1_1.value;\n            /** @type {?} */\n            var col = {};\n            /** @type {?} */\n            var props = Object.getOwnPropertyNames(temp);\n            try {\n                for (var props_1 = (e_3 = void 0, __values(props)), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n                    var prop = props_1_1.value;\n                    col[prop] = temp[prop];\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (props_1_1 && !props_1_1.done && (_b = props_1.return)) _b.call(props_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            if (temp.headerTemplate) {\n                col.headerTemplate = temp.headerTemplate;\n            }\n            if (temp.cellTemplate) {\n                col.cellTemplate = temp.cellTemplate;\n            }\n            if (temp.summaryFunc) {\n                col.summaryFunc = temp.summaryFunc;\n            }\n            if (temp.summaryTemplate) {\n                col.summaryTemplate = temp.summaryTemplate;\n            }\n            result.push(col);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (templates_1_1 && !templates_1_1.done && (_a = templates_1.return)) _a.call(templates_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar ColumnMode = {\n    standard: 'standard',\n    flex: 'flex',\n    force: 'force',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar SelectionType = {\n    single: 'single',\n    multi: 'multi',\n    multiClick: 'multiClick',\n    cell: 'cell',\n    checkbox: 'checkbox',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar SortType = {\n    single: 'single',\n    multi: 'multi',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar ContextmenuType = {\n    header: 'header',\n    body: 'body',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableColumnHeaderDirective = /** @class */ (function () {\n    function DataTableColumnHeaderDirective(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DataTableColumnHeaderDirective.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDataTableColumnHeaderDirective.ɵfac = function DataTableColumnHeaderDirective_Factory(t) { return new (t || DataTableColumnHeaderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDataTableColumnHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnHeaderDirective, selectors: [[\"\", \"ngx-datatable-header-template\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnHeaderDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngx-datatable-header-template]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DataTableColumnHeaderDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableColumnHeaderDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableColumnCellDirective = /** @class */ (function () {\n    function DataTableColumnCellDirective(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DataTableColumnCellDirective.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDataTableColumnCellDirective.ɵfac = function DataTableColumnCellDirective_Factory(t) { return new (t || DataTableColumnCellDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDataTableColumnCellDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnCellDirective, selectors: [[\"\", \"ngx-datatable-cell-template\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnCellDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngx-datatable-cell-template]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DataTableColumnCellDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableColumnCellTreeToggle = /** @class */ (function () {\n    function DataTableColumnCellTreeToggle(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DataTableColumnCellTreeToggle.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDataTableColumnCellTreeToggle.ɵfac = function DataTableColumnCellTreeToggle_Factory(t) { return new (t || DataTableColumnCellTreeToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDataTableColumnCellTreeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnCellTreeToggle, selectors: [[\"\", \"ngx-datatable-tree-toggle\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnCellTreeToggle, [{\n        type: Directive,\n        args: [{ selector: '[ngx-datatable-tree-toggle]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DataTableColumnCellTreeToggle;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellTreeToggle.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableColumnDirective = /** @class */ (function () {\n    function DataTableColumnDirective(columnChangesService) {\n        this.columnChangesService = columnChangesService;\n        this.isFirstChange = true;\n    }\n    Object.defineProperty(DataTableColumnDirective.prototype, \"cellTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._cellTemplateInput || this._cellTemplateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableColumnDirective.prototype, \"headerTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._headerTemplateInput || this._headerTemplateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableColumnDirective.prototype, \"treeToggleTemplate\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DataTableColumnDirective.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        if (this.isFirstChange) {\n            this.isFirstChange = false;\n        }\n        else {\n            this.columnChangesService.onInputChange();\n        }\n    };\n    /** @nocollapse */\n    DataTableColumnDirective.ctorParameters = function () { return [\n        { type: ColumnChangesService }\n    ]; };\n    DataTableColumnDirective.propDecorators = {\n        name: [{ type: Input }],\n        prop: [{ type: Input }],\n        frozenLeft: [{ type: Input }],\n        frozenRight: [{ type: Input }],\n        flexGrow: [{ type: Input }],\n        resizeable: [{ type: Input }],\n        comparator: [{ type: Input }],\n        pipe: [{ type: Input }],\n        sortable: [{ type: Input }],\n        draggable: [{ type: Input }],\n        canAutoResize: [{ type: Input }],\n        minWidth: [{ type: Input }],\n        width: [{ type: Input }],\n        maxWidth: [{ type: Input }],\n        checkboxable: [{ type: Input }],\n        headerCheckboxable: [{ type: Input }],\n        headerClass: [{ type: Input }],\n        cellClass: [{ type: Input }],\n        isTreeColumn: [{ type: Input }],\n        treeLevelIndent: [{ type: Input }],\n        summaryFunc: [{ type: Input }],\n        summaryTemplate: [{ type: Input }],\n        _cellTemplateInput: [{ type: Input, args: ['cellTemplate',] }],\n        _cellTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellDirective, { read: TemplateRef, static: true },] }],\n        _headerTemplateInput: [{ type: Input, args: ['headerTemplate',] }],\n        _headerTemplateQuery: [{ type: ContentChild, args: [DataTableColumnHeaderDirective, { read: TemplateRef, static: true },] }],\n        _treeToggleTemplateInput: [{ type: Input, args: ['treeToggleTemplate',] }],\n        _treeToggleTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellTreeToggle, { read: TemplateRef, static: true },] }]\n    };\nDataTableColumnDirective.ɵfac = function DataTableColumnDirective_Factory(t) { return new (t || DataTableColumnDirective)(ɵngcc0.ɵɵdirectiveInject(ColumnChangesService)); };\nDataTableColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableColumnDirective, selectors: [[\"ngx-datatable-column\"]], contentQueries: function DataTableColumnDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnCellDirective, true, TemplateRef);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnHeaderDirective, true, TemplateRef);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, DataTableColumnCellTreeToggle, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._cellTemplateQuery = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerTemplateQuery = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._treeToggleTemplateQuery = _t.first);\n    } }, inputs: { name: \"name\", prop: \"prop\", frozenLeft: \"frozenLeft\", frozenRight: \"frozenRight\", flexGrow: \"flexGrow\", resizeable: \"resizeable\", comparator: \"comparator\", pipe: \"pipe\", sortable: \"sortable\", draggable: \"draggable\", canAutoResize: \"canAutoResize\", minWidth: \"minWidth\", width: \"width\", maxWidth: \"maxWidth\", checkboxable: \"checkboxable\", headerCheckboxable: \"headerCheckboxable\", headerClass: \"headerClass\", cellClass: \"cellClass\", isTreeColumn: \"isTreeColumn\", treeLevelIndent: \"treeLevelIndent\", summaryFunc: \"summaryFunc\", summaryTemplate: \"summaryTemplate\", _cellTemplateInput: [\"cellTemplate\", \"_cellTemplateInput\"], _headerTemplateInput: [\"headerTemplate\", \"_headerTemplateInput\"], _treeToggleTemplateInput: [\"treeToggleTemplate\", \"_treeToggleTemplateInput\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableColumnDirective, [{\n        type: Directive,\n        args: [{ selector: 'ngx-datatable-column' }]\n    }], function () { return [{ type: ColumnChangesService }]; }, { name: [{\n            type: Input\n        }], prop: [{\n            type: Input\n        }], frozenLeft: [{\n            type: Input\n        }], frozenRight: [{\n            type: Input\n        }], flexGrow: [{\n            type: Input\n        }], resizeable: [{\n            type: Input\n        }], comparator: [{\n            type: Input\n        }], pipe: [{\n            type: Input\n        }], sortable: [{\n            type: Input\n        }], draggable: [{\n            type: Input\n        }], canAutoResize: [{\n            type: Input\n        }], minWidth: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }], checkboxable: [{\n            type: Input\n        }], headerCheckboxable: [{\n            type: Input\n        }], headerClass: [{\n            type: Input\n        }], cellClass: [{\n            type: Input\n        }], isTreeColumn: [{\n            type: Input\n        }], treeLevelIndent: [{\n            type: Input\n        }], summaryFunc: [{\n            type: Input\n        }], summaryTemplate: [{\n            type: Input\n        }], _cellTemplateInput: [{\n            type: Input,\n            args: ['cellTemplate']\n        }], _cellTemplateQuery: [{\n            type: ContentChild,\n            args: [DataTableColumnCellDirective, { read: TemplateRef, static: true }]\n        }], _headerTemplateInput: [{\n            type: Input,\n            args: ['headerTemplate']\n        }], _headerTemplateQuery: [{\n            type: ContentChild,\n            args: [DataTableColumnHeaderDirective, { read: TemplateRef, static: true }]\n        }], _treeToggleTemplateInput: [{\n            type: Input,\n            args: ['treeToggleTemplate']\n        }], _treeToggleTemplateQuery: [{\n            type: ContentChild,\n            args: [DataTableColumnCellTreeToggle, { read: TemplateRef, static: true }]\n        }] }); })();\n    return DataTableColumnDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableColumnDirective.prototype.name;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.prop;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenLeft;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenRight;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.flexGrow;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.resizeable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.comparator;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.pipe;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.sortable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.draggable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.canAutoResize;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.minWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.width;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.maxWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.checkboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerCheckboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.cellClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.isTreeColumn;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.treeLevelIndent;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryFunc;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryTemplate;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateQuery;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.isFirstChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.columnChangesService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableRowDetailTemplateDirective = /** @class */ (function () {\n    function DatatableRowDetailTemplateDirective(template) {\n        this.template = template;\n    }\n    /** @nocollapse */\n    DatatableRowDetailTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\nDatatableRowDetailTemplateDirective.ɵfac = function DatatableRowDetailTemplateDirective_Factory(t) { return new (t || DatatableRowDetailTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nDatatableRowDetailTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatatableRowDetailTemplateDirective, selectors: [[\"\", \"ngx-datatable-row-detail-template\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableRowDetailTemplateDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngx-datatable-row-detail-template]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return DatatableRowDetailTemplateDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DatatableRowDetailTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableRowDetailDirective = /** @class */ (function () {\n    function DatatableRowDetailDirective() {\n        /**\n         * The detail row height is required especially\n         * when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Row detail row visbility was toggled.\n         */\n        this.toggle = new EventEmitter();\n    }\n    Object.defineProperty(DatatableRowDetailDirective.prototype, \"template\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._templateInput || this._templateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggle the expansion of the row\n     */\n    /**\n     * Toggle the expansion of the row\n     * @param {?} row\n     * @return {?}\n     */\n    DatatableRowDetailDirective.prototype.toggleExpandRow = /**\n     * Toggle the expansion of the row\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        this.toggle.emit({\n            type: 'row',\n            value: row\n        });\n    };\n    /**\n     * API method to expand all the rows.\n     */\n    /**\n     * API method to expand all the rows.\n     * @return {?}\n     */\n    DatatableRowDetailDirective.prototype.expandAllRows = /**\n     * API method to expand all the rows.\n     * @return {?}\n     */\n    function () {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    };\n    /**\n     * API method to collapse all the rows.\n     */\n    /**\n     * API method to collapse all the rows.\n     * @return {?}\n     */\n    DatatableRowDetailDirective.prototype.collapseAllRows = /**\n     * API method to collapse all the rows.\n     * @return {?}\n     */\n    function () {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    };\n    DatatableRowDetailDirective.propDecorators = {\n        rowHeight: [{ type: Input }],\n        _templateInput: [{ type: Input, args: ['template',] }],\n        _templateQuery: [{ type: ContentChild, args: [DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true },] }],\n        toggle: [{ type: Output }]\n    };\nDatatableRowDetailDirective.ɵfac = function DatatableRowDetailDirective_Factory(t) { return new (t || DatatableRowDetailDirective)(); };\nDatatableRowDetailDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatatableRowDetailDirective, selectors: [[\"ngx-datatable-row-detail\"]], contentQueries: function DatatableRowDetailDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, DatatableRowDetailTemplateDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    } }, inputs: { rowHeight: \"rowHeight\", _templateInput: [\"template\", \"_templateInput\"] }, outputs: { toggle: \"toggle\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableRowDetailDirective, [{\n        type: Directive,\n        args: [{ selector: 'ngx-datatable-row-detail' }]\n    }], function () { return []; }, { rowHeight: [{\n            type: Input\n        }], toggle: [{\n            type: Output\n        }], _templateInput: [{\n            type: Input,\n            args: ['template']\n        }], _templateQuery: [{\n            type: ContentChild,\n            args: [DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true }]\n        }] }); })();\n    return DatatableRowDetailDirective;\n}());\nif (false) {\n    /**\n     * The detail row height is required especially\n     * when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateQuery;\n    /**\n     * Row detail row visbility was toggled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableFooterDirective = /** @class */ (function () {\n    function DatatableFooterDirective() {\n    }\n    Object.defineProperty(DatatableFooterDirective.prototype, \"template\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._templateInput || this._templateQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DatatableFooterDirective.propDecorators = {\n        footerHeight: [{ type: Input }],\n        totalMessage: [{ type: Input }],\n        selectedMessage: [{ type: Input }],\n        pagerLeftArrowIcon: [{ type: Input }],\n        pagerRightArrowIcon: [{ type: Input }],\n        pagerPreviousIcon: [{ type: Input }],\n        pagerNextIcon: [{ type: Input }],\n        _templateInput: [{ type: Input, args: ['template',] }],\n        _templateQuery: [{ type: ContentChild, args: [DataTableFooterTemplateDirective, { read: TemplateRef, static: false },] }]\n    };\nDatatableFooterDirective.ɵfac = function DatatableFooterDirective_Factory(t) { return new (t || DatatableFooterDirective)(); };\nDatatableFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatatableFooterDirective, selectors: [[\"ngx-datatable-footer\"]], contentQueries: function DatatableFooterDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DataTableFooterTemplateDirective, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateQuery = _t.first);\n    } }, inputs: { footerHeight: \"footerHeight\", totalMessage: \"totalMessage\", selectedMessage: \"selectedMessage\", pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\", _templateInput: [\"template\", \"_templateInput\"] } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableFooterDirective, [{\n        type: Directive,\n        args: [{ selector: 'ngx-datatable-footer' }]\n    }], function () { return []; }, { footerHeight: [{\n            type: Input\n        }], totalMessage: [{\n            type: Input\n        }], selectedMessage: [{\n            type: Input\n        }], pagerLeftArrowIcon: [{\n            type: Input\n        }], pagerRightArrowIcon: [{\n            type: Input\n        }], pagerPreviousIcon: [{\n            type: Input\n        }], pagerNextIcon: [{\n            type: Input\n        }], _templateInput: [{\n            type: Input,\n            args: ['template']\n        }], _templateQuery: [{\n            type: ContentChild,\n            args: [DataTableFooterTemplateDirective, { read: TemplateRef, static: false }]\n        }] }); })();\n    return DatatableFooterDirective;\n}());\nif (false) {\n    /** @type {?} */\n    DatatableFooterDirective.prototype.footerHeight;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.totalMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.selectedMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerNextIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateQuery;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the columns by pin.\n * @param {?} cols\n * @return {?}\n */\nfunction columnsByPin(cols) {\n    var e_1, _a;\n    /** @type {?} */\n    var ret = {\n        left: [],\n        center: [],\n        right: []\n    };\n    if (cols) {\n        try {\n            for (var cols_1 = __values(cols), cols_1_1 = cols_1.next(); !cols_1_1.done; cols_1_1 = cols_1.next()) {\n                var col = cols_1_1.value;\n                if (col.frozenLeft) {\n                    ret.left.push(col);\n                }\n                else if (col.frozenRight) {\n                    ret.right.push(col);\n                }\n                else {\n                    ret.center.push(col);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (cols_1_1 && !cols_1_1.done && (_a = cols_1.return)) _a.call(cols_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n * @param {?} groups\n * @param {?} all\n * @return {?}\n */\nfunction columnGroupWidths(groups, all) {\n    return {\n        left: columnTotalWidth(groups.left),\n        center: columnTotalWidth(groups.center),\n        right: columnTotalWidth(groups.right),\n        total: Math.floor(columnTotalWidth(all))\n    };\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnTotalWidth(columns, prop) {\n    var e_2, _a;\n    /** @type {?} */\n    var totalWidth = 0;\n    if (columns) {\n        try {\n            for (var columns_1 = __values(columns), columns_1_1 = columns_1.next(); !columns_1_1.done; columns_1_1 = columns_1.next()) {\n                var c = columns_1_1.value;\n                /** @type {?} */\n                var has = prop && c[prop];\n                /** @type {?} */\n                var width = has ? c[prop] : c.width;\n                totalWidth = totalWidth + parseFloat(width);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (columns_1_1 && !columns_1_1.done && (_a = columns_1.return)) _a.call(columns_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnsTotalWidth(columns, prop) {\n    var e_3, _a;\n    /** @type {?} */\n    var totalWidth = 0;\n    try {\n        for (var columns_2 = __values(columns), columns_2_1 = columns_2.next(); !columns_2_1.done; columns_2_1 = columns_2.next()) {\n            var column = columns_2_1.value;\n            /** @type {?} */\n            var has = prop && column[prop];\n            totalWidth = totalWidth + (has ? column[prop] : column.width);\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (columns_2_1 && !columns_2_1.done && (_a = columns_2.return)) _a.call(columns_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return totalWidth;\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction columnsByPinArr(val) {\n    /** @type {?} */\n    var colsByPinArr = [];\n    /** @type {?} */\n    var colsByPin = columnsByPin(val);\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n    return colsByPinArr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nvar  /**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nRowHeightCache = /** @class */ (function () {\n    function RowHeightCache() {\n        /**\n         * Tree Array stores the cumulative information of the row heights to perform efficient\n         * range queries and updates.  Currently the tree is initialized to the base row\n         * height instead of the detail row height.\n         */\n        this.treeArray = [];\n    }\n    /**\n     * Clear the Tree array.\n     */\n    /**\n     * Clear the Tree array.\n     * @return {?}\n     */\n    RowHeightCache.prototype.clearCache = /**\n     * Clear the Tree array.\n     * @return {?}\n     */\n    function () {\n        this.treeArray = [];\n    };\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param rows The array of rows which contain the expanded status.\n     * @param rowHeight The row height.\n     * @param detailRowHeight The detail row height.\n     */\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param {?} details\n     * @return {?}\n     */\n    RowHeightCache.prototype.initCache = /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param {?} details\n     * @return {?}\n     */\n    function (details) {\n        var rows = details.rows, rowHeight = details.rowHeight, detailRowHeight = details.detailRowHeight, externalVirtual = details.externalVirtual, rowCount = details.rowCount, rowIndexes = details.rowIndexes, rowExpansions = details.rowExpansions;\n        /** @type {?} */\n        var isFn = typeof rowHeight === 'function';\n        /** @type {?} */\n        var isDetailFn = typeof detailRowHeight === 'function';\n        if (!isFn && isNaN(rowHeight)) {\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'rowHeight' is a\\n        valid number or function value: (\" + rowHeight + \") when 'scrollbarV' is enabled.\");\n        }\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n        if (!isDetailFn && isNaN(detailRowHeight)) {\n            throw new Error(\"Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\\n        valid number or function value: (\" + detailRowHeight + \") when 'scrollbarV' is enabled.\");\n        }\n        /** @type {?} */\n        var n = externalVirtual ? rowCount : rows.length;\n        this.treeArray = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            this.treeArray[i] = 0;\n        }\n        for (var i = 0; i < n; ++i) {\n            /** @type {?} */\n            var row = rows[i];\n            /** @type {?} */\n            var currentRowHeight = rowHeight;\n            if (isFn) {\n                currentRowHeight = rowHeight(row);\n            }\n            // Add the detail row height to the already expanded rows.\n            // This is useful for the table that goes through a filter or sort.\n            /** @type {?} */\n            var expanded = rowExpansions.get(row);\n            if (row && expanded === 1) {\n                if (isDetailFn) {\n                    /** @type {?} */\n                    var index = rowIndexes.get(row);\n                    currentRowHeight += detailRowHeight(row, index);\n                }\n                else {\n                    currentRowHeight += detailRowHeight;\n                }\n            }\n            this.update(i, currentRowHeight);\n        }\n    };\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     */\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     * @param {?} scrollY\n     * @return {?}\n     */\n    RowHeightCache.prototype.getRowIndex = /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     * @param {?} scrollY\n     * @return {?}\n     */\n    function (scrollY) {\n        if (scrollY === 0)\n            return 0;\n        return this.calcRowIndex(scrollY);\n    };\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     */\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     * @param {?} atRowIndex\n     * @param {?} byRowHeight\n     * @return {?}\n     */\n    RowHeightCache.prototype.update = /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     * @param {?} atRowIndex\n     * @param {?} byRowHeight\n     * @return {?}\n     */\n    function (atRowIndex, byRowHeight) {\n        if (!this.treeArray.length) {\n            throw new Error(\"Update at index \" + atRowIndex + \" with value \" + byRowHeight + \" failed:\\n        Row Height cache not initialized.\");\n        }\n        /** @type {?} */\n        var n = this.treeArray.length;\n        atRowIndex |= 0;\n        while (atRowIndex < n) {\n            this.treeArray[atRowIndex] += byRowHeight;\n            atRowIndex |= atRowIndex + 1;\n        }\n    };\n    /**\n     * Range Sum query from 1 to the rowIndex\n     */\n    /**\n     * Range Sum query from 1 to the rowIndex\n     * @param {?} atIndex\n     * @return {?}\n     */\n    RowHeightCache.prototype.query = /**\n     * Range Sum query from 1 to the rowIndex\n     * @param {?} atIndex\n     * @return {?}\n     */\n    function (atIndex) {\n        if (!this.treeArray.length) {\n            throw new Error(\"query at index \" + atIndex + \" failed: Fenwick tree array not initialized.\");\n        }\n        /** @type {?} */\n        var sum = 0;\n        atIndex |= 0;\n        while (atIndex >= 0) {\n            sum += this.treeArray[atIndex];\n            atIndex = (atIndex & (atIndex + 1)) - 1;\n        }\n        return sum;\n    };\n    /**\n     * Find the total height between 2 row indexes\n     */\n    /**\n     * Find the total height between 2 row indexes\n     * @param {?} atIndexA\n     * @param {?} atIndexB\n     * @return {?}\n     */\n    RowHeightCache.prototype.queryBetween = /**\n     * Find the total height between 2 row indexes\n     * @param {?} atIndexA\n     * @param {?} atIndexB\n     * @return {?}\n     */\n    function (atIndexA, atIndexB) {\n        return this.query(atIndexB) - this.query(atIndexA - 1);\n    };\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     */\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     * @private\n     * @param {?} sum\n     * @return {?}\n     */\n    RowHeightCache.prototype.calcRowIndex = /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     * @private\n     * @param {?} sum\n     * @return {?}\n     */\n    function (sum) {\n        if (!this.treeArray.length)\n            return 0;\n        /** @type {?} */\n        var pos = -1;\n        /** @type {?} */\n        var dataLength = this.treeArray.length;\n        // Get the highest bit for the block size.\n        /** @type {?} */\n        var highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n        for (var blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n            /** @type {?} */\n            var nextPos = pos + blockSize;\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n                sum -= this.treeArray[nextPos];\n                pos = nextPos;\n            }\n        }\n        return pos + 1;\n    };\n    return RowHeightCache;\n}());\nif (false) {\n    /**\n     * Tree Array stores the cumulative information of the row heights to perform efficient\n     * range queries and updates.  Currently the tree is initialized to the base row\n     * height instead of the detail row height.\n     * @type {?}\n     * @private\n     */\n    RowHeightCache.prototype.treeArray;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar cache = {};\n/** @type {?} */\nvar testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nvar ɵ0 = /**\n * @return {?}\n */\nfunction () {\n    /** @type {?} */\n    var styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n    /** @type {?} */\n    var match = typeof styles !== 'undefined'\n        ? Array.prototype.slice\n            .call(styles)\n            .join('')\n            .match(/-(moz|webkit|ms)-/)\n        : null;\n    /** @type {?} */\n    var pre = match !== null ? match[1] : undefined;\n    // tslint:disable-next-line: tsr-detect-non-literal-regexp\n    /** @type {?} */\n    var dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n    return dom\n        ? {\n            dom: dom,\n            lowercase: pre,\n            css: \"-\" + pre + \"-\",\n            js: pre[0].toUpperCase() + pre.substr(1)\n        }\n        : undefined;\n};\n/** @type {?} */\nvar prefix = ((ɵ0))();\n/**\n * @param {?} property\n * @return {?}\n */\nfunction getVendorPrefixedName(property) {\n    /** @type {?} */\n    var name = camelCase(property);\n    if (!cache[name]) {\n        if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n            cache[name] = prefix.css + property;\n        }\n        else if (testStyle[property] !== undefined) {\n            cache[name] = property;\n        }\n    }\n    return cache[name];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// browser detection and prefixing tools\n/** @type {?} */\nvar transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nvar backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\n/** @type {?} */\nvar hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nvar hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\n/** @type {?} */\nvar ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\n/** @type {?} */\nvar isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n/**\n * @param {?} styles\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction translateXY(styles, x, y) {\n    if (typeof transform !== 'undefined' && hasCSSTransforms) {\n        if (!isSafari && hasCSS3DTransforms) {\n            styles[transform] = \"translate3d(\" + x + \"px, \" + y + \"px, 0)\";\n            styles[backfaceVisibility] = 'hidden';\n        }\n        else {\n            styles[camelCase(transform)] = \"translate(\" + x + \"px, \" + y + \"px)\";\n        }\n    }\n    else {\n        styles.top = y + \"px\";\n        styles.left = x + \"px\";\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableBodyComponent = /** @class */ (function () {\n    /**\n     * Creates an instance of DataTableBodyComponent.\n     */\n    function DataTableBodyComponent(cd) {\n        var _this = this;\n        this.cd = cd;\n        this.selected = [];\n        this.scroll = new EventEmitter();\n        this.page = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n        this.detailToggle = new EventEmitter();\n        this.rowContextmenu = new EventEmitter(false);\n        this.treeAction = new EventEmitter();\n        this.rowHeightsCache = new RowHeightCache();\n        this.temp = [];\n        this.offsetY = 0;\n        this.indexes = {};\n        this.rowIndexes = new Map();\n        this.rowExpansions = new Map();\n        /**\n         * Get the height of the detail row.\n         */\n        this.getDetailRowHeight = (/**\n         * @param {?=} row\n         * @param {?=} index\n         * @return {?}\n         */\n        function (row, index) {\n            if (!_this.rowDetail) {\n                return 0;\n            }\n            /** @type {?} */\n            var rowHeight = _this.rowDetail.rowHeight;\n            return typeof rowHeight === 'function' ? rowHeight(row, index) : ((/** @type {?} */ (rowHeight)));\n        });\n        // declare fn here so we can get access to the `this` property\n        this.rowTrackingFn = (/**\n         * @param {?} index\n         * @param {?} row\n         * @return {?}\n         */\n        function (index, row) {\n            /** @type {?} */\n            var idx = _this.getRowIndex(row);\n            if (_this.trackByProp) {\n                return row[_this.trackByProp];\n            }\n            else {\n                return idx;\n            }\n        });\n    }\n    Object.defineProperty(DataTableBodyComponent.prototype, \"pageSize\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._pageSize;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._pageSize = val;\n            this.recalcLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"rows\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._rows;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rows = val;\n            this.rowExpansions.clear();\n            this.recalcLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"columns\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._columns;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._columns = val;\n            /** @type {?} */\n            var colsByPin = columnsByPin(val);\n            this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"offset\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._offset;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._offset = val;\n            this.recalcLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"rowCount\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._rowCount;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rowCount = val;\n            this.recalcLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"bodyWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this.scrollbarH) {\n                return this.innerWidth + 'px';\n            }\n            else {\n                return '100%';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"bodyHeight\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._bodyHeight;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (this.scrollbarV) {\n                this._bodyHeight = val + 'px';\n            }\n            else {\n                this._bodyHeight = 'auto';\n            }\n            this.recalcLayout();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"selectEnabled\", {\n        /**\n         * Returns if selection is enabled.\n         */\n        get: /**\n         * Returns if selection is enabled.\n         * @return {?}\n         */\n        function () {\n            return !!this.selectionType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyComponent.prototype, \"scrollHeight\", {\n        /**\n         * Property that would calculate the height of scroll bar\n         * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n         * calculate scroll height automatically (as height will be undefined).\n         */\n        get: /**\n         * Property that would calculate the height of scroll bar\n         * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n         * calculate scroll height automatically (as height will be undefined).\n         * @return {?}\n         */\n        function () {\n            if (this.scrollbarV && this.virtualization && this.rowCount) {\n                return this.rowHeightsCache.query(this.rowCount - 1);\n            }\n            // avoid TS7030: Not all code paths return a value.\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called after the constructor, initializing input properties\n     */\n    /**\n     * Called after the constructor, initializing input properties\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.ngOnInit = /**\n     * Called after the constructor, initializing input properties\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.rowDetail) {\n            this.listener = this.rowDetail.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var type = _a.type, value = _a.value;\n                if (type === 'row') {\n                    _this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    _this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                _this.updateIndexes();\n                _this.updateRows();\n                _this.cd.markForCheck();\n            }));\n        }\n        if (this.groupHeader) {\n            this.listener = this.groupHeader.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            function (_a) {\n                var type = _a.type, value = _a.value;\n                if (type === 'group') {\n                    _this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    _this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                _this.updateIndexes();\n                _this.updateRows();\n                _this.cd.markForCheck();\n            }));\n        }\n    };\n    /**\n     * Called once, before the instance is destroyed.\n     */\n    /**\n     * Called once, before the instance is destroyed.\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.ngOnDestroy = /**\n     * Called once, before the instance is destroyed.\n     * @return {?}\n     */\n    function () {\n        if (this.rowDetail || this.groupHeader) {\n            this.listener.unsubscribe();\n        }\n    };\n    /**\n     * Updates the Y offset given a new offset.\n     */\n    /**\n     * Updates the Y offset given a new offset.\n     * @param {?=} offset\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.updateOffsetY = /**\n     * Updates the Y offset given a new offset.\n     * @param {?=} offset\n     * @return {?}\n     */\n    function (offset) {\n        // scroller is missing on empty table\n        if (!this.scroller) {\n            return;\n        }\n        if (this.scrollbarV && this.virtualization && offset) {\n            // First get the row Index that we need to move to.\n            /** @type {?} */\n            var rowIndex = this.pageSize * offset;\n            offset = this.rowHeightsCache.query(rowIndex - 1);\n        }\n        else if (this.scrollbarV && !this.virtualization) {\n            offset = 0;\n        }\n        this.scroller.setOffset(offset || 0);\n    };\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     */\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.onBodyScroll = /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var scrollYPos = event.scrollYPos;\n        /** @type {?} */\n        var scrollXPos = event.scrollXPos;\n        // if scroll change, trigger update\n        // this is mainly used for header cell positions\n        if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n            this.scroll.emit({\n                offsetY: scrollYPos,\n                offsetX: scrollXPos\n            });\n        }\n        this.offsetY = scrollYPos;\n        this.offsetX = scrollXPos;\n        this.updateIndexes();\n        this.updatePage(event.direction);\n        this.updateRows();\n    };\n    /**\n     * Updates the page given a direction.\n     */\n    /**\n     * Updates the page given a direction.\n     * @param {?} direction\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.updatePage = /**\n     * Updates the page given a direction.\n     * @param {?} direction\n     * @return {?}\n     */\n    function (direction) {\n        /** @type {?} */\n        var offset = this.indexes.first / this.pageSize;\n        if (direction === 'up') {\n            offset = Math.ceil(offset);\n        }\n        else if (direction === 'down') {\n            offset = Math.floor(offset);\n        }\n        if (direction !== undefined && !isNaN(offset)) {\n            this.page.emit({ offset: offset });\n        }\n    };\n    /**\n     * Updates the rows in the view port\n     */\n    /**\n     * Updates the rows in the view port\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.updateRows = /**\n     * Updates the rows in the view port\n     * @return {?}\n     */\n    function () {\n        var _a = this.indexes, first = _a.first, last = _a.last;\n        /** @type {?} */\n        var rowIndex = first;\n        /** @type {?} */\n        var idx = 0;\n        /** @type {?} */\n        var temp = [];\n        this.rowIndexes.clear();\n        // if grouprowsby has been specified treat row paging\n        // parameters as group paging parameters ie if limit 10 has been\n        // specified treat it as 10 groups rather than 10 rows\n        if (this.groupedRows) {\n            /** @type {?} */\n            var maxRowsPerGroup = 3;\n            // if there is only one group set the maximum number of\n            // rows per group the same as the total number of rows\n            if (this.groupedRows.length === 1) {\n                maxRowsPerGroup = this.groupedRows[0].value.length;\n            }\n            while (rowIndex < last && rowIndex < this.groupedRows.length) {\n                // Add the groups into this page\n                /** @type {?} */\n                var group = this.groupedRows[rowIndex];\n                temp[idx] = group;\n                idx++;\n                // Group index in this context\n                rowIndex++;\n            }\n        }\n        else {\n            while (rowIndex < last && rowIndex < this.rowCount) {\n                /** @type {?} */\n                var row = this.rows[rowIndex];\n                if (row) {\n                    this.rowIndexes.set(row, rowIndex);\n                    temp[idx] = row;\n                }\n                idx++;\n                rowIndex++;\n            }\n        }\n        this.temp = temp;\n    };\n    /**\n     * Get the row height\n     */\n    /**\n     * Get the row height\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getRowHeight = /**\n     * Get the row height\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        // if its a function return it\n        if (typeof this.rowHeight === 'function') {\n            return this.rowHeight(row);\n        }\n        return (/** @type {?} */ (this.rowHeight));\n    };\n    /**\n     * @param group the group with all rows\n     */\n    /**\n     * @param {?} group the group with all rows\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getGroupHeight = /**\n     * @param {?} group the group with all rows\n     * @return {?}\n     */\n    function (group) {\n        /** @type {?} */\n        var rowHeight = 0;\n        if (group.value) {\n            for (var index = 0; index < group.value.length; index++) {\n                rowHeight += this.getRowAndDetailHeight(group.value[index]);\n            }\n        }\n        return rowHeight;\n    };\n    /**\n     * Calculate row height based on the expanded state of the row.\n     */\n    /**\n     * Calculate row height based on the expanded state of the row.\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getRowAndDetailHeight = /**\n     * Calculate row height based on the expanded state of the row.\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        /** @type {?} */\n        var rowHeight = this.getRowHeight(row);\n        /** @type {?} */\n        var expanded = this.rowExpansions.get(row);\n        // Adding detail row height if its expanded.\n        if (expanded === 1) {\n            rowHeight += this.getDetailRowHeight(row);\n        }\n        return rowHeight;\n    };\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * @param rows the row that needs to be placed in the 2D space.\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @param {?} rows the row that needs to be placed in the 2D space.\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    DataTableBodyComponent.prototype.getRowsStyles = /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @param {?} rows the row that needs to be placed in the 2D space.\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    function (rows) {\n        /** @type {?} */\n        var styles = {};\n        // only add styles for the group if there is a group\n        if (this.groupedRows) {\n            styles.width = this.columnGroupWidths.total;\n        }\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            var idx = 0;\n            if (this.groupedRows) {\n                // Get the latest row rowindex in a group\n                /** @type {?} */\n                var row = rows[rows.length - 1];\n                idx = row ? this.getRowIndex(row) : 0;\n            }\n            else {\n                idx = this.getRowIndex(rows);\n            }\n            // const pos = idx * rowHeight;\n            // The position of this row would be the sum of all row heights\n            // until the previous row position.\n            /** @type {?} */\n            var pos = this.rowHeightsCache.query(idx - 1);\n            translateXY(styles, 0, pos);\n        }\n        return styles;\n    };\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * @returns the CSS3 style to be applied\n     *\n     * @memberOf DataTableBodyComponent\n     */\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    DataTableBodyComponent.prototype.getBottomSummaryRowStyles = /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    function () {\n        if (!this.scrollbarV || !this.rows || !this.rows.length) {\n            return null;\n        }\n        /** @type {?} */\n        var styles = { position: 'absolute' };\n        /** @type {?} */\n        var pos = this.rowHeightsCache.query(this.rows.length - 1);\n        translateXY(styles, 0, pos);\n        return styles;\n    };\n    /**\n     * Hides the loading indicator\n     */\n    /**\n     * Hides the loading indicator\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.hideIndicator = /**\n     * Hides the loading indicator\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () { return (_this.loadingIndicator = false); }), 500);\n    };\n    /**\n     * Updates the index of the rows in the viewport\n     */\n    /**\n     * Updates the index of the rows in the viewport\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.updateIndexes = /**\n     * Updates the index of the rows in the viewport\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var first = 0;\n        /** @type {?} */\n        var last = 0;\n        if (this.scrollbarV) {\n            if (this.virtualization) {\n                // Calculation of the first and last indexes will be based on where the\n                // scrollY position would be at.  The last index would be the one\n                // that shows up inside the view port the last.\n                /** @type {?} */\n                var height = parseInt(this.bodyHeight, 0);\n                first = this.rowHeightsCache.getRowIndex(this.offsetY);\n                last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n            }\n            else {\n                // If virtual rows are not needed\n                // We render all in one go\n                first = 0;\n                last = this.rowCount;\n            }\n        }\n        else {\n            // The server is handling paging and will pass an array that begins with the\n            // element at a specified offset.  first should always be 0 with external paging.\n            if (!this.externalPaging) {\n                first = Math.max(this.offset * this.pageSize, 0);\n            }\n            last = Math.min(first + this.pageSize, this.rowCount);\n        }\n        this.indexes = { first: first, last: last };\n    };\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     */\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.refreshRowHeightCache = /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     * @return {?}\n     */\n    function () {\n        if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n            return;\n        }\n        // clear the previous row height cache if already present.\n        // this is useful during sorts, filters where the state of the\n        // rows array is changed.\n        this.rowHeightsCache.clearCache();\n        // Initialize the tree only if there are rows inside the tree.\n        if (this.rows && this.rows.length) {\n            this.rowHeightsCache.initCache({\n                rows: this.rows,\n                rowHeight: this.rowHeight,\n                detailRowHeight: this.getDetailRowHeight,\n                externalVirtual: this.scrollbarV && this.externalPaging,\n                rowCount: this.rowCount,\n                rowIndexes: this.rowIndexes,\n                rowExpansions: this.rowExpansions\n            });\n        }\n    };\n    /**\n     * Gets the index for the view port\n     */\n    /**\n     * Gets the index for the view port\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getAdjustedViewPortIndex = /**\n     * Gets the index for the view port\n     * @return {?}\n     */\n    function () {\n        // Capture the row index of the first row that is visible on the viewport.\n        // If the scroll bar is just below the row which is highlighted then make that as the\n        // first index.\n        /** @type {?} */\n        var viewPortFirstRowIndex = this.indexes.first;\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            var offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n            return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n        }\n        return viewPortFirstRowIndex;\n    };\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     */\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.toggleRowExpansion = /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        /** @type {?} */\n        var expanded = this.rowExpansions.get(row);\n        // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            var detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n            // const idx = this.rowIndexes.get(row) || 0;\n            /** @type {?} */\n            var idx = this.getRowIndex(row);\n            this.rowHeightsCache.update(idx, detailRowHeight);\n        }\n        // Update the toggled row and update thive nevere heights in the cache.\n        expanded = expanded ^= 1;\n        this.rowExpansions.set(row, expanded);\n        this.detailToggle.emit({\n            rows: [row],\n            currentIndex: viewPortFirstRowIndex\n        });\n    };\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     */\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     * @param {?} expanded\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.toggleAllRows = /**\n     * Expand/Collapse all the rows no matter what their state is.\n     * @param {?} expanded\n     * @return {?}\n     */\n    function (expanded) {\n        var e_1, _a;\n        // clear prev expansions\n        this.rowExpansions.clear();\n        /** @type {?} */\n        var rowExpanded = expanded ? 1 : 0;\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        var viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        try {\n            for (var _b = __values(this.rows), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var row = _c.value;\n                this.rowExpansions.set(row, rowExpanded);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.scrollbarV) {\n            // Refresh the full row heights cache since every row was affected.\n            this.recalcLayout();\n        }\n        // Emit all rows that have been expanded.\n        this.detailToggle.emit({\n            rows: this.rows,\n            currentIndex: viewPortFirstRowIndex\n        });\n    };\n    /**\n     * Recalculates the table\n     */\n    /**\n     * Recalculates the table\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.recalcLayout = /**\n     * Recalculates the table\n     * @return {?}\n     */\n    function () {\n        this.refreshRowHeightCache();\n        this.updateIndexes();\n        this.updateRows();\n    };\n    /**\n     * Tracks the column\n     */\n    /**\n     * Tracks the column\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.columnTrackingFn = /**\n     * Tracks the column\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    function (index, column) {\n        return column.$$id;\n    };\n    /**\n     * Gets the row pinning group styles\n     */\n    /**\n     * Gets the row pinning group styles\n     * @param {?} group\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.stylesByGroup = /**\n     * Gets the row pinning group styles\n     * @param {?} group\n     * @return {?}\n     */\n    function (group) {\n        /** @type {?} */\n        var widths = this.columnGroupWidths;\n        /** @type {?} */\n        var offsetX = this.offsetX;\n        /** @type {?} */\n        var styles = {\n            width: widths[group] + \"px\"\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            var bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            var totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            var offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            var offset = offsetDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    };\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     */\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getRowExpanded = /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        var e_2, _a;\n        if (this.rowExpansions.size === 0 && this.groupExpansionDefault) {\n            try {\n                for (var _b = __values(this.groupedRows), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var group = _c.value;\n                    this.rowExpansions.set(group, 1);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        /** @type {?} */\n        var expanded = this.rowExpansions.get(row);\n        return expanded === 1;\n    };\n    /**\n     * Gets the row index given a row\n     */\n    /**\n     * Gets the row index given a row\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.getRowIndex = /**\n     * Gets the row index given a row\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        return this.rowIndexes.get(row) || 0;\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyComponent.prototype.onTreeAction = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        this.treeAction.emit({ row: row });\n    };\n    /** @nocollapse */\n    DataTableBodyComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    DataTableBodyComponent.propDecorators = {\n        scrollbarV: [{ type: Input }],\n        scrollbarH: [{ type: Input }],\n        loadingIndicator: [{ type: Input }],\n        externalPaging: [{ type: Input }],\n        rowHeight: [{ type: Input }],\n        offsetX: [{ type: Input }],\n        emptyMessage: [{ type: Input }],\n        selectionType: [{ type: Input }],\n        selected: [{ type: Input }],\n        rowIdentity: [{ type: Input }],\n        rowDetail: [{ type: Input }],\n        groupHeader: [{ type: Input }],\n        selectCheck: [{ type: Input }],\n        displayCheck: [{ type: Input }],\n        trackByProp: [{ type: Input }],\n        rowClass: [{ type: Input }],\n        groupedRows: [{ type: Input }],\n        groupExpansionDefault: [{ type: Input }],\n        innerWidth: [{ type: Input }],\n        groupRowsBy: [{ type: Input }],\n        virtualization: [{ type: Input }],\n        summaryRow: [{ type: Input }],\n        summaryPosition: [{ type: Input }],\n        summaryHeight: [{ type: Input }],\n        pageSize: [{ type: Input }],\n        rows: [{ type: Input }],\n        columns: [{ type: Input }],\n        offset: [{ type: Input }],\n        rowCount: [{ type: Input }],\n        bodyWidth: [{ type: HostBinding, args: ['style.width',] }],\n        bodyHeight: [{ type: Input }, { type: HostBinding, args: ['style.height',] }],\n        scroll: [{ type: Output }],\n        page: [{ type: Output }],\n        activate: [{ type: Output }],\n        select: [{ type: Output }],\n        detailToggle: [{ type: Output }],\n        rowContextmenu: [{ type: Output }],\n        treeAction: [{ type: Output }],\n        scroller: [{ type: ViewChild, args: [ScrollerComponent, { static: false },] }]\n    };\nDataTableBodyComponent.ɵfac = function DataTableBodyComponent_Factory(t) { return new (t || DataTableBodyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDataTableBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableBodyComponent, selectors: [[\"datatable-body\"]], viewQuery: function DataTableBodyComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(ScrollerComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    } }, hostAttrs: [1, \"datatable-body\"], hostVars: 4, hostBindings: function DataTableBodyComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.bodyWidth)(\"height\", ctx.bodyHeight);\n    } }, inputs: { selected: \"selected\", pageSize: \"pageSize\", rows: \"rows\", columns: \"columns\", offset: \"offset\", rowCount: \"rowCount\", bodyHeight: \"bodyHeight\", offsetX: \"offsetX\", scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", loadingIndicator: \"loadingIndicator\", externalPaging: \"externalPaging\", rowHeight: \"rowHeight\", emptyMessage: \"emptyMessage\", selectionType: \"selectionType\", rowIdentity: \"rowIdentity\", rowDetail: \"rowDetail\", groupHeader: \"groupHeader\", selectCheck: \"selectCheck\", displayCheck: \"displayCheck\", trackByProp: \"trackByProp\", rowClass: \"rowClass\", groupedRows: \"groupedRows\", groupExpansionDefault: \"groupExpansionDefault\", innerWidth: \"innerWidth\", groupRowsBy: \"groupRowsBy\", virtualization: \"virtualization\", summaryRow: \"summaryRow\", summaryPosition: \"summaryPosition\", summaryHeight: \"summaryHeight\" }, outputs: { scroll: \"scroll\", page: \"page\", activate: \"activate\", select: \"select\", detailToggle: \"detailToggle\", rowContextmenu: \"rowContextmenu\", treeAction: \"treeAction\" }, decls: 5, vars: 9, consts: [[3, \"selected\", \"rows\", \"selectCheck\", \"selectEnabled\", \"selectionType\", \"rowIdentity\", \"select\", \"activate\"], [\"selector\", \"\"], [4, \"ngIf\"], [3, \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\", \"scroll\", 4, \"ngIf\"], [\"class\", \"empty-row\", 3, \"innerHTML\", 4, \"ngIf\"], [3, \"scrollbarV\", \"scrollbarH\", \"scrollHeight\", \"scrollWidth\", \"scroll\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\", \"rowContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\", 4, \"ngIf\"], [3, \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [3, \"groupedRows\", \"innerWidth\", \"ngStyle\", \"rowDetail\", \"groupHeader\", \"offsetX\", \"detailRowHeight\", \"row\", \"expanded\", \"rowIndex\", \"rowContextmenu\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\", \"treeAction\", \"activate\", 4, \"ngIf\", \"ngIfElse\"], [\"groupedRowsTemplate\", \"\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", \"expanded\", \"rowClass\", \"displayCheck\", \"treeStatus\", \"treeAction\", \"activate\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\", \"activate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"tabindex\", \"-1\", 3, \"isSelected\", \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"group\", \"rowIndex\", \"expanded\", \"rowClass\", \"activate\"], [3, \"ngStyle\", \"rowHeight\", \"offsetX\", \"innerWidth\", \"rows\", \"columns\"], [1, \"empty-row\", 3, \"innerHTML\"]], template: function DataTableBodyComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"datatable-selection\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"select\", function DataTableBodyComponent_Template_datatable_selection_select_0_listener($event) { return ctx.select.emit($event); })(\"activate\", function DataTableBodyComponent_Template_datatable_selection_activate_0_listener($event) { return ctx.activate.emit($event); });\n        ɵngcc0.ɵɵtemplate(2, DataTableBodyComponent_datatable_progress_2_Template, 1, 0, \"datatable-progress\", 2);\n        ɵngcc0.ɵɵtemplate(3, DataTableBodyComponent_datatable_scroller_3_Template, 4, 8, \"datatable-scroller\", 3);\n        ɵngcc0.ɵɵtemplate(4, DataTableBodyComponent_div_4_Template, 1, 1, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selected\", ctx.selected)(\"rows\", ctx.rows)(\"selectCheck\", ctx.selectCheck)(\"selectEnabled\", ctx.selectEnabled)(\"selectionType\", ctx.selectionType)(\"rowIdentity\", ctx.rowIdentity);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loadingIndicator);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.rows == null ? null : ctx.rows.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.rows == null ? null : ctx.rows.length) && !ctx.loadingIndicator);\n    } }, directives: function () { return [DataTableSelectionComponent, ɵngcc1.NgIf, ProgressBarComponent, ScrollerComponent, ɵngcc1.NgForOf, DataTableSummaryRowComponent, DataTableRowWrapperComponent, ɵngcc1.NgStyle, DataTableBodyRowComponent]; }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableBodyComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-body',\n                template: \"\\n    <datatable-selection\\n      #selector\\n      [selected]=\\\"selected\\\"\\n      [rows]=\\\"rows\\\"\\n      [selectCheck]=\\\"selectCheck\\\"\\n      [selectEnabled]=\\\"selectEnabled\\\"\\n      [selectionType]=\\\"selectionType\\\"\\n      [rowIdentity]=\\\"rowIdentity\\\"\\n      (select)=\\\"select.emit($event)\\\"\\n      (activate)=\\\"activate.emit($event)\\\"\\n    >\\n      <datatable-progress *ngIf=\\\"loadingIndicator\\\"> </datatable-progress>\\n      <datatable-scroller\\n        *ngIf=\\\"rows?.length\\\"\\n        [scrollbarV]=\\\"scrollbarV\\\"\\n        [scrollbarH]=\\\"scrollbarH\\\"\\n        [scrollHeight]=\\\"scrollHeight\\\"\\n        [scrollWidth]=\\\"columnGroupWidths?.total\\\"\\n        (scroll)=\\\"onBodyScroll($event)\\\"\\n      >\\n        <datatable-summary-row\\n          *ngIf=\\\"summaryRow && summaryPosition === 'top'\\\"\\n          [rowHeight]=\\\"summaryHeight\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [rows]=\\\"rows\\\"\\n          [columns]=\\\"columns\\\"\\n        >\\n        </datatable-summary-row>\\n        <datatable-row-wrapper\\n          [groupedRows]=\\\"groupedRows\\\"\\n          *ngFor=\\\"let group of temp; let i = index; trackBy: rowTrackingFn\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [ngStyle]=\\\"getRowsStyles(group)\\\"\\n          [rowDetail]=\\\"rowDetail\\\"\\n          [groupHeader]=\\\"groupHeader\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [detailRowHeight]=\\\"getDetailRowHeight(group[i], i)\\\"\\n          [row]=\\\"group\\\"\\n          [expanded]=\\\"getRowExpanded(group)\\\"\\n          [rowIndex]=\\\"getRowIndex(group[i])\\\"\\n          (rowContextmenu)=\\\"rowContextmenu.emit($event)\\\"\\n        >\\n          <datatable-body-row\\n            *ngIf=\\\"!groupedRows; else groupedRowsTemplate\\\"\\n            tabindex=\\\"-1\\\"\\n            [isSelected]=\\\"selector.getRowSelected(group)\\\"\\n            [innerWidth]=\\\"innerWidth\\\"\\n            [offsetX]=\\\"offsetX\\\"\\n            [columns]=\\\"columns\\\"\\n            [rowHeight]=\\\"getRowHeight(group)\\\"\\n            [row]=\\\"group\\\"\\n            [rowIndex]=\\\"getRowIndex(group)\\\"\\n            [expanded]=\\\"getRowExpanded(group)\\\"\\n            [rowClass]=\\\"rowClass\\\"\\n            [displayCheck]=\\\"displayCheck\\\"\\n            [treeStatus]=\\\"group.treeStatus\\\"\\n            (treeAction)=\\\"onTreeAction(group)\\\"\\n            (activate)=\\\"selector.onActivate($event, indexes.first + i)\\\"\\n          >\\n          </datatable-body-row>\\n          <ng-template #groupedRowsTemplate>\\n            <datatable-body-row\\n              *ngFor=\\\"let row of group.value; let i = index; trackBy: rowTrackingFn\\\"\\n              tabindex=\\\"-1\\\"\\n              [isSelected]=\\\"selector.getRowSelected(row)\\\"\\n              [innerWidth]=\\\"innerWidth\\\"\\n              [offsetX]=\\\"offsetX\\\"\\n              [columns]=\\\"columns\\\"\\n              [rowHeight]=\\\"getRowHeight(row)\\\"\\n              [row]=\\\"row\\\"\\n              [group]=\\\"group.value\\\"\\n              [rowIndex]=\\\"getRowIndex(row)\\\"\\n              [expanded]=\\\"getRowExpanded(row)\\\"\\n              [rowClass]=\\\"rowClass\\\"\\n              (activate)=\\\"selector.onActivate($event, i)\\\"\\n            >\\n            </datatable-body-row>\\n          </ng-template>\\n        </datatable-row-wrapper>\\n        <datatable-summary-row\\n          *ngIf=\\\"summaryRow && summaryPosition === 'bottom'\\\"\\n          [ngStyle]=\\\"getBottomSummaryRowStyles()\\\"\\n          [rowHeight]=\\\"summaryHeight\\\"\\n          [offsetX]=\\\"offsetX\\\"\\n          [innerWidth]=\\\"innerWidth\\\"\\n          [rows]=\\\"rows\\\"\\n          [columns]=\\\"columns\\\"\\n        >\\n        </datatable-summary-row>\\n      </datatable-scroller>\\n      <div class=\\\"empty-row\\\" *ngIf=\\\"!rows?.length && !loadingIndicator\\\" [innerHTML]=\\\"emptyMessage\\\"></div>\\n    </datatable-selection>\\n  \",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    class: 'datatable-body'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { selected: [{\n            type: Input\n        }], scroll: [{\n            type: Output\n        }], page: [{\n            type: Output\n        }], activate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], detailToggle: [{\n            type: Output\n        }], rowContextmenu: [{\n            type: Output\n        }], treeAction: [{\n            type: Output\n        }], pageSize: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], columns: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], rowCount: [{\n            type: Input\n        }], bodyWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], bodyHeight: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['style.height']\n        }], offsetX: [{\n            type: Input\n        }], scrollbarV: [{\n            type: Input\n        }], scrollbarH: [{\n            type: Input\n        }], loadingIndicator: [{\n            type: Input\n        }], externalPaging: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], emptyMessage: [{\n            type: Input\n        }], selectionType: [{\n            type: Input\n        }], rowIdentity: [{\n            type: Input\n        }], rowDetail: [{\n            type: Input\n        }], groupHeader: [{\n            type: Input\n        }], selectCheck: [{\n            type: Input\n        }], displayCheck: [{\n            type: Input\n        }], trackByProp: [{\n            type: Input\n        }], rowClass: [{\n            type: Input\n        }], groupedRows: [{\n            type: Input\n        }], groupExpansionDefault: [{\n            type: Input\n        }], innerWidth: [{\n            type: Input\n        }], groupRowsBy: [{\n            type: Input\n        }], virtualization: [{\n            type: Input\n        }], summaryRow: [{\n            type: Input\n        }], summaryPosition: [{\n            type: Input\n        }], summaryHeight: [{\n            type: Input\n        }], scroller: [{\n            type: ViewChild,\n            args: [ScrollerComponent, { static: false }]\n        }] }); })();\n    return DataTableBodyComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarV;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.loadingIndicator;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.externalPaging;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.emptyMessage;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selected;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.trackByProp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupExpansionDefault;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupRowsBy;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.virtualization;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryRow;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryPosition;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroll;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.page;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.select;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.detailToggle;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroller;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeightsCache;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.temp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetY;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.indexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidthsWithoutGroup;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowTrackingFn;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.listener;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIndexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowExpansions;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._bodyHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rowCount;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._offset;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._pageSize;\n    /**\n     * Get the height of the detail row.\n     * @type {?}\n     */\n    DataTableBodyComponent.prototype.getDetailRowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableHeaderComponent = /** @class */ (function () {\n    function DataTableHeaderComponent(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.reorder = new EventEmitter();\n        this.resize = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this._columnGroupWidths = {\n            total: 100\n        };\n        this._styleByGroup = {\n            left: {},\n            center: {},\n            right: {}\n        };\n    }\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"innerWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._innerWidth;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var _this = this;\n            this._innerWidth = val;\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                if (_this._columns) {\n                    /** @type {?} */\n                    var colByPin = columnsByPin(_this._columns);\n                    _this._columnGroupWidths = columnGroupWidths(colByPin, _this._columns);\n                    _this.setStylesByGroup();\n                }\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerHeight\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._headerHeight;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (val !== 'auto') {\n                this._headerHeight = val + \"px\";\n            }\n            else {\n                this._headerHeight = val;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"columns\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._columns;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var _this = this;\n            this._columns = val;\n            /** @type {?} */\n            var colsByPin = columnsByPin(val);\n            this._columnsByPin = columnsByPinArr(val);\n            setTimeout((/**\n             * @return {?}\n             */\n            function () {\n                _this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n                _this.setStylesByGroup();\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"offsetX\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._offsetX;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._offsetX = val;\n            this.setStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onLongPressStart = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var event = _a.event, model = _a.model;\n        model.dragging = true;\n        this.dragEventTarget = event;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onLongPressEnd = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var event = _a.event, model = _a.model;\n        this.dragEventTarget = event;\n        // delay resetting so sort can be\n        // prevented if we were dragging\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            // datatable component creates copies from columns on reorder\n            // set dragging to false on new objects\n            /** @type {?} */\n            var column = _this._columns.find((/**\n             * @param {?} c\n             * @return {?}\n             */\n            function (c) { return c.$$id === model.$$id; }));\n            if (column) {\n                column.dragging = false;\n            }\n        }), 5);\n    };\n    Object.defineProperty(DataTableHeaderComponent.prototype, \"headerWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this.scrollbarH) {\n                return this.innerWidth + 'px';\n            }\n            return '100%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.trackByGroups = /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    function (index, colGroup) {\n        return colGroup.type;\n    };\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.columnTrackingFn = /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    function (index, column) {\n        return column.$$id;\n    };\n    /**\n     * @param {?} width\n     * @param {?} column\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onColumnResized = /**\n     * @param {?} width\n     * @param {?} column\n     * @return {?}\n     */\n    function (width, column) {\n        if (width <= column.minWidth) {\n            width = column.minWidth;\n        }\n        else if (width >= column.maxWidth) {\n            width = column.maxWidth;\n        }\n        this.resize.emit({\n            column: column,\n            prevValue: column.width,\n            newValue: width\n        });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onColumnReordered = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var prevIndex = _a.prevIndex, newIndex = _a.newIndex, model = _a.model;\n        /** @type {?} */\n        var column = this.getColumn(newIndex);\n        column.isTarget = false;\n        column.targetMarkerContext = undefined;\n        this.reorder.emit({\n            column: model,\n            prevValue: prevIndex,\n            newValue: newIndex\n        });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onTargetChanged = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var prevIndex = _a.prevIndex, newIndex = _a.newIndex, initialIndex = _a.initialIndex;\n        if (prevIndex || prevIndex === 0) {\n            /** @type {?} */\n            var oldColumn = this.getColumn(prevIndex);\n            oldColumn.isTarget = false;\n            oldColumn.targetMarkerContext = undefined;\n        }\n        if (newIndex || newIndex === 0) {\n            /** @type {?} */\n            var newColumn = this.getColumn(newIndex);\n            newColumn.isTarget = true;\n            if (initialIndex !== newIndex) {\n                newColumn.targetMarkerContext = {\n                    class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n                };\n            }\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.getColumn = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var leftColumnCount = this._columnsByPin[0].columns.length;\n        if (index < leftColumnCount) {\n            return this._columnsByPin[0].columns[index];\n        }\n        /** @type {?} */\n        var centerColumnCount = this._columnsByPin[1].columns.length;\n        if (index < leftColumnCount + centerColumnCount) {\n            return this._columnsByPin[1].columns[index - leftColumnCount];\n        }\n        return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.onSort = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var column = _a.column, prevValue = _a.prevValue, newValue = _a.newValue;\n        // if we are dragging don't sort!\n        if (column.dragging) {\n            return;\n        }\n        /** @type {?} */\n        var sorts = this.calcNewSorts(column, prevValue, newValue);\n        this.sort.emit({\n            sorts: sorts,\n            column: column,\n            prevValue: prevValue,\n            newValue: newValue\n        });\n    };\n    /**\n     * @param {?} column\n     * @param {?} prevValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.calcNewSorts = /**\n     * @param {?} column\n     * @param {?} prevValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (column, prevValue, newValue) {\n        /** @type {?} */\n        var idx = 0;\n        if (!this.sorts) {\n            this.sorts = [];\n        }\n        /** @type {?} */\n        var sorts = this.sorts.map((/**\n         * @param {?} s\n         * @param {?} i\n         * @return {?}\n         */\n        function (s, i) {\n            s = __assign({}, s);\n            if (s.prop === column.prop) {\n                idx = i;\n            }\n            return s;\n        }));\n        if (newValue === undefined) {\n            sorts.splice(idx, 1);\n        }\n        else if (prevValue) {\n            sorts[idx].dir = newValue;\n        }\n        else {\n            if (this.sortType === SortType.single) {\n                sorts.splice(0, this.sorts.length);\n            }\n            sorts.push({ dir: newValue, prop: column.prop });\n        }\n        return sorts;\n    };\n    /**\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.setStylesByGroup = /**\n     * @return {?}\n     */\n    function () {\n        this._styleByGroup.left = this.calcStylesByGroup('left');\n        this._styleByGroup.center = this.calcStylesByGroup('center');\n        this._styleByGroup.right = this.calcStylesByGroup('right');\n        this.cd.detectChanges();\n    };\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    DataTableHeaderComponent.prototype.calcStylesByGroup = /**\n     * @param {?} group\n     * @return {?}\n     */\n    function (group) {\n        /** @type {?} */\n        var widths = this._columnGroupWidths;\n        /** @type {?} */\n        var offsetX = this.offsetX;\n        /** @type {?} */\n        var styles = {\n            width: widths[group] + \"px\"\n        };\n        if (group === 'center') {\n            translateXY(styles, offsetX * -1, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            var totalDiff = widths.total - this.innerWidth;\n            /** @type {?} */\n            var offset = totalDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    };\n    /** @nocollapse */\n    DataTableHeaderComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    DataTableHeaderComponent.propDecorators = {\n        sortAscendingIcon: [{ type: Input }],\n        sortDescendingIcon: [{ type: Input }],\n        scrollbarH: [{ type: Input }],\n        dealsWithGroup: [{ type: Input }],\n        targetMarkerTemplate: [{ type: Input }],\n        innerWidth: [{ type: Input }],\n        sorts: [{ type: Input }],\n        sortType: [{ type: Input }],\n        allRowsSelected: [{ type: Input }],\n        selectionType: [{ type: Input }],\n        reorderable: [{ type: Input }],\n        headerHeight: [{ type: HostBinding, args: ['style.height',] }, { type: Input }],\n        columns: [{ type: Input }],\n        offsetX: [{ type: Input }],\n        sort: [{ type: Output }],\n        reorder: [{ type: Output }],\n        resize: [{ type: Output }],\n        select: [{ type: Output }],\n        columnContextmenu: [{ type: Output }],\n        headerWidth: [{ type: HostBinding, args: ['style.width',] }]\n    };\nDataTableHeaderComponent.ɵfac = function DataTableHeaderComponent_Factory(t) { return new (t || DataTableHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDataTableHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableHeaderComponent, selectors: [[\"datatable-header\"]], hostAttrs: [1, \"datatable-header\"], hostVars: 4, hostBindings: function DataTableHeaderComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.headerHeight)(\"width\", ctx.headerWidth);\n    } }, inputs: { innerWidth: \"innerWidth\", headerHeight: \"headerHeight\", columns: \"columns\", offsetX: \"offsetX\", sorts: \"sorts\", sortAscendingIcon: \"sortAscendingIcon\", sortDescendingIcon: \"sortDescendingIcon\", scrollbarH: \"scrollbarH\", dealsWithGroup: \"dealsWithGroup\", targetMarkerTemplate: \"targetMarkerTemplate\", sortType: \"sortType\", allRowsSelected: \"allRowsSelected\", selectionType: \"selectionType\", reorderable: \"reorderable\" }, outputs: { sort: \"sort\", reorder: \"reorder\", resize: \"resize\", select: \"select\", columnContextmenu: \"columnContextmenu\" }, decls: 2, vars: 4, consts: [[\"orderable\", \"\", 1, \"datatable-header-inner\", 3, \"reorder\", \"targetChanged\"], [3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"allRowsSelected\", \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"resizeable\", \"\", \"long-press\", \"\", \"draggable\", \"\", 3, \"resizeEnabled\", \"pressModel\", \"pressEnabled\", \"dragX\", \"dragY\", \"dragModel\", \"dragEventTarget\", \"headerHeight\", \"isTarget\", \"targetMarkerTemplate\", \"targetMarkerContext\", \"column\", \"sortType\", \"sorts\", \"selectionType\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"allRowsSelected\", \"resize\", \"longPressStart\", \"longPressEnd\", \"sort\", \"select\", \"columnContextmenu\"]], template: function DataTableHeaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"reorder\", function DataTableHeaderComponent_Template_div_reorder_0_listener($event) { return ctx.onColumnReordered($event); })(\"targetChanged\", function DataTableHeaderComponent_Template_div_targetChanged_0_listener($event) { return ctx.onTargetChanged($event); });\n        ɵngcc0.ɵɵtemplate(1, DataTableHeaderComponent_div_1_Template, 2, 5, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._columnGroupWidths.total, \"px\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    } }, directives: function () { return [OrderableDirective, ɵngcc1.NgForOf, ɵngcc1.NgStyle, DataTableHeaderCellComponent, ResizeableDirective, LongPressDirective, DraggableDirective]; }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableHeaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-header',\n                template: \"\\n    <div\\n      orderable\\n      (reorder)=\\\"onColumnReordered($event)\\\"\\n      (targetChanged)=\\\"onTargetChanged($event)\\\"\\n      [style.width.px]=\\\"_columnGroupWidths.total\\\"\\n      class=\\\"datatable-header-inner\\\"\\n    >\\n      <div\\n        *ngFor=\\\"let colGroup of _columnsByPin; trackBy: trackByGroups\\\"\\n        [class]=\\\"'datatable-row-' + colGroup.type\\\"\\n        [ngStyle]=\\\"_styleByGroup[colGroup.type]\\\"\\n      >\\n        <datatable-header-cell\\n          *ngFor=\\\"let column of colGroup.columns; trackBy: columnTrackingFn\\\"\\n          resizeable\\n          [resizeEnabled]=\\\"column.resizeable\\\"\\n          (resize)=\\\"onColumnResized($event, column)\\\"\\n          long-press\\n          [pressModel]=\\\"column\\\"\\n          [pressEnabled]=\\\"reorderable && column.draggable\\\"\\n          (longPressStart)=\\\"onLongPressStart($event)\\\"\\n          (longPressEnd)=\\\"onLongPressEnd($event)\\\"\\n          draggable\\n          [dragX]=\\\"reorderable && column.draggable && column.dragging\\\"\\n          [dragY]=\\\"false\\\"\\n          [dragModel]=\\\"column\\\"\\n          [dragEventTarget]=\\\"dragEventTarget\\\"\\n          [headerHeight]=\\\"headerHeight\\\"\\n          [isTarget]=\\\"column.isTarget\\\"\\n          [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n          [targetMarkerContext]=\\\"column.targetMarkerContext\\\"\\n          [column]=\\\"column\\\"\\n          [sortType]=\\\"sortType\\\"\\n          [sorts]=\\\"sorts\\\"\\n          [selectionType]=\\\"selectionType\\\"\\n          [sortAscendingIcon]=\\\"sortAscendingIcon\\\"\\n          [sortDescendingIcon]=\\\"sortDescendingIcon\\\"\\n          [allRowsSelected]=\\\"allRowsSelected\\\"\\n          (sort)=\\\"onSort($event)\\\"\\n          (select)=\\\"select.emit($event)\\\"\\n          (columnContextmenu)=\\\"columnContextmenu.emit($event)\\\"\\n        >\\n        </datatable-header-cell>\\n      </div>\\n    </div>\\n  \",\n                host: {\n                    class: 'datatable-header'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { sort: [{\n            type: Output\n        }], reorder: [{\n            type: Output\n        }], resize: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], columnContextmenu: [{\n            type: Output\n        }], innerWidth: [{\n            type: Input\n        }], headerHeight: [{\n            type: HostBinding,\n            args: ['style.height']\n        }, {\n            type: Input\n        }], columns: [{\n            type: Input\n        }], offsetX: [{\n            type: Input\n        }], headerWidth: [{\n            type: HostBinding,\n            args: ['style.width']\n        }], sorts: [{\n            type: Input\n        }], sortAscendingIcon: [{\n            type: Input\n        }], sortDescendingIcon: [{\n            type: Input\n        }], scrollbarH: [{\n            type: Input\n        }], dealsWithGroup: [{\n            type: Input\n        }], targetMarkerTemplate: [{\n            type: Input\n        }], sortType: [{\n            type: Input\n        }], allRowsSelected: [{\n            type: Input\n        }], selectionType: [{\n            type: Input\n        }], reorderable: [{\n            type: Input\n        }] }); })();\n    return DataTableHeaderComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dealsWithGroup;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sorts;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorderable;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dragEventTarget;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorder;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.resize;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columns;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._headerHeight;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._styleByGroup;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throttle a function\n * @param {?} func\n * @param {?} wait\n * @param {?=} options\n * @return {?}\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    /** @type {?} */\n    var context;\n    /** @type {?} */\n    var args;\n    /** @type {?} */\n    var result;\n    /** @type {?} */\n    var timeout = null;\n    /** @type {?} */\n    var previous = 0;\n    /**\n     * @return {?}\n     */\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return (/**\n     * @this {?}\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        /** @type {?} */\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    });\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n * @param {?} duration\n * @param {?=} options\n * @return {?}\n */\nfunction throttleable(duration, options) {\n    return (/**\n     * @param {?} target\n     * @param {?} key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: (/**\n             * @return {?}\n             */\n            function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            })\n        };\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Calculates the Total Flex Grow\n * @param {?} columns\n * @return {?}\n */\nfunction getTotalFlexGrow(columns) {\n    var e_1, _a;\n    /** @type {?} */\n    var totalFlexGrow = 0;\n    try {\n        for (var columns_1 = __values(columns), columns_1_1 = columns_1.next(); !columns_1_1.done; columns_1_1 = columns_1.next()) {\n            var c = columns_1_1.value;\n            totalFlexGrow += c.flexGrow || 0;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (columns_1_1 && !columns_1_1.done && (_a = columns_1.return)) _a.call(columns_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @return {?}\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n    /** @type {?} */\n    var columnsWidth = columnsTotalWidth(allColumns);\n    /** @type {?} */\n    var totalFlexGrow = getTotalFlexGrow(allColumns);\n    /** @type {?} */\n    var colsByGroup = columnsByPin(allColumns);\n    if (columnsWidth !== expectedWidth) {\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n    }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {?} colsByGroup\n * @param {?} maxWidth\n * @param {?} totalFlexGrow\n * @return {?}\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n    var e_2, _a, e_3, _b;\n    // calculate total width and flexgrow points for coulumns that can be resized\n    for (var attr in colsByGroup) {\n        try {\n            for (var _c = (e_2 = void 0, __values(colsByGroup[attr])), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var column = _d.value;\n                if (!column.canAutoResize) {\n                    maxWidth -= column.width;\n                    totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n                }\n                else {\n                    column.width = 0;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    /** @type {?} */\n    var hasMinWidth = {};\n    /** @type {?} */\n    var remainingWidth = maxWidth;\n    // resize columns until no width is left to be distributed\n    do {\n        /** @type {?} */\n        var widthPerFlexPoint = remainingWidth / totalFlexGrow;\n        remainingWidth = 0;\n        for (var attr in colsByGroup) {\n            try {\n                for (var _e = (e_3 = void 0, __values(colsByGroup[attr])), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var column = _f.value;\n                    // if the column can be resize and it hasn't reached its minimum width yet\n                    if (column.canAutoResize && !hasMinWidth[column.prop]) {\n                        /** @type {?} */\n                        var newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n                        if (column.minWidth !== undefined && newWidth < column.minWidth) {\n                            remainingWidth += newWidth - column.minWidth;\n                            column.width = column.minWidth;\n                            hasMinWidth[column.prop] = true;\n                        }\n                        else {\n                            column.width = newWidth;\n                        }\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n    } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @param {?} startIdx\n * @param {?} allowBleed\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth) {\n    var e_4, _a, e_5, _b;\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\n    /** @type {?} */\n    var columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter((/**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return c.canAutoResize !== false;\n    }));\n    try {\n        for (var columnsToResize_1 = __values(columnsToResize), columnsToResize_1_1 = columnsToResize_1.next(); !columnsToResize_1_1.done; columnsToResize_1_1 = columnsToResize_1.next()) {\n            var column = columnsToResize_1_1.value;\n            if (!column.$$oldWidth) {\n                column.$$oldWidth = column.width;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (columnsToResize_1_1 && !columnsToResize_1_1.done && (_a = columnsToResize_1.return)) _a.call(columnsToResize_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    /** @type {?} */\n    var additionWidthPerColumn = 0;\n    /** @type {?} */\n    var exceedsWindow = false;\n    /** @type {?} */\n    var contentWidth = getContentWidth(allColumns, defaultColWidth);\n    /** @type {?} */\n    var remainingWidth = expectedWidth - contentWidth;\n    /** @type {?} */\n    var columnsProcessed = [];\n    /** @type {?} */\n    var remainingWidthLimit = 1;\n    // This loop takes care of the\n    do {\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\n        exceedsWindow = contentWidth >= expectedWidth;\n        try {\n            for (var columnsToResize_2 = (e_5 = void 0, __values(columnsToResize)), columnsToResize_2_1 = columnsToResize_2.next(); !columnsToResize_2_1.done; columnsToResize_2_1 = columnsToResize_2.next()) {\n                var column = columnsToResize_2_1.value;\n                if (exceedsWindow && allowBleed) {\n                    column.width = column.$$oldWidth || column.width || defaultColWidth;\n                }\n                else {\n                    /** @type {?} */\n                    var newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n                    if (column.minWidth && newSize < column.minWidth) {\n                        column.width = column.minWidth;\n                        columnsProcessed.push(column);\n                    }\n                    else if (column.maxWidth && newSize > column.maxWidth) {\n                        column.width = column.maxWidth;\n                        columnsProcessed.push(column);\n                    }\n                    else {\n                        column.width = newSize;\n                    }\n                }\n                column.width = Math.max(0, column.width);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (columnsToResize_2_1 && !columnsToResize_2_1.done && (_b = columnsToResize_2.return)) _b.call(columnsToResize_2);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        contentWidth = getContentWidth(allColumns);\n        remainingWidth = expectedWidth - contentWidth;\n        removeProcessedColumns(columnsToResize, columnsProcessed);\n    } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n * @param {?} columnsToResize\n * @param {?} columnsProcessed\n * @return {?}\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n    var e_6, _a;\n    try {\n        for (var columnsProcessed_1 = __values(columnsProcessed), columnsProcessed_1_1 = columnsProcessed_1.next(); !columnsProcessed_1_1.done; columnsProcessed_1_1 = columnsProcessed_1.next()) {\n            var column = columnsProcessed_1_1.value;\n            /** @type {?} */\n            var index = columnsToResize.indexOf(column);\n            columnsToResize.splice(index, 1);\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (columnsProcessed_1_1 && !columnsProcessed_1_1.done && (_a = columnsProcessed_1.return)) _a.call(columnsProcessed_1);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n}\n/**\n * Gets the width of the columns\n * @param {?} allColumns\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction getContentWidth(allColumns, defaultColWidth) {\n    var e_7, _a;\n    if (defaultColWidth === void 0) { defaultColWidth = 300; }\n    /** @type {?} */\n    var contentWidth = 0;\n    try {\n        for (var allColumns_1 = __values(allColumns), allColumns_1_1 = allColumns_1.next(); !allColumns_1_1.done; allColumns_1_1 = allColumns_1.next()) {\n            var column = allColumns_1_1.value;\n            contentWidth += column.width || defaultColWidth;\n        }\n    }\n    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n    finally {\n        try {\n            if (allColumns_1_1 && !allColumns_1_1.done && (_a = allColumns_1.return)) _a.call(allColumns_1);\n        }\n        finally { if (e_7) throw e_7.error; }\n    }\n    return contentWidth;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar SortDirection = {\n    asc: 'asc',\n    desc: 'desc',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the next sort direction\n * @param {?} sortType\n * @param {?} current\n * @return {?}\n */\nfunction nextSortDir(sortType, current) {\n    if (sortType === SortType.single) {\n        if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else {\n            return SortDirection.asc;\n        }\n    }\n    else {\n        if (!current) {\n            return SortDirection.asc;\n        }\n        else if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else if (current === SortDirection.desc) {\n            return undefined;\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined')\n        a = 0;\n    if (b === null || typeof b === 'undefined')\n        b = 0;\n    if (a instanceof Date && b instanceof Date) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n    }\n    else if (isNaN(parseFloat(a)) || !isFinite(a) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n        // Convert to string in case of a=0 or b=0\n        a = String(a);\n        b = String(b);\n        // Isn't a number so lowercase the string to properly compare\n        if (a.toLowerCase() < b.toLowerCase())\n            return -1;\n        if (a.toLowerCase() > b.toLowerCase())\n            return 1;\n    }\n    else {\n        // Parse strings as numbers to compare properly\n        if (parseFloat(a) < parseFloat(b))\n            return -1;\n        if (parseFloat(a) > parseFloat(b))\n            return 1;\n    }\n    // equal each other\n    return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n * @param {?} rows\n * @param {?} columns\n * @param {?} dirs\n * @return {?}\n */\nfunction sortRows(rows, columns, dirs) {\n    if (!rows)\n        return [];\n    if (!dirs || !dirs.length || !columns)\n        return __spread(rows);\n    /**\n     * record the row ordering of results from prior sort operations (if applicable)\n     * this is necessary to guarantee stable sorting behavior\n     * @type {?}\n     */\n    var rowToIndexMap = new Map();\n    rows.forEach((/**\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    function (row, index) { return rowToIndexMap.set(row, index); }));\n    /** @type {?} */\n    var temp = __spread(rows);\n    /** @type {?} */\n    var cols = columns.reduce((/**\n     * @param {?} obj\n     * @param {?} col\n     * @return {?}\n     */\n    function (obj, col) {\n        if (col.comparator && typeof col.comparator === 'function') {\n            obj[col.prop] = col.comparator;\n        }\n        return obj;\n    }), {});\n    // cache valueGetter and compareFn so that they\n    // do not need to be looked-up in the sort function body\n    /** @type {?} */\n    var cachedDirs = dirs.map((/**\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        /** @type {?} */\n        var prop = dir.prop;\n        return {\n            prop: prop,\n            dir: dir.dir,\n            valueGetter: getterForProp(prop),\n            compareFn: cols[prop] || orderByComparator\n        };\n    }));\n    return temp.sort((/**\n     * @param {?} rowA\n     * @param {?} rowB\n     * @return {?}\n     */\n    function (rowA, rowB) {\n        var e_1, _a;\n        try {\n            for (var cachedDirs_1 = __values(cachedDirs), cachedDirs_1_1 = cachedDirs_1.next(); !cachedDirs_1_1.done; cachedDirs_1_1 = cachedDirs_1.next()) {\n                var cachedDir = cachedDirs_1_1.value;\n                // Get property and valuegetters for column to be sorted\n                var prop = cachedDir.prop, valueGetter = cachedDir.valueGetter;\n                // Get A and B cell values from rows based on properties of the columns\n                /** @type {?} */\n                var propA = valueGetter(rowA, prop);\n                /** @type {?} */\n                var propB = valueGetter(rowB, prop);\n                // Compare function gets five parameters:\n                // Two cell values to be compared as propA and propB\n                // Two rows corresponding to the cells as rowA and rowB\n                // Direction of the sort for this column as SortDirection\n                // Compare can be a standard JS comparison function (a,b) => -1|0|1\n                // as additional parameters are silently ignored. The whole row and sort\n                // direction enable more complex sort logic.\n                /** @type {?} */\n                var comparison = cachedDir.dir !== SortDirection.desc\n                    ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n                    : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n                // Don't return 0 yet in case of needing to sort by next property\n                if (comparison !== 0)\n                    return comparison;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (cachedDirs_1_1 && !cachedDirs_1_1.done && (_a = cachedDirs_1.return)) _a.call(cachedDirs_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB)))\n            return 0;\n        /**\n         * all else being equal, preserve original order of the rows (stable sort)\n         */\n        return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DatatableComponent = /** @class */ (function () {\n    function DatatableComponent(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n        this.scrollbarHelper = scrollbarHelper;\n        this.dimensionsHelper = dimensionsHelper;\n        this.cd = cd;\n        this.columnChangesService = columnChangesService;\n        this.configuration = configuration;\n        /**\n         * List of row objects that should be\n         * represented as selected in the grid.\n         * Default value: `[]`\n         */\n        this.selected = [];\n        /**\n         * Enable vertical scrollbars\n         */\n        this.scrollbarV = false;\n        /**\n         * Enable horz scrollbars\n         */\n        this.scrollbarH = false;\n        /**\n         * The row height; which is necessary\n         * to calculate the height for the lazy rendering.\n         */\n        this.rowHeight = 30;\n        /**\n         * Type of column width distribution formula.\n         * Example: flex, force, standard\n         */\n        this.columnMode = ColumnMode.standard;\n        /**\n         * The minimum header height in pixels.\n         * Pass a falsey for no header\n         */\n        this.headerHeight = 30;\n        /**\n         * The minimum footer height in pixels.\n         * Pass falsey for no footer\n         */\n        this.footerHeight = 0;\n        /**\n         * If the table should use external paging\n         * otherwise its assumed that all data is preloaded.\n         */\n        this.externalPaging = false;\n        /**\n         * If the table should use external sorting or\n         * the built-in basic sorting.\n         */\n        this.externalSorting = false;\n        /**\n         * Show the linear loading bar.\n         * Default value: `false`\n         */\n        this.loadingIndicator = false;\n        /**\n         * Enable/Disable ability to re-order columns\n         * by dragging them.\n         */\n        this.reorderable = true;\n        /**\n         * Swap columns on re-order columns or\n         * move them.\n         */\n        this.swapColumns = true;\n        /**\n         * The type of sorting\n         */\n        this.sortType = SortType.single;\n        /**\n         * Array of sorted columns by property and type.\n         * Default value: `[]`\n         */\n        this.sorts = [];\n        /**\n         * Css class overrides\n         */\n        this.cssClasses = {\n            sortAscending: 'datatable-icon-up',\n            sortDescending: 'datatable-icon-down',\n            pagerLeftArrow: 'datatable-icon-left',\n            pagerRightArrow: 'datatable-icon-right',\n            pagerPrevious: 'datatable-icon-prev',\n            pagerNext: 'datatable-icon-skip'\n        };\n        /**\n         * Message overrides for localization\n         *\n         * emptyMessage     [default] = 'No data to display'\n         * totalMessage     [default] = 'total'\n         * selectedMessage  [default] = 'selected'\n         */\n        this.messages = {\n            // Message to show when array is presented\n            // but contains no values\n            emptyMessage: 'No data to display',\n            // Footer total message\n            totalMessage: 'total',\n            // Footer selected message\n            selectedMessage: 'selected'\n        };\n        /**\n         * A boolean you can use to set the detault behaviour of rows and groups\n         * whether they will start expanded or not. If ommited the default is NOT expanded.\n         *\n         */\n        this.groupExpansionDefault = false;\n        /**\n         * Property to which you can use for determining select all\n         * rows on current page or not.\n         *\n         * \\@memberOf DatatableComponent\n         */\n        this.selectAllRowsOnPage = false;\n        /**\n         * A flag for row virtualization on / off\n         */\n        this.virtualization = true;\n        /**\n         * A flag for switching summary row on / off\n         */\n        this.summaryRow = false;\n        /**\n         * A height of summary row\n         */\n        this.summaryHeight = 30;\n        /**\n         * A property holds a summary row position: top/bottom\n         */\n        this.summaryPosition = 'top';\n        /**\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\n         */\n        this.scroll = new EventEmitter();\n        /**\n         * A cell or row was focused via keyboard or mouse click.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * A cell or row was selected.\n         */\n        this.select = new EventEmitter();\n        /**\n         * Column sort was invoked.\n         */\n        this.sort = new EventEmitter();\n        /**\n         * The table was paged either triggered by the pager or the body scroll.\n         */\n        this.page = new EventEmitter();\n        /**\n         * Columns were re-ordered.\n         */\n        this.reorder = new EventEmitter();\n        /**\n         * Column was resized.\n         */\n        this.resize = new EventEmitter();\n        /**\n         * The context menu was invoked on the table.\n         * type indicates whether the header or the body was clicked.\n         * content contains either the column or the row that was clicked.\n         */\n        this.tableContextmenu = new EventEmitter(false);\n        /**\n         * A row was expanded ot collapsed for tree\n         */\n        this.treeAction = new EventEmitter();\n        this.rowCount = 0;\n        this._offsetX = new BehaviorSubject(0);\n        this._count = 0;\n        this._offset = 0;\n        this._subscriptions = [];\n        /**\n         * This will be used when displaying or selecting rows.\n         * when tracking/comparing them, we'll use the value of this fn,\n         *\n         * (`fn(x) === fn(y)` instead of `x === y`)\n         */\n        this.rowIdentity = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) { return x; });\n        // get ref to elm for measuring\n        this.element = element.nativeElement;\n        this.rowDiffer = differs.find({}).create();\n        // apply global settings from Module.forRoot\n        if (this.configuration && this.configuration.messages) {\n            this.messages = __assign({}, this.configuration.messages);\n        }\n    }\n    Object.defineProperty(DatatableComponent.prototype, \"rows\", {\n        /**\n         * Gets the rows.\n         */\n        get: /**\n         * Gets the rows.\n         * @return {?}\n         */\n        function () {\n            return this._rows;\n        },\n        /**\n         * Rows that are displayed in the table.\n         */\n        set: /**\n         * Rows that are displayed in the table.\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rows = val;\n            if (val) {\n                this._internalRows = __spread(val);\n            }\n            // auto sort on new updates\n            if (!this.externalSorting) {\n                this.sortInternalRows();\n            }\n            // auto group by parent on new update\n            this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n            // recalculate sizes/etc\n            this.recalculate();\n            if (this._rows && this._groupRowsBy) {\n                // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n                this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n            }\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"groupRowsBy\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._groupRowsBy;\n        },\n        /**\n         * This attribute allows the user to set the name of the column to group the data with\n         */\n        set: /**\n         * This attribute allows the user to set the name of the column to group the data with\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (val) {\n                this._groupRowsBy = val;\n                if (this._rows && this._groupRowsBy) {\n                    // cretes a new array with the data grouped\n                    this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"columns\", {\n        /**\n         * Get the columns.\n         */\n        get: /**\n         * Get the columns.\n         * @return {?}\n         */\n        function () {\n            return this._columns;\n        },\n        /**\n         * Columns to be displayed.\n         */\n        set: /**\n         * Columns to be displayed.\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (val) {\n                this._internalColumns = __spread(val);\n                setColumnDefaults(this._internalColumns);\n                this.recalculateColumns();\n            }\n            this._columns = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"limit\", {\n        /**\n         * Gets the limit.\n         */\n        get: /**\n         * Gets the limit.\n         * @return {?}\n         */\n        function () {\n            return this._limit;\n        },\n        /**\n         * The page size to be shown.\n         * Default value: `undefined`\n         */\n        set: /**\n         * The page size to be shown.\n         * Default value: `undefined`\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._limit = val;\n            // recalculate sizes/etc\n            this.recalculate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"count\", {\n        /**\n         * Gets the count.\n         */\n        get: /**\n         * Gets the count.\n         * @return {?}\n         */\n        function () {\n            return this._count;\n        },\n        /**\n         * The total count of all rows.\n         * Default value: `0`\n         */\n        set: /**\n         * The total count of all rows.\n         * Default value: `0`\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._count = val;\n            // recalculate sizes/etc\n            this.recalculate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"offset\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n        },\n        /**\n         * The current offset ( page - 1 ) shown.\n         * Default value: `0`\n         */\n        set: /**\n         * The current offset ( page - 1 ) shown.\n         * Default value: `0`\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._offset = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedHeader\", {\n        /**\n         * CSS class applied if the header height if fixed height.\n         */\n        get: /**\n         * CSS class applied if the header height if fixed height.\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var headerHeight = this.headerHeight;\n            return typeof headerHeight === 'string' ? (/** @type {?} */ (headerHeight)) !== 'auto' : true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isFixedRow\", {\n        /**\n         * CSS class applied to the root element if\n         * the row heights are fixed heights.\n         */\n        get: /**\n         * CSS class applied to the root element if\n         * the row heights are fixed heights.\n         * @return {?}\n         */\n        function () {\n            return this.rowHeight !== 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isVertScroll\", {\n        /**\n         * CSS class applied to root element if\n         * vertical scrolling is enabled.\n         */\n        get: /**\n         * CSS class applied to root element if\n         * vertical scrolling is enabled.\n         * @return {?}\n         */\n        function () {\n            return this.scrollbarV;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isVirtualized\", {\n        /**\n         * CSS class applied to root element if\n         * virtualization is enabled.\n         */\n        get: /**\n         * CSS class applied to root element if\n         * virtualization is enabled.\n         * @return {?}\n         */\n        function () {\n            return this.virtualization;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isHorScroll\", {\n        /**\n         * CSS class applied to the root element\n         * if the horziontal scrolling is enabled.\n         */\n        get: /**\n         * CSS class applied to the root element\n         * if the horziontal scrolling is enabled.\n         * @return {?}\n         */\n        function () {\n            return this.scrollbarH;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isSelectable\", {\n        /**\n         * CSS class applied to root element is selectable.\n         */\n        get: /**\n         * CSS class applied to root element is selectable.\n         * @return {?}\n         */\n        function () {\n            return this.selectionType !== undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isCheckboxSelection\", {\n        /**\n         * CSS class applied to root is checkbox selection.\n         */\n        get: /**\n         * CSS class applied to root is checkbox selection.\n         * @return {?}\n         */\n        function () {\n            return this.selectionType === SelectionType.checkbox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isCellSelection\", {\n        /**\n         * CSS class applied to root if cell selection.\n         */\n        get: /**\n         * CSS class applied to root if cell selection.\n         * @return {?}\n         */\n        function () {\n            return this.selectionType === SelectionType.cell;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isSingleSelection\", {\n        /**\n         * CSS class applied to root if single select.\n         */\n        get: /**\n         * CSS class applied to root if single select.\n         * @return {?}\n         */\n        function () {\n            return this.selectionType === SelectionType.single;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isMultiSelection\", {\n        /**\n         * CSS class added to root element if mulit select\n         */\n        get: /**\n         * CSS class added to root element if mulit select\n         * @return {?}\n         */\n        function () {\n            return this.selectionType === SelectionType.multi;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"isMultiClickSelection\", {\n        /**\n         * CSS class added to root element if mulit click select\n         */\n        get: /**\n         * CSS class added to root element if mulit click select\n         * @return {?}\n         */\n        function () {\n            return this.selectionType === SelectionType.multiClick;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"columnTemplates\", {\n        /**\n         * Returns the column templates.\n         */\n        get: /**\n         * Returns the column templates.\n         * @return {?}\n         */\n        function () {\n            return this._columnTemplates;\n        },\n        /**\n         * Column templates gathered from `ContentChildren`\n         * if described in your markup.\n         */\n        set: /**\n         * Column templates gathered from `ContentChildren`\n         * if described in your markup.\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._columnTemplates = val;\n            this.translateColumns(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DatatableComponent.prototype, \"allRowsSelected\", {\n        /**\n         * Returns if all rows are selected.\n         */\n        get: /**\n         * Returns if all rows are selected.\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n            if (this.selectAllRowsOnPage) {\n                /** @type {?} */\n                var indexes = this.bodyComponent.indexes;\n                /** @type {?} */\n                var rowsOnPage = indexes.last - indexes.first;\n                allRowsSelected = this.selected.length === rowsOnPage;\n            }\n            return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     */\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     * @return {?}\n     */\n    DatatableComponent.prototype.ngOnInit = /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     * @return {?}\n     */\n    function () {\n        // need to call this immediatly to size\n        // if the table is hidden the visibility\n        // listener will invoke this itself upon show\n        this.recalculate();\n    };\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     */\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     * @return {?}\n     */\n    DatatableComponent.prototype.ngAfterViewInit = /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // this has to be done to prevent the change detection\n        // tree from freaking out because we are readjusting\n        if (typeof requestAnimationFrame === 'undefined') {\n            return;\n        }\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        function () {\n            _this.recalculate();\n            // emit page for virtual server-side kickoff\n            if (_this.externalPaging && _this.scrollbarV) {\n                _this.page.emit({\n                    count: _this.count,\n                    pageSize: _this.pageSize,\n                    limit: _this.limit,\n                    offset: 0\n                });\n            }\n        }));\n    };\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     */\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     * @return {?}\n     */\n    DatatableComponent.prototype.ngAfterContentInit = /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.columnTemplates.changes.subscribe((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { return _this.translateColumns(v); }));\n        this.listenForColumnInputChanges();\n    };\n    /**\n     * Translates the templates to the column objects\n     */\n    /**\n     * Translates the templates to the column objects\n     * @param {?} val\n     * @return {?}\n     */\n    DatatableComponent.prototype.translateColumns = /**\n     * Translates the templates to the column objects\n     * @param {?} val\n     * @return {?}\n     */\n    function (val) {\n        if (val) {\n            /** @type {?} */\n            var arr = val.toArray();\n            if (arr.length) {\n                this._internalColumns = translateTemplates(arr);\n                setColumnDefaults(this._internalColumns);\n                this.recalculateColumns();\n                this.sortInternalRows();\n                this.cd.markForCheck();\n            }\n        }\n    };\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param originalArray the original array passed via parameter\n     * @param groupByIndex  the index of the column to group the data by\n     */\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param {?} originalArray the original array passed via parameter\n     * @param {?} groupBy\n     * @return {?}\n     */\n    DatatableComponent.prototype.groupArrayBy = /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param {?} originalArray the original array passed via parameter\n     * @param {?} groupBy\n     * @return {?}\n     */\n    function (originalArray, groupBy) {\n        // create a map to hold groups with their corresponding results\n        /** @type {?} */\n        var map = new Map();\n        /** @type {?} */\n        var i = 0;\n        originalArray.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) {\n            /** @type {?} */\n            var key = item[groupBy];\n            if (!map.has(key)) {\n                map.set(key, [item]);\n            }\n            else {\n                map.get(key).push(item);\n            }\n            i++;\n        }));\n        /** @type {?} */\n        var addGroup = (/**\n         * @param {?} key\n         * @param {?} value\n         * @return {?}\n         */\n        function (key, value) {\n            return { key: key, value: value };\n        });\n        // convert map back to a simple array of objects\n        return Array.from(map, (/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) { return addGroup(x[0], x[1]); }));\n    };\n    /*\n     * Lifecycle hook that is called when Angular dirty checks a directive.\n     */\n    /*\n       * Lifecycle hook that is called when Angular dirty checks a directive.\n       */\n    /**\n     * @return {?}\n     */\n    DatatableComponent.prototype.ngDoCheck = /*\n       * Lifecycle hook that is called when Angular dirty checks a directive.\n       */\n    /**\n     * @return {?}\n     */\n    function () {\n        if (this.rowDiffer.diff(this.rows)) {\n            if (!this.externalSorting) {\n                this.sortInternalRows();\n            }\n            else {\n                this._internalRows = __spread(this.rows);\n            }\n            // auto group by parent on new update\n            this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n            this.recalculatePages();\n            this.cd.markForCheck();\n        }\n    };\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     */\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     * @return {?}\n     */\n    DatatableComponent.prototype.recalculate = /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     * @return {?}\n     */\n    function () {\n        this.recalculateDims();\n        this.recalculateColumns();\n    };\n    /**\n     * Window resize handler to update sizes.\n     */\n    /**\n     * Window resize handler to update sizes.\n     * @return {?}\n     */\n    DatatableComponent.prototype.onWindowResize = /**\n     * Window resize handler to update sizes.\n     * @return {?}\n     */\n    function () {\n        this.recalculate();\n    };\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     */\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     * @param {?=} columns\n     * @param {?=} forceIdx\n     * @param {?=} allowBleed\n     * @return {?}\n     */\n    DatatableComponent.prototype.recalculateColumns = /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     * @param {?=} columns\n     * @param {?=} forceIdx\n     * @param {?=} allowBleed\n     * @return {?}\n     */\n    function (columns, forceIdx, allowBleed) {\n        if (columns === void 0) { columns = this._internalColumns; }\n        if (forceIdx === void 0) { forceIdx = -1; }\n        if (allowBleed === void 0) { allowBleed = this.scrollbarH; }\n        if (!columns)\n            return undefined;\n        /** @type {?} */\n        var width = this._innerWidth;\n        if (this.scrollbarV) {\n            width = width - this.scrollbarHelper.width;\n        }\n        if (this.columnMode === ColumnMode.force) {\n            forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n        }\n        else if (this.columnMode === ColumnMode.flex) {\n            adjustColumnWidths(columns, width);\n        }\n        return columns;\n    };\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     */\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     * @return {?}\n     */\n    DatatableComponent.prototype.recalculateDims = /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var dims = this.dimensionsHelper.getDimensions(this.element);\n        this._innerWidth = Math.floor(dims.width);\n        if (this.scrollbarV) {\n            /** @type {?} */\n            var height = dims.height;\n            if (this.headerHeight)\n                height = height - this.headerHeight;\n            if (this.footerHeight)\n                height = height - this.footerHeight;\n            this.bodyHeight = height;\n        }\n        this.recalculatePages();\n    };\n    /**\n     * Recalculates the pages after a update.\n     */\n    /**\n     * Recalculates the pages after a update.\n     * @return {?}\n     */\n    DatatableComponent.prototype.recalculatePages = /**\n     * Recalculates the pages after a update.\n     * @return {?}\n     */\n    function () {\n        this.pageSize = this.calcPageSize();\n        this.rowCount = this.calcRowCount();\n    };\n    /**\n     * Body triggered a page event.\n     */\n    /**\n     * Body triggered a page event.\n     * @param {?} __0\n     * @return {?}\n     */\n    DatatableComponent.prototype.onBodyPage = /**\n     * Body triggered a page event.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var offset = _a.offset;\n        // Avoid pagination caming from body events like scroll when the table\n        // has no virtualization and the external paging is enable.\n        // This means, let's the developer handle pagination by my him(her) self\n        if (this.externalPaging && !this.virtualization) {\n            return;\n        }\n        this.offset = offset;\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    };\n    /**\n     * The body triggered a scroll event.\n     */\n    /**\n     * The body triggered a scroll event.\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onBodyScroll = /**\n     * The body triggered a scroll event.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._offsetX.next(event.offsetX);\n        this.scroll.emit(event);\n        this.cd.detectChanges();\n    };\n    /**\n     * The footer triggered a page event.\n     */\n    /**\n     * The footer triggered a page event.\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onFooterPage = /**\n     * The footer triggered a page event.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.offset = event.page - 1;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n    };\n    /**\n     * Recalculates the sizes of the page\n     */\n    /**\n     * Recalculates the sizes of the page\n     * @param {?=} val\n     * @return {?}\n     */\n    DatatableComponent.prototype.calcPageSize = /**\n     * Recalculates the sizes of the page\n     * @param {?=} val\n     * @return {?}\n     */\n    function (val) {\n        if (val === void 0) { val = this.rows; }\n        // Keep the page size constant even if the row has been expanded.\n        // This is because an expanded row is still considered to be a child of\n        // the original row.  Hence calculation would use rowHeight only.\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            var size = Math.ceil(this.bodyHeight / ((/** @type {?} */ (this.rowHeight))));\n            return Math.max(size, 0);\n        }\n        // if limit is passed, we are paging\n        if (this.limit !== undefined) {\n            return this.limit;\n        }\n        // otherwise use row length\n        if (val) {\n            return val.length;\n        }\n        // other empty :(\n        return 0;\n    };\n    /**\n     * Calculates the row count.\n     */\n    /**\n     * Calculates the row count.\n     * @param {?=} val\n     * @return {?}\n     */\n    DatatableComponent.prototype.calcRowCount = /**\n     * Calculates the row count.\n     * @param {?=} val\n     * @return {?}\n     */\n    function (val) {\n        if (val === void 0) { val = this.rows; }\n        if (!this.externalPaging) {\n            if (!val)\n                return 0;\n            if (this.groupedRows) {\n                return this.groupedRows.length;\n            }\n            else if (this.treeFromRelation != null && this.treeToRelation != null) {\n                return this._internalRows.length;\n            }\n            else {\n                return val.length;\n            }\n        }\n        return this.count;\n    };\n    /**\n     * The header triggered a contextmenu event.\n     */\n    /**\n     * The header triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    DatatableComponent.prototype.onColumnContextmenu = /**\n     * The header triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var event = _a.event, column = _a.column;\n        this.tableContextmenu.emit({ event: event, type: ContextmenuType.header, content: column });\n    };\n    /**\n     * The body triggered a contextmenu event.\n     */\n    /**\n     * The body triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    DatatableComponent.prototype.onRowContextmenu = /**\n     * The body triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var event = _a.event, row = _a.row;\n        this.tableContextmenu.emit({ event: event, type: ContextmenuType.body, content: row });\n    };\n    /**\n     * The header triggered a column resize event.\n     */\n    /**\n     * The header triggered a column resize event.\n     * @param {?} __0\n     * @return {?}\n     */\n    DatatableComponent.prototype.onColumnResize = /**\n     * The header triggered a column resize event.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var column = _a.column, newValue = _a.newValue;\n        /* Safari/iOS 10.2 workaround */\n        if (column === undefined) {\n            return;\n        }\n        /** @type {?} */\n        var idx;\n        /** @type {?} */\n        var cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @param {?} i\n         * @return {?}\n         */\n        function (c, i) {\n            c = __assign({}, c);\n            if (c.$$id === column.$$id) {\n                idx = i;\n                c.width = newValue;\n                // set this so we can force the column\n                // width distribution to be to this value\n                c.$$oldWidth = newValue;\n            }\n            return c;\n        }));\n        this.recalculateColumns(cols, idx);\n        this._internalColumns = cols;\n        this.resize.emit({\n            column: column,\n            newValue: newValue\n        });\n    };\n    /**\n     * The header triggered a column re-order event.\n     */\n    /**\n     * The header triggered a column re-order event.\n     * @param {?} __0\n     * @return {?}\n     */\n    DatatableComponent.prototype.onColumnReorder = /**\n     * The header triggered a column re-order event.\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var column = _a.column, newValue = _a.newValue, prevValue = _a.prevValue;\n        /** @type {?} */\n        var cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        function (c) {\n            return __assign({}, c);\n        }));\n        if (this.swapColumns) {\n            /** @type {?} */\n            var prevCol = cols[newValue];\n            cols[newValue] = column;\n            cols[prevValue] = prevCol;\n        }\n        else {\n            if (newValue > prevValue) {\n                /** @type {?} */\n                var movedCol = cols[prevValue];\n                for (var i = prevValue; i < newValue; i++) {\n                    cols[i] = cols[i + 1];\n                }\n                cols[newValue] = movedCol;\n            }\n            else {\n                /** @type {?} */\n                var movedCol = cols[prevValue];\n                for (var i = prevValue; i > newValue; i--) {\n                    cols[i] = cols[i - 1];\n                }\n                cols[newValue] = movedCol;\n            }\n        }\n        this._internalColumns = cols;\n        this.reorder.emit({\n            column: column,\n            newValue: newValue,\n            prevValue: prevValue\n        });\n    };\n    /**\n     * The header triggered a column sort event.\n     */\n    /**\n     * The header triggered a column sort event.\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onColumnSort = /**\n     * The header triggered a column sort event.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // clean selected rows\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n        this.sorts = event.sorts;\n        // this could be optimized better since it will resort\n        // the rows again on the 'push' detection...\n        if (this.externalSorting === false) {\n            // don't use normal setter so we don't resort\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // Always go to first page when sorting to see the newly sorted data\n        this.offset = 0;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.sort.emit(event);\n    };\n    /**\n     * Toggle all row selection\n     */\n    /**\n     * Toggle all row selection\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onHeaderSelect = /**\n     * Toggle all row selection\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _a, _b;\n        if (this.selectAllRowsOnPage) {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            var first = this.bodyComponent.indexes.first;\n            /** @type {?} */\n            var last = this.bodyComponent.indexes.last;\n            /** @type {?} */\n            var allSelected = this.selected.length === last - first;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                (_a = this.selected).push.apply(_a, __spread(this._internalRows.slice(first, last)));\n            }\n        }\n        else {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            var allSelected = this.selected.length === this.rows.length;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                (_b = this.selected).push.apply(_b, __spread(this.rows));\n            }\n        }\n        this.select.emit({\n            selected: this.selected\n        });\n    };\n    /**\n     * A row was selected from body\n     */\n    /**\n     * A row was selected from body\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onBodySelect = /**\n     * A row was selected from body\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.select.emit(event);\n    };\n    /**\n     * A row was expanded or collapsed for tree\n     */\n    /**\n     * A row was expanded or collapsed for tree\n     * @param {?} event\n     * @return {?}\n     */\n    DatatableComponent.prototype.onTreeAction = /**\n     * A row was expanded or collapsed for tree\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        /** @type {?} */\n        var row = event.row;\n        // TODO: For duplicated items this will not work\n        /** @type {?} */\n        var rowIndex = this._rows.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        function (r) { return r[_this.treeToRelation] === event.row[_this.treeToRelation]; }));\n        this.treeAction.emit({ row: row, rowIndex: rowIndex });\n    };\n    /**\n     * @return {?}\n     */\n    DatatableComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        function (subscription) { return subscription.unsubscribe(); }));\n    };\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     */\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     * @private\n     * @return {?}\n     */\n    DatatableComponent.prototype.listenForColumnInputChanges = /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.columnTemplates) {\n                _this.columnTemplates.notifyOnChanges();\n            }\n        })));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DatatableComponent.prototype.sortInternalRows = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n    };\n    /** @nocollapse */\n    DatatableComponent.ctorParameters = function () { return [\n        { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n        { type: DimensionsHelper, decorators: [{ type: SkipSelf }] },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: KeyValueDiffers },\n        { type: ColumnChangesService },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['configuration',] }] }\n    ]; };\n    DatatableComponent.propDecorators = {\n        targetMarkerTemplate: [{ type: Input }],\n        rows: [{ type: Input }],\n        groupRowsBy: [{ type: Input }],\n        groupedRows: [{ type: Input }],\n        columns: [{ type: Input }],\n        selected: [{ type: Input }],\n        scrollbarV: [{ type: Input }],\n        scrollbarH: [{ type: Input }],\n        rowHeight: [{ type: Input }],\n        columnMode: [{ type: Input }],\n        headerHeight: [{ type: Input }],\n        footerHeight: [{ type: Input }],\n        externalPaging: [{ type: Input }],\n        externalSorting: [{ type: Input }],\n        limit: [{ type: Input }],\n        count: [{ type: Input }],\n        offset: [{ type: Input }],\n        loadingIndicator: [{ type: Input }],\n        selectionType: [{ type: Input }],\n        reorderable: [{ type: Input }],\n        swapColumns: [{ type: Input }],\n        sortType: [{ type: Input }],\n        sorts: [{ type: Input }],\n        cssClasses: [{ type: Input }],\n        messages: [{ type: Input }],\n        rowClass: [{ type: Input }],\n        selectCheck: [{ type: Input }],\n        displayCheck: [{ type: Input }],\n        groupExpansionDefault: [{ type: Input }],\n        trackByProp: [{ type: Input }],\n        selectAllRowsOnPage: [{ type: Input }],\n        virtualization: [{ type: Input }],\n        treeFromRelation: [{ type: Input }],\n        treeToRelation: [{ type: Input }],\n        summaryRow: [{ type: Input }],\n        summaryHeight: [{ type: Input }],\n        summaryPosition: [{ type: Input }],\n        scroll: [{ type: Output }],\n        activate: [{ type: Output }],\n        select: [{ type: Output }],\n        sort: [{ type: Output }],\n        page: [{ type: Output }],\n        reorder: [{ type: Output }],\n        resize: [{ type: Output }],\n        tableContextmenu: [{ type: Output }],\n        treeAction: [{ type: Output }],\n        isFixedHeader: [{ type: HostBinding, args: ['class.fixed-header',] }],\n        isFixedRow: [{ type: HostBinding, args: ['class.fixed-row',] }],\n        isVertScroll: [{ type: HostBinding, args: ['class.scroll-vertical',] }],\n        isVirtualized: [{ type: HostBinding, args: ['class.virtualized',] }],\n        isHorScroll: [{ type: HostBinding, args: ['class.scroll-horz',] }],\n        isSelectable: [{ type: HostBinding, args: ['class.selectable',] }],\n        isCheckboxSelection: [{ type: HostBinding, args: ['class.checkbox-selection',] }],\n        isCellSelection: [{ type: HostBinding, args: ['class.cell-selection',] }],\n        isSingleSelection: [{ type: HostBinding, args: ['class.single-selection',] }],\n        isMultiSelection: [{ type: HostBinding, args: ['class.multi-selection',] }],\n        isMultiClickSelection: [{ type: HostBinding, args: ['class.multi-click-selection',] }],\n        columnTemplates: [{ type: ContentChildren, args: [DataTableColumnDirective,] }],\n        rowDetail: [{ type: ContentChild, args: [DatatableRowDetailDirective, { static: false },] }],\n        groupHeader: [{ type: ContentChild, args: [DatatableGroupHeaderDirective, { static: false },] }],\n        footer: [{ type: ContentChild, args: [DatatableFooterDirective, { static: false },] }],\n        bodyComponent: [{ type: ViewChild, args: [DataTableBodyComponent, { static: false },] }],\n        headerComponent: [{ type: ViewChild, args: [DataTableHeaderComponent, { static: false },] }],\n        rowIdentity: [{ type: Input }],\n        onWindowResize: [{ type: HostListener, args: ['window:resize',] }]\n    };\n    __decorate([\n        throttleable(5),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DatatableComponent.prototype, \"onWindowResize\", null);\nDatatableComponent.ɵfac = function DatatableComponent_Factory(t) { return new (t || DatatableComponent)(ɵngcc0.ɵɵdirectiveInject(ScrollbarHelper, 4), ɵngcc0.ɵɵdirectiveInject(DimensionsHelper, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ColumnChangesService), ɵngcc0.ɵɵdirectiveInject('configuration', 8)); };\nDatatableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatatableComponent, selectors: [[\"ngx-datatable\"]], contentQueries: function DatatableComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableRowDetailDirective, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableGroupHeaderDirective, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DatatableFooterDirective, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DataTableColumnDirective, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rowDetail = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeader = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnTemplates = _t);\n    } }, viewQuery: function DatatableComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DataTableBodyComponent, true);\n        ɵngcc0.ɵɵviewQuery(DataTableHeaderComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyComponent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerComponent = _t.first);\n    } }, hostAttrs: [1, \"ngx-datatable\"], hostVars: 22, hostBindings: function DatatableComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function DatatableComponent_resize_HostBindingHandler() { return ctx.onWindowResize(); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed-header\", ctx.isFixedHeader)(\"fixed-row\", ctx.isFixedRow)(\"scroll-vertical\", ctx.isVertScroll)(\"virtualized\", ctx.isVirtualized)(\"scroll-horz\", ctx.isHorScroll)(\"selectable\", ctx.isSelectable)(\"checkbox-selection\", ctx.isCheckboxSelection)(\"cell-selection\", ctx.isCellSelection)(\"single-selection\", ctx.isSingleSelection)(\"multi-selection\", ctx.isMultiSelection)(\"multi-click-selection\", ctx.isMultiClickSelection);\n    } }, inputs: { selected: \"selected\", scrollbarV: \"scrollbarV\", scrollbarH: \"scrollbarH\", rowHeight: \"rowHeight\", columnMode: \"columnMode\", headerHeight: \"headerHeight\", footerHeight: \"footerHeight\", externalPaging: \"externalPaging\", externalSorting: \"externalSorting\", loadingIndicator: \"loadingIndicator\", reorderable: \"reorderable\", swapColumns: \"swapColumns\", sortType: \"sortType\", sorts: \"sorts\", cssClasses: \"cssClasses\", messages: \"messages\", groupExpansionDefault: \"groupExpansionDefault\", selectAllRowsOnPage: \"selectAllRowsOnPage\", virtualization: \"virtualization\", summaryRow: \"summaryRow\", summaryHeight: \"summaryHeight\", summaryPosition: \"summaryPosition\", rowIdentity: \"rowIdentity\", rows: \"rows\", groupRowsBy: \"groupRowsBy\", columns: \"columns\", limit: \"limit\", count: \"count\", offset: \"offset\", targetMarkerTemplate: \"targetMarkerTemplate\", groupedRows: \"groupedRows\", selectionType: \"selectionType\", rowClass: \"rowClass\", selectCheck: \"selectCheck\", displayCheck: \"displayCheck\", trackByProp: \"trackByProp\", treeFromRelation: \"treeFromRelation\", treeToRelation: \"treeToRelation\" }, outputs: { scroll: \"scroll\", activate: \"activate\", select: \"select\", sort: \"sort\", page: \"page\", reorder: \"reorder\", resize: \"resize\", tableContextmenu: \"tableContextmenu\", treeAction: \"treeAction\" }, decls: 5, vars: 34, consts: [[\"visibilityObserver\", \"\", 3, \"visible\"], [3, \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"allRowsSelected\", \"selectionType\", \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\", 4, \"ngIf\"], [3, \"groupRowsBy\", \"groupedRows\", \"rows\", \"groupExpansionDefault\", \"scrollbarV\", \"scrollbarH\", \"virtualization\", \"loadingIndicator\", \"externalPaging\", \"rowHeight\", \"rowCount\", \"offset\", \"trackByProp\", \"columns\", \"pageSize\", \"offsetX\", \"rowDetail\", \"groupHeader\", \"selected\", \"innerWidth\", \"bodyHeight\", \"selectionType\", \"emptyMessage\", \"rowIdentity\", \"rowClass\", \"selectCheck\", \"displayCheck\", \"summaryRow\", \"summaryHeight\", \"summaryPosition\", \"page\", \"activate\", \"rowContextmenu\", \"select\", \"scroll\", \"treeAction\"], [3, \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\", \"page\", 4, \"ngIf\"], [3, \"sorts\", \"sortType\", \"scrollbarH\", \"innerWidth\", \"offsetX\", \"dealsWithGroup\", \"columns\", \"headerHeight\", \"reorderable\", \"targetMarkerTemplate\", \"sortAscendingIcon\", \"sortDescendingIcon\", \"allRowsSelected\", \"selectionType\", \"sort\", \"resize\", \"reorder\", \"select\", \"columnContextmenu\"], [3, \"rowCount\", \"pageSize\", \"offset\", \"footerHeight\", \"footerTemplate\", \"totalMessage\", \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"selectedCount\", \"selectedMessage\", \"pagerNextIcon\", \"page\"]], template: function DatatableComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"visible\", function DatatableComponent_Template_div_visible_0_listener() { return ctx.recalculate(); });\n        ɵngcc0.ɵɵtemplate(1, DatatableComponent_datatable_header_1_Template, 2, 16, \"datatable-header\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"datatable-body\", 2);\n        ɵngcc0.ɵɵlistener(\"page\", function DatatableComponent_Template_datatable_body_page_2_listener($event) { return ctx.onBodyPage($event); })(\"activate\", function DatatableComponent_Template_datatable_body_activate_2_listener($event) { return ctx.activate.emit($event); })(\"rowContextmenu\", function DatatableComponent_Template_datatable_body_rowContextmenu_2_listener($event) { return ctx.onRowContextmenu($event); })(\"select\", function DatatableComponent_Template_datatable_body_select_2_listener($event) { return ctx.onBodySelect($event); })(\"scroll\", function DatatableComponent_Template_datatable_body_scroll_2_listener($event) { return ctx.onBodyScroll($event); })(\"treeAction\", function DatatableComponent_Template_datatable_body_treeAction_2_listener($event) { return ctx.onTreeAction($event); });\n        ɵngcc0.ɵɵpipe(3, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, DatatableComponent_datatable_footer_4_Template, 1, 12, \"datatable-footer\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerHeight);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"groupRowsBy\", ctx.groupRowsBy)(\"groupedRows\", ctx.groupedRows)(\"rows\", ctx._internalRows)(\"groupExpansionDefault\", ctx.groupExpansionDefault)(\"scrollbarV\", ctx.scrollbarV)(\"scrollbarH\", ctx.scrollbarH)(\"virtualization\", ctx.virtualization)(\"loadingIndicator\", ctx.loadingIndicator)(\"externalPaging\", ctx.externalPaging)(\"rowHeight\", ctx.rowHeight)(\"rowCount\", ctx.rowCount)(\"offset\", ctx.offset)(\"trackByProp\", ctx.trackByProp)(\"columns\", ctx._internalColumns)(\"pageSize\", ctx.pageSize)(\"offsetX\", ɵngcc0.ɵɵpipeBind1(3, 32, ctx._offsetX))(\"rowDetail\", ctx.rowDetail)(\"groupHeader\", ctx.groupHeader)(\"selected\", ctx.selected)(\"innerWidth\", ctx._innerWidth)(\"bodyHeight\", ctx.bodyHeight)(\"selectionType\", ctx.selectionType)(\"emptyMessage\", ctx.messages.emptyMessage)(\"rowIdentity\", ctx.rowIdentity)(\"rowClass\", ctx.rowClass)(\"selectCheck\", ctx.selectCheck)(\"displayCheck\", ctx.displayCheck)(\"summaryRow\", ctx.summaryRow)(\"summaryHeight\", ctx.summaryHeight)(\"summaryPosition\", ctx.summaryPosition);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerHeight);\n    } }, directives: function () { return [VisibilityDirective, ɵngcc1.NgIf, DataTableBodyComponent, DataTableHeaderComponent, DataTableFooterComponent]; }, pipes: function () { return [ɵngcc1.AsyncPipe]; }, styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;-webkit-transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatatableComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-datatable',\n                template: \"<div visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    class: 'ngx-datatable'\n                },\n                styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;-webkit-transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"]\n            }]\n    }], function () { return [{ type: ScrollbarHelper, decorators: [{\n                type: SkipSelf\n            }] }, { type: DimensionsHelper, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.KeyValueDiffers }, { type: ColumnChangesService }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: ['configuration']\n            }] }]; }, { selected: [{\n            type: Input\n        }], scrollbarV: [{\n            type: Input\n        }], scrollbarH: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], columnMode: [{\n            type: Input\n        }], headerHeight: [{\n            type: Input\n        }], footerHeight: [{\n            type: Input\n        }], externalPaging: [{\n            type: Input\n        }], externalSorting: [{\n            type: Input\n        }], loadingIndicator: [{\n            type: Input\n        }], reorderable: [{\n            type: Input\n        }], swapColumns: [{\n            type: Input\n        }], sortType: [{\n            type: Input\n        }], sorts: [{\n            type: Input\n        }], cssClasses: [{\n            type: Input\n        }], messages: [{\n            type: Input\n        }], groupExpansionDefault: [{\n            type: Input\n        }], selectAllRowsOnPage: [{\n            type: Input\n        }], virtualization: [{\n            type: Input\n        }], summaryRow: [{\n            type: Input\n        }], summaryHeight: [{\n            type: Input\n        }], summaryPosition: [{\n            type: Input\n        }], scroll: [{\n            type: Output\n        }], activate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], sort: [{\n            type: Output\n        }], page: [{\n            type: Output\n        }], reorder: [{\n            type: Output\n        }], resize: [{\n            type: Output\n        }], tableContextmenu: [{\n            type: Output\n        }], treeAction: [{\n            type: Output\n        }], rowIdentity: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], groupRowsBy: [{\n            type: Input\n        }], columns: [{\n            type: Input\n        }], limit: [{\n            type: Input\n        }], count: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], isFixedHeader: [{\n            type: HostBinding,\n            args: ['class.fixed-header']\n        }], isFixedRow: [{\n            type: HostBinding,\n            args: ['class.fixed-row']\n        }], isVertScroll: [{\n            type: HostBinding,\n            args: ['class.scroll-vertical']\n        }], isVirtualized: [{\n            type: HostBinding,\n            args: ['class.virtualized']\n        }], isHorScroll: [{\n            type: HostBinding,\n            args: ['class.scroll-horz']\n        }], isSelectable: [{\n            type: HostBinding,\n            args: ['class.selectable']\n        }], isCheckboxSelection: [{\n            type: HostBinding,\n            args: ['class.checkbox-selection']\n        }], isCellSelection: [{\n            type: HostBinding,\n            args: ['class.cell-selection']\n        }], isSingleSelection: [{\n            type: HostBinding,\n            args: ['class.single-selection']\n        }], isMultiSelection: [{\n            type: HostBinding,\n            args: ['class.multi-selection']\n        }], isMultiClickSelection: [{\n            type: HostBinding,\n            args: ['class.multi-click-selection']\n        }], columnTemplates: [{\n            type: ContentChildren,\n            args: [DataTableColumnDirective]\n        }], onWindowResize: [{\n            type: HostListener,\n            args: ['window:resize']\n        }], targetMarkerTemplate: [{\n            type: Input\n        }], groupedRows: [{\n            type: Input\n        }], selectionType: [{\n            type: Input\n        }], rowClass: [{\n            type: Input\n        }], selectCheck: [{\n            type: Input\n        }], displayCheck: [{\n            type: Input\n        }], trackByProp: [{\n            type: Input\n        }], treeFromRelation: [{\n            type: Input\n        }], treeToRelation: [{\n            type: Input\n        }], rowDetail: [{\n            type: ContentChild,\n            args: [DatatableRowDetailDirective, { static: false }]\n        }], groupHeader: [{\n            type: ContentChild,\n            args: [DatatableGroupHeaderDirective, { static: false }]\n        }], footer: [{\n            type: ContentChild,\n            args: [DatatableFooterDirective, { static: false }]\n        }], bodyComponent: [{\n            type: ViewChild,\n            args: [DataTableBodyComponent, { static: false }]\n        }], headerComponent: [{\n            type: ViewChild,\n            args: [DataTableHeaderComponent, { static: false }]\n        }] }); })();\n    return DatatableComponent;\n}());\nif (false) {\n    /**\n     * Template for the target marker of drag target columns.\n     * @type {?}\n     */\n    DatatableComponent.prototype.targetMarkerTemplate;\n    /**\n     * This attribute allows the user to set a grouped array in the following format:\n     *  [\n     *    {groupid=1} [\n     *      {id=1 name=\"test1\"},\n     *      {id=2 name=\"test2\"},\n     *      {id=3 name=\"test3\"}\n     *    ]},\n     *    {groupid=2>[\n     *      {id=4 name=\"test4\"},\n     *      {id=5 name=\"test5\"},\n     *      {id=6 name=\"test6\"}\n     *    ]}\n     *  ]\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupedRows;\n    /**\n     * List of row objects that should be\n     * represented as selected in the grid.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selected;\n    /**\n     * Enable vertical scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarV;\n    /**\n     * Enable horz scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarH;\n    /**\n     * The row height; which is necessary\n     * to calculate the height for the lazy rendering.\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowHeight;\n    /**\n     * Type of column width distribution formula.\n     * Example: flex, force, standard\n     * @type {?}\n     */\n    DatatableComponent.prototype.columnMode;\n    /**\n     * The minimum header height in pixels.\n     * Pass a falsey for no header\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerHeight;\n    /**\n     * The minimum footer height in pixels.\n     * Pass falsey for no footer\n     * @type {?}\n     */\n    DatatableComponent.prototype.footerHeight;\n    /**\n     * If the table should use external paging\n     * otherwise its assumed that all data is preloaded.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalPaging;\n    /**\n     * If the table should use external sorting or\n     * the built-in basic sorting.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalSorting;\n    /**\n     * Show the linear loading bar.\n     * Default value: `false`\n     * @type {?}\n     */\n    DatatableComponent.prototype.loadingIndicator;\n    /**\n     * Type of row selection. Options are:\n     *\n     *  - `single`\n     *  - `multi`\n     *  - `checkbox`\n     *  - `multiClick`\n     *  - `cell`\n     *\n     * For no selection pass a `falsey`.\n     * Default value: `undefined`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectionType;\n    /**\n     * Enable/Disable ability to re-order columns\n     * by dragging them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorderable;\n    /**\n     * Swap columns on re-order columns or\n     * move them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.swapColumns;\n    /**\n     * The type of sorting\n     * @type {?}\n     */\n    DatatableComponent.prototype.sortType;\n    /**\n     * Array of sorted columns by property and type.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.sorts;\n    /**\n     * Css class overrides\n     * @type {?}\n     */\n    DatatableComponent.prototype.cssClasses;\n    /**\n     * Message overrides for localization\n     *\n     * emptyMessage     [default] = 'No data to display'\n     * totalMessage     [default] = 'total'\n     * selectedMessage  [default] = 'selected'\n     * @type {?}\n     */\n    DatatableComponent.prototype.messages;\n    /**\n     * Row specific classes.\n     * Similar implementation to ngClass.\n     *\n     *  [rowClass]=\"'first second'\"\n     *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowClass;\n    /**\n     * A boolean/function you can use to check whether you want\n     * to select a particular row based on a criteria. Example:\n     *\n     *    (selection) => {\n     *      return selection !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectCheck;\n    /**\n     * A function you can use to check whether you want\n     * to show the checkbox for a particular row based on a criteria. Example:\n     *\n     *    (row, column, value) => {\n     *      return row.name !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.displayCheck;\n    /**\n     * A boolean you can use to set the detault behaviour of rows and groups\n     * whether they will start expanded or not. If ommited the default is NOT expanded.\n     *\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupExpansionDefault;\n    /**\n     * Property to which you can use for custom tracking of rows.\n     * Example: 'name'\n     * @type {?}\n     */\n    DatatableComponent.prototype.trackByProp;\n    /**\n     * Property to which you can use for determining select all\n     * rows on current page or not.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectAllRowsOnPage;\n    /**\n     * A flag for row virtualization on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.virtualization;\n    /**\n     * Tree from relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeFromRelation;\n    /**\n     * Tree to relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeToRelation;\n    /**\n     * A flag for switching summary row on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryRow;\n    /**\n     * A height of summary row\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryHeight;\n    /**\n     * A property holds a summary row position: top/bottom\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryPosition;\n    /**\n     * Body was scrolled typically in a `scrollbarV:true` scenario.\n     * @type {?}\n     */\n    DatatableComponent.prototype.scroll;\n    /**\n     * A cell or row was focused via keyboard or mouse click.\n     * @type {?}\n     */\n    DatatableComponent.prototype.activate;\n    /**\n     * A cell or row was selected.\n     * @type {?}\n     */\n    DatatableComponent.prototype.select;\n    /**\n     * Column sort was invoked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.sort;\n    /**\n     * The table was paged either triggered by the pager or the body scroll.\n     * @type {?}\n     */\n    DatatableComponent.prototype.page;\n    /**\n     * Columns were re-ordered.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorder;\n    /**\n     * Column was resized.\n     * @type {?}\n     */\n    DatatableComponent.prototype.resize;\n    /**\n     * The context menu was invoked on the table.\n     * type indicates whether the header or the body was clicked.\n     * content contains either the column or the row that was clicked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.tableContextmenu;\n    /**\n     * A row was expanded ot collapsed for tree\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeAction;\n    /**\n     * Row Detail templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowDetail;\n    /**\n     * Group Header templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupHeader;\n    /**\n     * Footer template gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.footer;\n    /**\n     * Reference to the body component for manually\n     * invoking functions on the body.\n     * @type {?}\n     */\n    DatatableComponent.prototype.bodyComponent;\n    /**\n     * Reference to the header component for manually\n     * invoking functions on the header.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerComponent;\n    /** @type {?} */\n    DatatableComponent.prototype.element;\n    /** @type {?} */\n    DatatableComponent.prototype._innerWidth;\n    /** @type {?} */\n    DatatableComponent.prototype.pageSize;\n    /** @type {?} */\n    DatatableComponent.prototype.bodyHeight;\n    /** @type {?} */\n    DatatableComponent.prototype.rowCount;\n    /** @type {?} */\n    DatatableComponent.prototype.rowDiffer;\n    /** @type {?} */\n    DatatableComponent.prototype._offsetX;\n    /** @type {?} */\n    DatatableComponent.prototype._limit;\n    /** @type {?} */\n    DatatableComponent.prototype._count;\n    /** @type {?} */\n    DatatableComponent.prototype._offset;\n    /** @type {?} */\n    DatatableComponent.prototype._rows;\n    /** @type {?} */\n    DatatableComponent.prototype._groupRowsBy;\n    /** @type {?} */\n    DatatableComponent.prototype._internalRows;\n    /** @type {?} */\n    DatatableComponent.prototype._internalColumns;\n    /** @type {?} */\n    DatatableComponent.prototype._columns;\n    /** @type {?} */\n    DatatableComponent.prototype._columnTemplates;\n    /** @type {?} */\n    DatatableComponent.prototype._subscriptions;\n    /**\n     * This will be used when displaying or selecting rows.\n     * when tracking/comparing them, we'll use the value of this fn,\n     *\n     * (`fn(x) === fn(y)` instead of `x === y`)\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowIdentity;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.dimensionsHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.columnChangesService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableHeaderCellComponent = /** @class */ (function () {\n    function DataTableHeaderCellComponent(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this.sortFn = this.onSort.bind(this);\n        this.selectFn = this.select.emit.bind(this.select);\n        this.cellContext = {\n            column: this.column,\n            sortDir: this.sortDir,\n            sortFn: this.sortFn,\n            allRowsSelected: this.allRowsSelected,\n            selectFn: this.selectFn\n        };\n    }\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"allRowsSelected\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._allRowsSelected;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._allRowsSelected = value;\n            this.cellContext.allRowsSelected = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"column\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._column;\n        },\n        set: /**\n         * @param {?} column\n         * @return {?}\n         */\n        function (column) {\n            this._column = column;\n            this.cellContext.column = column;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"sorts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._sorts;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._sorts = val;\n            this.sortDir = this.calcSortDir(val);\n            this.cellContext.sortDir = this.sortDir;\n            this.sortClass = this.calcSortClass(this.sortDir);\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"columnCssClasses\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var e_1, _a;\n            /** @type {?} */\n            var cls = 'datatable-header-cell';\n            if (this.column.sortable)\n                cls += ' sortable';\n            if (this.column.resizeable)\n                cls += ' resizeable';\n            if (this.column.headerClass) {\n                if (typeof this.column.headerClass === 'string') {\n                    cls += ' ' + this.column.headerClass;\n                }\n                else if (typeof this.column.headerClass === 'function') {\n                    /** @type {?} */\n                    var res = this.column.headerClass({\n                        column: this.column\n                    });\n                    if (typeof res === 'string') {\n                        cls += res;\n                    }\n                    else if (typeof res === 'object') {\n                        /** @type {?} */\n                        var keys = Object.keys(res);\n                        try {\n                            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                                var k = keys_1_1.value;\n                                if (res[k] === true)\n                                    cls += \" \" + k;\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                    }\n                }\n            }\n            /** @type {?} */\n            var sortDir = this.sortDir;\n            if (sortDir) {\n                cls += \" sort-active sort-\" + sortDir;\n            }\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"name\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n            return this.column.headerTemplate === undefined ? this.column.name : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"minWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.minWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"maxWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.maxWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"width\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableHeaderCellComponent.prototype, \"isCheckboxable\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    DataTableHeaderCellComponent.prototype.onContextmenu = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        this.columnContextmenu.emit({ event: $event, column: this.column });\n    };\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    DataTableHeaderCellComponent.prototype.calcSortDir = /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    function (sorts) {\n        var _this = this;\n        if (sorts && this.column) {\n            /** @type {?} */\n            var sort = sorts.find((/**\n             * @param {?} s\n             * @return {?}\n             */\n            function (s) {\n                return s.prop === _this.column.prop;\n            }));\n            if (sort)\n                return sort.dir;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DataTableHeaderCellComponent.prototype.onSort = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.column.sortable)\n            return;\n        /** @type {?} */\n        var newValue = nextSortDir(this.sortType, this.sortDir);\n        this.sort.emit({\n            column: this.column,\n            prevValue: this.sortDir,\n            newValue: newValue\n        });\n    };\n    /**\n     * @param {?} sortDir\n     * @return {?}\n     */\n    DataTableHeaderCellComponent.prototype.calcSortClass = /**\n     * @param {?} sortDir\n     * @return {?}\n     */\n    function (sortDir) {\n        if (sortDir === SortDirection.asc) {\n            return \"sort-btn sort-asc \" + this.sortAscendingIcon;\n        }\n        else if (sortDir === SortDirection.desc) {\n            return \"sort-btn sort-desc \" + this.sortDescendingIcon;\n        }\n        else {\n            return \"sort-btn\";\n        }\n    };\n    /** @nocollapse */\n    DataTableHeaderCellComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    DataTableHeaderCellComponent.propDecorators = {\n        sortType: [{ type: Input }],\n        sortAscendingIcon: [{ type: Input }],\n        sortDescendingIcon: [{ type: Input }],\n        isTarget: [{ type: Input }],\n        targetMarkerTemplate: [{ type: Input }],\n        targetMarkerContext: [{ type: Input }],\n        allRowsSelected: [{ type: Input }],\n        selectionType: [{ type: Input }],\n        column: [{ type: Input }],\n        headerHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n        sorts: [{ type: Input }],\n        sort: [{ type: Output }],\n        select: [{ type: Output }],\n        columnContextmenu: [{ type: Output }],\n        columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n        name: [{ type: HostBinding, args: ['attr.title',] }],\n        minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n        maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n        width: [{ type: HostBinding, args: ['style.width.px',] }],\n        onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n    };\nDataTableHeaderCellComponent.ɵfac = function DataTableHeaderCellComponent_Factory(t) { return new (t || DataTableHeaderCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDataTableHeaderCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableHeaderCellComponent, selectors: [[\"datatable-header-cell\"]], hostAttrs: [1, \"datatable-header-cell\"], hostVars: 11, hostBindings: function DataTableHeaderCellComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"contextmenu\", function DataTableHeaderCellComponent_contextmenu_HostBindingHandler($event) { return ctx.onContextmenu($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.name);\n        ɵngcc0.ɵɵclassMap(ctx.columnCssClasses);\n        ɵngcc0.ɵɵstyleProp(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"width\", ctx.width, \"px\")(\"height\", ctx.headerHeight, \"px\");\n    } }, inputs: { allRowsSelected: \"allRowsSelected\", column: \"column\", sorts: \"sorts\", sortType: \"sortType\", sortAscendingIcon: \"sortAscendingIcon\", sortDescendingIcon: \"sortDescendingIcon\", isTarget: \"isTarget\", targetMarkerTemplate: \"targetMarkerTemplate\", targetMarkerContext: \"targetMarkerContext\", selectionType: \"selectionType\", headerHeight: \"headerHeight\" }, outputs: { sort: \"sort\", select: \"select\", columnContextmenu: \"columnContextmenu\" }, decls: 6, vars: 6, consts: [[1, \"datatable-header-cell-template-wrap\"], [4, \"ngIf\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [\"class\", \"datatable-header-cell-wrapper\", 4, \"ngIf\"], [3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [1, \"datatable-header-cell-wrapper\"], [1, \"datatable-header-cell-label\", \"draggable\", 3, \"innerHTML\", \"click\"]], template: function DataTableHeaderCellComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DataTableHeaderCellComponent_1_Template, 1, 2, undefined, 1);\n        ɵngcc0.ɵɵtemplate(2, DataTableHeaderCellComponent_label_2_Template, 2, 1, \"label\", 2);\n        ɵngcc0.ɵɵtemplate(3, DataTableHeaderCellComponent_span_3_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(4, DataTableHeaderCellComponent_4_Template, 1, 2, undefined, 1);\n        ɵngcc0.ɵɵelementStart(5, \"span\", 4);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTableHeaderCellComponent_Template_span_click_5_listener() { return ctx.onSort(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isTarget);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCheckboxable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.headerTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.headerTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMap(ctx.sortClass);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableHeaderCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-header-cell',\n                template: \"\\n    <div class=\\\"datatable-header-cell-template-wrap\\\">\\n      <ng-template\\n        *ngIf=\\\"isTarget\\\"\\n        [ngTemplateOutlet]=\\\"targetMarkerTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"targetMarkerContext\\\"\\n      >\\n      </ng-template>\\n      <label *ngIf=\\\"isCheckboxable\\\" class=\\\"datatable-checkbox\\\">\\n        <input type=\\\"checkbox\\\" [checked]=\\\"allRowsSelected\\\" (change)=\\\"select.emit(!allRowsSelected)\\\" />\\n      </label>\\n      <span *ngIf=\\\"!column.headerTemplate\\\" class=\\\"datatable-header-cell-wrapper\\\">\\n        <span class=\\\"datatable-header-cell-label draggable\\\" (click)=\\\"onSort()\\\" [innerHTML]=\\\"name\\\"> </span>\\n      </span>\\n      <ng-template\\n        *ngIf=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.headerTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\"\\n      >\\n      </ng-template>\\n      <span (click)=\\\"onSort()\\\" [class]=\\\"sortClass\\\"> </span>\\n    </div>\\n  \",\n                host: {\n                    class: 'datatable-header-cell'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { sort: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], columnContextmenu: [{\n            type: Output\n        }], allRowsSelected: [{\n            type: Input\n        }], column: [{\n            type: Input\n        }], sorts: [{\n            type: Input\n        }], columnCssClasses: [{\n            type: HostBinding,\n            args: ['class']\n        }], name: [{\n            type: HostBinding,\n            args: ['attr.title']\n        }], minWidth: [{\n            type: HostBinding,\n            args: ['style.minWidth.px']\n        }], maxWidth: [{\n            type: HostBinding,\n            args: ['style.maxWidth.px']\n        }], width: [{\n            type: HostBinding,\n            args: ['style.width.px']\n        }], onContextmenu: [{\n            type: HostListener,\n            args: ['contextmenu', ['$event']]\n        }], sortType: [{\n            type: Input\n        }], sortAscendingIcon: [{\n            type: Input\n        }], sortDescendingIcon: [{\n            type: Input\n        }], isTarget: [{\n            type: Input\n        }], targetMarkerTemplate: [{\n            type: Input\n        }], targetMarkerContext: [{\n            type: Input\n        }], selectionType: [{\n            type: Input\n        }], headerHeight: [{\n            type: HostBinding,\n            args: ['style.height.px']\n        }, {\n            type: Input\n        }] }); })();\n    return DataTableHeaderCellComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.isTarget;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype._allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.headerHeight;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortClass;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableFooterComponent = /** @class */ (function () {\n    function DataTableFooterComponent() {\n        this.selectedCount = 0;\n        this.page = new EventEmitter();\n    }\n    Object.defineProperty(DataTableFooterComponent.prototype, \"isVisible\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.rowCount / this.pageSize > 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableFooterComponent.prototype, \"curPage\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.offset + 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableFooterComponent.propDecorators = {\n        footerHeight: [{ type: Input }],\n        rowCount: [{ type: Input }],\n        pageSize: [{ type: Input }],\n        offset: [{ type: Input }],\n        pagerLeftArrowIcon: [{ type: Input }],\n        pagerRightArrowIcon: [{ type: Input }],\n        pagerPreviousIcon: [{ type: Input }],\n        pagerNextIcon: [{ type: Input }],\n        totalMessage: [{ type: Input }],\n        footerTemplate: [{ type: Input }],\n        selectedCount: [{ type: Input }],\n        selectedMessage: [{ type: Input }],\n        page: [{ type: Output }]\n    };\nDataTableFooterComponent.ɵfac = function DataTableFooterComponent_Factory(t) { return new (t || DataTableFooterComponent)(); };\nDataTableFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableFooterComponent, selectors: [[\"datatable-footer\"]], hostAttrs: [1, \"datatable-footer\"], inputs: { selectedCount: \"selectedCount\", footerHeight: \"footerHeight\", rowCount: \"rowCount\", pageSize: \"pageSize\", offset: \"offset\", pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\", totalMessage: \"totalMessage\", footerTemplate: \"footerTemplate\", selectedMessage: \"selectedMessage\" }, outputs: { page: \"page\" }, decls: 4, vars: 8, consts: [[1, \"datatable-footer-inner\", 3, \"ngClass\"], [4, \"ngIf\"], [\"class\", \"page-count\", 4, \"ngIf\"], [3, \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\", \"change\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"page-count\"], [3, \"pagerLeftArrowIcon\", \"pagerRightArrowIcon\", \"pagerPreviousIcon\", \"pagerNextIcon\", \"page\", \"size\", \"count\", \"hidden\", \"change\"]], template: function DataTableFooterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DataTableFooterComponent_1_Template, 1, 8, undefined, 1);\n        ɵngcc0.ɵɵtemplate(2, DataTableFooterComponent_div_2_Template, 3, 3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, DataTableFooterComponent_datatable_pager_3_Template, 1, 8, \"datatable-pager\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.footerHeight, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.selectedMessage));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.footerTemplate);\n    } }, directives: function () { return [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, DataTablePagerComponent]; }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableFooterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-footer',\n                template: \"\\n    <div\\n      class=\\\"datatable-footer-inner\\\"\\n      [ngClass]=\\\"{ 'selected-count': selectedMessage }\\\"\\n      [style.height.px]=\\\"footerHeight\\\"\\n    >\\n      <ng-template\\n        *ngIf=\\\"footerTemplate\\\"\\n        [ngTemplateOutlet]=\\\"footerTemplate.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          rowCount: rowCount,\\n          pageSize: pageSize,\\n          selectedCount: selectedCount,\\n          curPage: curPage,\\n          offset: offset\\n        }\\\"\\n      >\\n      </ng-template>\\n      <div class=\\\"page-count\\\" *ngIf=\\\"!footerTemplate\\\">\\n        <span *ngIf=\\\"selectedMessage\\\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\\n      </div>\\n      <datatable-pager\\n        *ngIf=\\\"!footerTemplate\\\"\\n        [pagerLeftArrowIcon]=\\\"pagerLeftArrowIcon\\\"\\n        [pagerRightArrowIcon]=\\\"pagerRightArrowIcon\\\"\\n        [pagerPreviousIcon]=\\\"pagerPreviousIcon\\\"\\n        [pagerNextIcon]=\\\"pagerNextIcon\\\"\\n        [page]=\\\"curPage\\\"\\n        [size]=\\\"pageSize\\\"\\n        [count]=\\\"rowCount\\\"\\n        [hidden]=\\\"!isVisible\\\"\\n        (change)=\\\"page.emit($event)\\\"\\n      >\\n      </datatable-pager>\\n    </div>\\n  \",\n                host: {\n                    class: 'datatable-footer'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, { selectedCount: [{\n            type: Input\n        }], page: [{\n            type: Output\n        }], footerHeight: [{\n            type: Input\n        }], rowCount: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], pagerLeftArrowIcon: [{\n            type: Input\n        }], pagerRightArrowIcon: [{\n            type: Input\n        }], pagerPreviousIcon: [{\n            type: Input\n        }], pagerNextIcon: [{\n            type: Input\n        }], totalMessage: [{\n            type: Input\n        }], footerTemplate: [{\n            type: Input\n        }], selectedMessage: [{\n            type: Input\n        }] }); })();\n    return DataTableFooterComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerHeight;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.rowCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pageSize;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.offset;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.totalMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerTemplate;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.page;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTablePagerComponent = /** @class */ (function () {\n    function DataTablePagerComponent() {\n        this.change = new EventEmitter();\n        this._count = 0;\n        this._page = 1;\n        this._size = 0;\n    }\n    Object.defineProperty(DataTablePagerComponent.prototype, \"size\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._size;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._size = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"count\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._count;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._count = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"page\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._page;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._page = val;\n            this.pages = this.calcPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTablePagerComponent.prototype, \"totalPages\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n            return Math.max(count || 0, 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.canPrevious = /**\n     * @return {?}\n     */\n    function () {\n        return this.page > 1;\n    };\n    /**\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.canNext = /**\n     * @return {?}\n     */\n    function () {\n        return this.page < this.totalPages;\n    };\n    /**\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.prevPage = /**\n     * @return {?}\n     */\n    function () {\n        this.selectPage(this.page - 1);\n    };\n    /**\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.nextPage = /**\n     * @return {?}\n     */\n    function () {\n        this.selectPage(this.page + 1);\n    };\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.selectPage = /**\n     * @param {?} page\n     * @return {?}\n     */\n    function (page) {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n            this.page = page;\n            this.change.emit({\n                page: page\n            });\n        }\n    };\n    /**\n     * @param {?=} page\n     * @return {?}\n     */\n    DataTablePagerComponent.prototype.calcPages = /**\n     * @param {?=} page\n     * @return {?}\n     */\n    function (page) {\n        /** @type {?} */\n        var pages = [];\n        /** @type {?} */\n        var startPage = 1;\n        /** @type {?} */\n        var endPage = this.totalPages;\n        /** @type {?} */\n        var maxSize = 5;\n        /** @type {?} */\n        var isMaxSized = maxSize < this.totalPages;\n        page = page || this.page;\n        if (isMaxSized) {\n            startPage = page - Math.floor(maxSize / 2);\n            endPage = page + Math.floor(maxSize / 2);\n            if (startPage < 1) {\n                startPage = 1;\n                endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n            }\n            else if (endPage > this.totalPages) {\n                startPage = Math.max(this.totalPages - maxSize + 1, 1);\n                endPage = this.totalPages;\n            }\n        }\n        for (var num = startPage; num <= endPage; num++) {\n            pages.push({\n                number: num,\n                text: (/** @type {?} */ (((/** @type {?} */ (num)))))\n            });\n        }\n        return pages;\n    };\n    DataTablePagerComponent.propDecorators = {\n        pagerLeftArrowIcon: [{ type: Input }],\n        pagerRightArrowIcon: [{ type: Input }],\n        pagerPreviousIcon: [{ type: Input }],\n        pagerNextIcon: [{ type: Input }],\n        size: [{ type: Input }],\n        count: [{ type: Input }],\n        page: [{ type: Input }],\n        change: [{ type: Output }]\n    };\nDataTablePagerComponent.ɵfac = function DataTablePagerComponent_Factory(t) { return new (t || DataTablePagerComponent)(); };\nDataTablePagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTablePagerComponent, selectors: [[\"datatable-pager\"]], hostAttrs: [1, \"datatable-pager\"], inputs: { size: \"size\", count: \"count\", page: \"page\", pagerLeftArrowIcon: \"pagerLeftArrowIcon\", pagerRightArrowIcon: \"pagerRightArrowIcon\", pagerPreviousIcon: \"pagerPreviousIcon\", pagerNextIcon: \"pagerNextIcon\" }, outputs: { change: \"change\" }, decls: 14, vars: 21, consts: [[1, \"pager\"], [\"role\", \"button\", \"aria-label\", \"go to first page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to previous page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"class\", \"pages\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"button\", \"aria-label\", \"go to next page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", \"aria-label\", \"go to last page\", \"href\", \"javascript:void(0)\", 3, \"click\"], [\"role\", \"button\", 1, \"pages\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]], template: function DataTablePagerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"li\");\n        ɵngcc0.ɵɵelementStart(2, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_2_listener() { return ctx.selectPage(1); });\n        ɵngcc0.ɵɵelement(3, \"i\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"li\");\n        ɵngcc0.ɵɵelementStart(5, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_5_listener() { return ctx.prevPage(); });\n        ɵngcc0.ɵɵelement(6, \"i\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, DataTablePagerComponent_li_7_Template, 3, 4, \"li\", 3);\n        ɵngcc0.ɵɵelementStart(8, \"li\");\n        ɵngcc0.ɵɵelementStart(9, \"a\", 4);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_9_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵelement(10, \"i\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"li\");\n        ɵngcc0.ɵɵelementStart(12, \"a\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function DataTablePagerComponent_Template_a_click_12_listener() { return ctx.selectPage(ctx.totalPages); });\n        ɵngcc0.ɵɵelement(13, \"i\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.pagerPreviousIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canPrevious());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.pagerLeftArrowIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.pagerRightArrowIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", !ctx.canNext());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.pagerNextIcon);\n    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablePagerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-pager',\n                template: \"\\n    <ul class=\\\"pager\\\">\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to first page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(1)\\\">\\n          <i class=\\\"{{ pagerPreviousIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canPrevious()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to previous page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"prevPage()\\\">\\n          <i class=\\\"{{ pagerLeftArrowIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li\\n        role=\\\"button\\\"\\n        [attr.aria-label]=\\\"'page ' + pg.number\\\"\\n        class=\\\"pages\\\"\\n        *ngFor=\\\"let pg of pages\\\"\\n        [class.active]=\\\"pg.number === page\\\"\\n      >\\n        <a href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(pg.number)\\\">\\n          {{ pg.text }}\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to next page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"nextPage()\\\">\\n          <i class=\\\"{{ pagerRightArrowIcon }}\\\"></i>\\n        </a>\\n      </li>\\n      <li [class.disabled]=\\\"!canNext()\\\">\\n        <a role=\\\"button\\\" aria-label=\\\"go to last page\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"selectPage(totalPages)\\\">\\n          <i class=\\\"{{ pagerNextIcon }}\\\"></i>\\n        </a>\\n      </li>\\n    </ul>\\n  \",\n                host: {\n                    class: 'datatable-pager'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output\n        }], size: [{\n            type: Input\n        }], count: [{\n            type: Input\n        }], page: [{\n            type: Input\n        }], pagerLeftArrowIcon: [{\n            type: Input\n        }], pagerRightArrowIcon: [{\n            type: Input\n        }], pagerPreviousIcon: [{\n            type: Input\n        }], pagerNextIcon: [{\n            type: Input\n        }] }); })();\n    return DataTablePagerComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.change;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._count;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._page;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._size;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ProgressBarComponent = /** @class */ (function () {\n    function ProgressBarComponent() {\n    }\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) { return new (t || ProgressBarComponent)(); };\nProgressBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressBarComponent, selectors: [[\"datatable-progress\"]], decls: 3, vars: 0, consts: [[\"role\", \"progressbar\", 1, \"progress-linear\"], [1, \"container\"], [1, \"bar\"]], template: function ProgressBarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-progress',\n                template: \"\\n    <div class=\\\"progress-linear\\\" role=\\\"progressbar\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"bar\\\"></div>\\n      </div>\\n    </div>\\n  \",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, null); })();\n    return ProgressBarComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar Keys = {\n    up: 38,\n    down: 40,\n    return: 13,\n    escape: 27,\n    left: 37,\n    right: 39,\n};\nKeys[Keys.up] = 'up';\nKeys[Keys.down] = 'down';\nKeys[Keys.return] = 'return';\nKeys[Keys.escape] = 'escape';\nKeys[Keys.left] = 'left';\nKeys[Keys.right] = 'right';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableBodyRowComponent = /** @class */ (function () {\n    function DataTableBodyRowComponent(differs, scrollbarHelper, cd, element) {\n        this.differs = differs;\n        this.scrollbarHelper = scrollbarHelper;\n        this.cd = cd;\n        this.treeStatus = 'collapsed';\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this._groupStyles = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this._element = element.nativeElement;\n        this._rowDiffer = differs.find({}).create();\n    }\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"columns\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._columns;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._columns = val;\n            this.recalculateColumns(val);\n            this.buildStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"innerWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._innerWidth;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            if (this._columns) {\n                /** @type {?} */\n                var colByPin = columnsByPin(this._columns);\n                this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n            }\n            this._innerWidth = val;\n            this.recalculateColumns();\n            this.buildStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"offsetX\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._offsetX;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._offsetX = val;\n            this.buildStylesByGroup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"cssClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var e_1, _a;\n            /** @type {?} */\n            var cls = 'datatable-body-row';\n            if (this.isSelected) {\n                cls += ' active';\n            }\n            if (this.rowIndex % 2 !== 0) {\n                cls += ' datatable-row-odd';\n            }\n            if (this.rowIndex % 2 === 0) {\n                cls += ' datatable-row-even';\n            }\n            if (this.rowClass) {\n                /** @type {?} */\n                var res = this.rowClass(this.row);\n                if (typeof res === 'string') {\n                    cls += \" \" + res;\n                }\n                else if (typeof res === 'object') {\n                    /** @type {?} */\n                    var keys = Object.keys(res);\n                    try {\n                        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                            var k = keys_1_1.value;\n                            if (res[k] === true) {\n                                cls += \" \" + k;\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyRowComponent.prototype, \"columnsTotalWidths\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._columnGroupWidths.total;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._rowDiffer.diff(this.row)) {\n            this.cd.markForCheck();\n        }\n    };\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.trackByGroups = /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    function (index, colGroup) {\n        return colGroup.type;\n    };\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.columnTrackingFn = /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    function (index, column) {\n        return column.$$id;\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.buildStylesByGroup = /**\n     * @return {?}\n     */\n    function () {\n        this._groupStyles.left = this.calcStylesByGroup('left');\n        this._groupStyles.center = this.calcStylesByGroup('center');\n        this._groupStyles.right = this.calcStylesByGroup('right');\n        this.cd.markForCheck();\n    };\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.calcStylesByGroup = /**\n     * @param {?} group\n     * @return {?}\n     */\n    function (group) {\n        /** @type {?} */\n        var widths = this._columnGroupWidths;\n        /** @type {?} */\n        var offsetX = this.offsetX;\n        /** @type {?} */\n        var styles = {\n            width: widths[group] + \"px\"\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            var bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            var totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            var offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            var offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    };\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.onActivate = /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    function (event, index) {\n        event.cellIndex = index;\n        event.rowElement = this._element;\n        this.activate.emit(event);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.onKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var isTargetRow = event.target === this._element;\n        /** @type {?} */\n        var isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetRow) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event: event,\n                row: this.row,\n                rowElement: this._element\n            });\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.onMouseenter = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.activate.emit({\n            type: 'mouseenter',\n            event: event,\n            row: this.row,\n            rowElement: this._element\n        });\n    };\n    /**\n     * @param {?=} val\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.recalculateColumns = /**\n     * @param {?=} val\n     * @return {?}\n     */\n    function (val) {\n        if (val === void 0) { val = this.columns; }\n        this._columns = val;\n        /** @type {?} */\n        var colsByPin = columnsByPin(this._columns);\n        this._columnsByPin = columnsByPinArr(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyRowComponent.prototype.onTreeAction = /**\n     * @return {?}\n     */\n    function () {\n        this.treeAction.emit();\n    };\n    /** @nocollapse */\n    DataTableBodyRowComponent.ctorParameters = function () { return [\n        { type: KeyValueDiffers },\n        { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n        { type: ChangeDetectorRef },\n        { type: ElementRef }\n    ]; };\n    DataTableBodyRowComponent.propDecorators = {\n        columns: [{ type: Input }],\n        innerWidth: [{ type: Input }],\n        expanded: [{ type: Input }],\n        rowClass: [{ type: Input }],\n        row: [{ type: Input }],\n        group: [{ type: Input }],\n        isSelected: [{ type: Input }],\n        rowIndex: [{ type: Input }],\n        displayCheck: [{ type: Input }],\n        treeStatus: [{ type: Input }],\n        offsetX: [{ type: Input }],\n        cssClass: [{ type: HostBinding, args: ['class',] }],\n        rowHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n        columnsTotalWidths: [{ type: HostBinding, args: ['style.width.px',] }],\n        activate: [{ type: Output }],\n        treeAction: [{ type: Output }],\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n        onMouseenter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }]\n    };\nDataTableBodyRowComponent.ɵfac = function DataTableBodyRowComponent_Factory(t) { return new (t || DataTableBodyRowComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ScrollbarHelper, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableBodyRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableBodyRowComponent, selectors: [[\"datatable-body-row\"]], hostVars: 6, hostBindings: function DataTableBodyRowComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function DataTableBodyRowComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"mouseenter\", function DataTableBodyRowComponent_mouseenter_HostBindingHandler($event) { return ctx.onMouseenter($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClass);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.columnsTotalWidths, \"px\")(\"height\", ctx.rowHeight, \"px\");\n    } }, inputs: { treeStatus: \"treeStatus\", columns: \"columns\", innerWidth: \"innerWidth\", offsetX: \"offsetX\", expanded: \"expanded\", rowClass: \"rowClass\", row: \"row\", group: \"group\", isSelected: \"isSelected\", rowIndex: \"rowIndex\", displayCheck: \"displayCheck\", rowHeight: \"rowHeight\" }, outputs: { activate: \"activate\", treeAction: \"treeAction\" }, decls: 1, vars: 2, consts: [[3, \"class\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngStyle\"], [\"tabindex\", \"-1\", 3, \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\", \"activate\", \"treeAction\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"tabindex\", \"-1\", 3, \"row\", \"group\", \"expanded\", \"isSelected\", \"rowIndex\", \"column\", \"rowHeight\", \"displayCheck\", \"treeStatus\", \"activate\", \"treeAction\"]], template: function DataTableBodyRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DataTableBodyRowComponent_div_0_Template, 2, 6, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._columnsByPin)(\"ngForTrackBy\", ctx.trackByGroups);\n    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgStyle, DataTableBodyCellComponent]; }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableBodyRowComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-body-row',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: \"\\n    <div\\n      *ngFor=\\\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\\\"\\n      class=\\\"datatable-row-{{ colGroup.type }} datatable-row-group\\\"\\n      [ngStyle]=\\\"_groupStyles[colGroup.type]\\\"\\n    >\\n      <datatable-body-cell\\n        *ngFor=\\\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\\\"\\n        tabindex=\\\"-1\\\"\\n        [row]=\\\"row\\\"\\n        [group]=\\\"group\\\"\\n        [expanded]=\\\"expanded\\\"\\n        [isSelected]=\\\"isSelected\\\"\\n        [rowIndex]=\\\"rowIndex\\\"\\n        [column]=\\\"column\\\"\\n        [rowHeight]=\\\"rowHeight\\\"\\n        [displayCheck]=\\\"displayCheck\\\"\\n        [treeStatus]=\\\"treeStatus\\\"\\n        (activate)=\\\"onActivate($event, ii)\\\"\\n        (treeAction)=\\\"onTreeAction()\\\"\\n      >\\n      </datatable-body-cell>\\n    </div>\\n  \"\n            }]\n    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }, { type: ScrollbarHelper, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { treeStatus: [{\n            type: Input\n        }], activate: [{\n            type: Output\n        }], treeAction: [{\n            type: Output\n        }], columns: [{\n            type: Input\n        }], innerWidth: [{\n            type: Input\n        }], offsetX: [{\n            type: Input\n        }], cssClass: [{\n            type: HostBinding,\n            args: ['class']\n        }], columnsTotalWidths: [{\n            type: HostBinding,\n            args: ['style.width.px']\n        }], onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], onMouseenter: [{\n            type: HostListener,\n            args: ['mouseenter', ['$event']]\n        }], expanded: [{\n            type: Input\n        }], rowClass: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], isSelected: [{\n            type: Input\n        }], rowIndex: [{\n            type: Input\n        }], displayCheck: [{\n            type: Input\n        }], rowHeight: [{\n            type: HostBinding,\n            args: ['style.height.px']\n        }, {\n            type: Input\n        }] }); })();\n    return DataTableBodyRowComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.expanded;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.row;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.group;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.isSelected;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowIndex;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeStatus;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._element;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._groupStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype._rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableRowWrapperComponent = /** @class */ (function () {\n    function DataTableRowWrapperComponent(cd, differs) {\n        this.cd = cd;\n        this.differs = differs;\n        this.rowContextmenu = new EventEmitter(false);\n        this.groupContext = {\n            group: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this.rowContext = {\n            row: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this._expanded = false;\n        this.rowDiffer = differs.find({}).create();\n    }\n    Object.defineProperty(DataTableRowWrapperComponent.prototype, \"rowIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._rowIndex;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rowIndex = val;\n            this.rowContext.rowIndex = val;\n            this.groupContext.rowIndex = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableRowWrapperComponent.prototype, \"expanded\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._expanded;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._expanded = val;\n            this.groupContext.expanded = val;\n            this.rowContext.expanded = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DataTableRowWrapperComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.rowDiffer.diff(this.row)) {\n            this.rowContext.row = this.row;\n            this.groupContext.group = this.row;\n            this.cd.markForCheck();\n        }\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    DataTableRowWrapperComponent.prototype.onContextmenu = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        this.rowContextmenu.emit({ event: $event, row: this.row });\n    };\n    /**\n     * @return {?}\n     */\n    DataTableRowWrapperComponent.prototype.getGroupHeaderStyle = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var styles = {};\n        styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n        styles['backface-visibility'] = 'hidden';\n        styles['width'] = this.innerWidth;\n        return styles;\n    };\n    /** @nocollapse */\n    DataTableRowWrapperComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: KeyValueDiffers }\n    ]; };\n    DataTableRowWrapperComponent.propDecorators = {\n        innerWidth: [{ type: Input }],\n        rowDetail: [{ type: Input }],\n        groupHeader: [{ type: Input }],\n        offsetX: [{ type: Input }],\n        detailRowHeight: [{ type: Input }],\n        row: [{ type: Input }],\n        groupedRows: [{ type: Input }],\n        rowContextmenu: [{ type: Output }],\n        rowIndex: [{ type: Input }],\n        expanded: [{ type: Input }],\n        onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n    };\nDataTableRowWrapperComponent.ɵfac = function DataTableRowWrapperComponent_Factory(t) { return new (t || DataTableRowWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers)); };\nDataTableRowWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableRowWrapperComponent, selectors: [[\"datatable-row-wrapper\"]], hostAttrs: [1, \"datatable-row-wrapper\"], hostBindings: function DataTableRowWrapperComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"contextmenu\", function DataTableRowWrapperComponent_contextmenu_HostBindingHandler($event) { return ctx.onContextmenu($event); });\n    } }, inputs: { rowIndex: \"rowIndex\", expanded: \"expanded\", innerWidth: \"innerWidth\", rowDetail: \"rowDetail\", groupHeader: \"groupHeader\", offsetX: \"offsetX\", detailRowHeight: \"detailRowHeight\", row: \"row\", groupedRows: \"groupedRows\" }, outputs: { rowContextmenu: \"rowContextmenu\" }, ngContentSelectors: _c0, decls: 3, vars: 3, consts: [[\"class\", \"datatable-group-header\", 3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"datatable-row-detail\", 3, \"height\", 4, \"ngIf\"], [1, \"datatable-group-header\", 3, \"ngStyle\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"datatable-row-detail\"]], template: function DataTableRowWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, DataTableRowWrapperComponent_div_0_Template, 2, 2, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DataTableRowWrapperComponent_1_Template, 1, 0, undefined, 1);\n        ɵngcc0.ɵɵtemplate(2, DataTableRowWrapperComponent_div_2_Template, 2, 3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groupHeader && ctx.groupHeader.template && ctx.expanded || (!ctx.groupHeader || !ctx.groupHeader.template));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.rowDetail && ctx.rowDetail.template && ctx.expanded);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableRowWrapperComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-row-wrapper',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: \"\\n    <div *ngIf=\\\"groupHeader && groupHeader.template\\\" class=\\\"datatable-group-header\\\" [ngStyle]=\\\"getGroupHeaderStyle()\\\">\\n      <ng-template\\n        *ngIf=\\\"groupHeader && groupHeader.template\\\"\\n        [ngTemplateOutlet]=\\\"groupHeader.template\\\"\\n        [ngTemplateOutletContext]=\\\"groupContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n    <ng-content *ngIf=\\\"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\\\">\\n    </ng-content>\\n    <div\\n      *ngIf=\\\"rowDetail && rowDetail.template && expanded\\\"\\n      [style.height.px]=\\\"detailRowHeight\\\"\\n      class=\\\"datatable-row-detail\\\"\\n    >\\n      <ng-template\\n        *ngIf=\\\"rowDetail && rowDetail.template\\\"\\n        [ngTemplateOutlet]=\\\"rowDetail.template\\\"\\n        [ngTemplateOutletContext]=\\\"rowContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n  \",\n                host: {\n                    class: 'datatable-row-wrapper'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.KeyValueDiffers }]; }, { rowContextmenu: [{\n            type: Output\n        }], rowIndex: [{\n            type: Input\n        }], expanded: [{\n            type: Input\n        }], onContextmenu: [{\n            type: HostListener,\n            args: ['contextmenu', ['$event']]\n        }], innerWidth: [{\n            type: Input\n        }], rowDetail: [{\n            type: Input\n        }], groupHeader: [{\n            type: Input\n        }], offsetX: [{\n            type: Input\n        }], detailRowHeight: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], groupedRows: [{\n            type: Input\n        }] }); })();\n    return DataTableRowWrapperComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.detailRowHeight;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.row;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupContext;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DataTableBodyCellComponent = /** @class */ (function () {\n    function DataTableBodyCellComponent(element, cd) {\n        this.cd = cd;\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.cellContext = {\n            onCheckboxChangeFn: this.onCheckboxChangeFn,\n            activateFn: this.activateFn,\n            row: this.row,\n            group: this.group,\n            value: this.value,\n            column: this.column,\n            rowHeight: this.rowHeight,\n            isSelected: this.isSelected,\n            rowIndex: this.rowIndex,\n            treeStatus: this.treeStatus,\n            onTreeAction: this.onTreeAction.bind(this)\n        };\n        this._element = element.nativeElement;\n    }\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"group\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._group;\n        },\n        set: /**\n         * @param {?} group\n         * @return {?}\n         */\n        function (group) {\n            this._group = group;\n            this.cellContext.group = group;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"rowHeight\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._rowHeight;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rowHeight = val;\n            this.cellContext.rowHeight = val;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"isSelected\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isSelected;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._isSelected = val;\n            this.cellContext.isSelected = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"expanded\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._expanded;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._expanded = val;\n            this.cellContext.expanded = val;\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"rowIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._rowIndex;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._rowIndex = val;\n            this.cellContext.rowIndex = val;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"column\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._column;\n        },\n        set: /**\n         * @param {?} column\n         * @return {?}\n         */\n        function (column) {\n            this._column = column;\n            this.cellContext.column = column;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"row\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._row;\n        },\n        set: /**\n         * @param {?} row\n         * @return {?}\n         */\n        function (row) {\n            this._row = row;\n            this.cellContext.row = row;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"sorts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._sorts;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._sorts = val;\n            this.calcSortDir = this.calcSortDir(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"treeStatus\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._treeStatus;\n        },\n        set: /**\n         * @param {?} status\n         * @return {?}\n         */\n        function (status) {\n            if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n                this._treeStatus = 'collapsed';\n            }\n            else {\n                this._treeStatus = status;\n            }\n            this.cellContext.treeStatus = this._treeStatus;\n            this.checkValueUpdates();\n            this.cd.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"columnCssClasses\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var e_1, _a;\n            /** @type {?} */\n            var cls = 'datatable-body-cell';\n            if (this.column.cellClass) {\n                if (typeof this.column.cellClass === 'string') {\n                    cls += ' ' + this.column.cellClass;\n                }\n                else if (typeof this.column.cellClass === 'function') {\n                    /** @type {?} */\n                    var res = this.column.cellClass({\n                        row: this.row,\n                        group: this.group,\n                        column: this.column,\n                        value: this.value,\n                        rowHeight: this.rowHeight\n                    });\n                    if (typeof res === 'string') {\n                        cls += res;\n                    }\n                    else if (typeof res === 'object') {\n                        /** @type {?} */\n                        var keys = Object.keys(res);\n                        try {\n                            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                                var k = keys_1_1.value;\n                                if (res[k] === true) {\n                                    cls += \" \" + k;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                    }\n                }\n            }\n            if (!this.sortDir) {\n                cls += ' sort-active';\n            }\n            if (this.isFocused) {\n                cls += ' active';\n            }\n            if (this.sortDir === SortDirection.asc) {\n                cls += ' sort-asc';\n            }\n            if (this.sortDir === SortDirection.desc) {\n                cls += ' sort-desc';\n            }\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"width\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"minWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.minWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"maxWidth\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.column.maxWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"height\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var height = this.rowHeight;\n            if (isNaN(height)) {\n                return height;\n            }\n            return height + 'px';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        this.checkValueUpdates();\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.checkValueUpdates = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var value = '';\n        if (!this.row || !this.column) {\n            value = '';\n        }\n        else {\n            /** @type {?} */\n            var val = this.column.$$valueGetter(this.row, this.column.prop);\n            /** @type {?} */\n            var userPipe = this.column.pipe;\n            if (userPipe) {\n                value = userPipe.transform(val);\n            }\n            else if (value !== undefined) {\n                value = val;\n            }\n        }\n        if (this.value !== value) {\n            this.value = value;\n            this.cellContext.value = value;\n            this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n            this.cd.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onFocus = /**\n     * @return {?}\n     */\n    function () {\n        this.isFocused = true;\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this.isFocused = false;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.activate.emit({\n            type: 'click',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onDblClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onKeyDown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        /** @type {?} */\n        var isTargetCell = event.target === this._element;\n        /** @type {?} */\n        var isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event: event,\n                row: this.row,\n                group: this.group,\n                rowHeight: this.rowHeight,\n                column: this.column,\n                value: this.value,\n                cellElement: this._element\n            });\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onCheckboxChange = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event: event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element,\n            treeStatus: 'collapsed'\n        });\n    };\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.calcSortDir = /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    function (sorts) {\n        var _this = this;\n        if (!sorts) {\n            return;\n        }\n        /** @type {?} */\n        var sort = sorts.find((/**\n         * @param {?} s\n         * @return {?}\n         */\n        function (s) {\n            return s.prop === _this.column.prop;\n        }));\n        if (sort) {\n            return sort.dir;\n        }\n    };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.stripHtml = /**\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        if (!html.replace) {\n            return html;\n        }\n        return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    };\n    /**\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.onTreeAction = /**\n     * @return {?}\n     */\n    function () {\n        this.treeAction.emit(this.row);\n    };\n    /**\n     * @param {?} column\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableBodyCellComponent.prototype.calcLeftMargin = /**\n     * @param {?} column\n     * @param {?} row\n     * @return {?}\n     */\n    function (column, row) {\n        /** @type {?} */\n        var levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n        return column.isTreeColumn ? row.level * levelIndent : 0;\n    };\n    /** @nocollapse */\n    DataTableBodyCellComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef }\n    ]; };\n    DataTableBodyCellComponent.propDecorators = {\n        displayCheck: [{ type: Input }],\n        group: [{ type: Input }],\n        rowHeight: [{ type: Input }],\n        isSelected: [{ type: Input }],\n        expanded: [{ type: Input }],\n        rowIndex: [{ type: Input }],\n        column: [{ type: Input }],\n        row: [{ type: Input }],\n        sorts: [{ type: Input }],\n        treeStatus: [{ type: Input }],\n        activate: [{ type: Output }],\n        treeAction: [{ type: Output }],\n        cellTemplate: [{ type: ViewChild, args: ['cellTemplate', { read: ViewContainerRef, static: true },] }],\n        columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n        width: [{ type: HostBinding, args: ['style.width.px',] }],\n        minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n        maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n        height: [{ type: HostBinding, args: ['style.height',] }],\n        onFocus: [{ type: HostListener, args: ['focus',] }],\n        onBlur: [{ type: HostListener, args: ['blur',] }],\n        onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n        onDblClick: [{ type: HostListener, args: ['dblclick', ['$event'],] }],\n        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n    };\nDataTableBodyCellComponent.ɵfac = function DataTableBodyCellComponent_Factory(t) { return new (t || DataTableBodyCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDataTableBodyCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableBodyCellComponent, selectors: [[\"datatable-body-cell\"]], viewQuery: function DataTableBodyCellComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c3, true, ViewContainerRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n    } }, hostVars: 10, hostBindings: function DataTableBodyCellComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function DataTableBodyCellComponent_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function DataTableBodyCellComponent_blur_HostBindingHandler() { return ctx.onBlur(); })(\"click\", function DataTableBodyCellComponent_click_HostBindingHandler($event) { return ctx.onClick($event); })(\"dblclick\", function DataTableBodyCellComponent_dblclick_HostBindingHandler($event) { return ctx.onDblClick($event); })(\"keydown\", function DataTableBodyCellComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.columnCssClasses);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"min-width\", ctx.minWidth, \"px\")(\"max-width\", ctx.maxWidth, \"px\")(\"height\", ctx.height);\n    } }, inputs: { group: \"group\", rowHeight: \"rowHeight\", isSelected: \"isSelected\", expanded: \"expanded\", rowIndex: \"rowIndex\", column: \"column\", row: \"row\", sorts: \"sorts\", treeStatus: \"treeStatus\", displayCheck: \"displayCheck\" }, outputs: { activate: \"activate\", treeAction: \"treeAction\" }, decls: 5, vars: 6, consts: [[1, \"datatable-body-cell-label\"], [\"class\", \"datatable-checkbox\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"title\", \"innerHTML\", 4, \"ngIf\"], [1, \"datatable-checkbox\"], [\"type\", \"checkbox\", 3, \"checked\", \"click\"], [\"class\", \"datatable-tree-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"datatable-tree-button\", 3, \"disabled\", \"click\"], [\"class\", \"icon datatable-icon-collapse\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-up\", 4, \"ngIf\"], [\"class\", \"icon datatable-icon-down\", 4, \"ngIf\"], [1, \"icon\", \"datatable-icon-collapse\"], [1, \"icon\", \"datatable-icon-up\"], [1, \"icon\", \"datatable-icon-down\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"title\", \"innerHTML\"], [\"cellTemplate\", \"\"]], template: function DataTableBodyCellComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DataTableBodyCellComponent_label_1_Template, 2, 1, \"label\", 1);\n        ɵngcc0.ɵɵtemplate(2, DataTableBodyCellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, DataTableBodyCellComponent_span_3_Template, 1, 2, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(4, DataTableBodyCellComponent_4_Template, 2, 2, undefined, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx.calcLeftMargin(ctx.column, ctx.row), \"px\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.checkboxable && (!ctx.displayCheck || ctx.displayCheck(ctx.row, ctx.column, ctx.value)));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isTreeColumn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.cellTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.cellTemplate);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableBodyCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-body-cell',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: \"\\n    <div class=\\\"datatable-body-cell-label\\\" [style.margin-left.px]=\\\"calcLeftMargin(column, row)\\\">\\n      <label\\n        *ngIf=\\\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\\\"\\n        class=\\\"datatable-checkbox\\\"\\n      >\\n        <input type=\\\"checkbox\\\" [checked]=\\\"isSelected\\\" (click)=\\\"onCheckboxChange($event)\\\" />\\n      </label>\\n      <ng-container *ngIf=\\\"column.isTreeColumn\\\">\\n        <button\\n          *ngIf=\\\"!column.treeToggleTemplate\\\"\\n          class=\\\"datatable-tree-button\\\"\\n          [disabled]=\\\"treeStatus === 'disabled'\\\"\\n          (click)=\\\"onTreeAction()\\\"\\n        >\\n          <span>\\n            <i *ngIf=\\\"treeStatus === 'loading'\\\" class=\\\"icon datatable-icon-collapse\\\"></i>\\n            <i *ngIf=\\\"treeStatus === 'collapsed'\\\" class=\\\"icon datatable-icon-up\\\"></i>\\n            <i *ngIf=\\\"treeStatus === 'expanded' || treeStatus === 'disabled'\\\" class=\\\"icon datatable-icon-down\\\"></i>\\n          </span>\\n        </button>\\n        <ng-template\\n          *ngIf=\\\"column.treeToggleTemplate\\\"\\n          [ngTemplateOutlet]=\\\"column.treeToggleTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{ cellContext: cellContext }\\\"\\n        >\\n        </ng-template>\\n      </ng-container>\\n\\n      <span *ngIf=\\\"!column.cellTemplate\\\" [title]=\\\"sanitizedValue\\\" [innerHTML]=\\\"value\\\"> </span>\\n      <ng-template\\n        #cellTemplate\\n        *ngIf=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"cellContext\\\"\\n      >\\n      </ng-template>\\n    </div>\\n  \"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { activate: [{\n            type: Output\n        }], treeAction: [{\n            type: Output\n        }], group: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], isSelected: [{\n            type: Input\n        }], expanded: [{\n            type: Input\n        }], rowIndex: [{\n            type: Input\n        }], column: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], sorts: [{\n            type: Input\n        }], treeStatus: [{\n            type: Input\n        }], columnCssClasses: [{\n            type: HostBinding,\n            args: ['class']\n        }], width: [{\n            type: HostBinding,\n            args: ['style.width.px']\n        }], minWidth: [{\n            type: HostBinding,\n            args: ['style.minWidth.px']\n        }], maxWidth: [{\n            type: HostBinding,\n            args: ['style.maxWidth.px']\n        }], height: [{\n            type: HostBinding,\n            args: ['style.height']\n        }], onFocus: [{\n            type: HostListener,\n            args: ['focus']\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], onDblClick: [{\n            type: HostListener,\n            args: ['dblclick', ['$event']]\n        }], onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], displayCheck: [{\n            type: Input\n        }], cellTemplate: [{\n            type: ViewChild,\n            args: ['cellTemplate', { read: ViewContainerRef, static: true }]\n        }] }); })();\n    return DataTableBodyCellComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellTemplate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sanitizedValue;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.value;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.isFocused;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.onCheckboxChangeFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activateFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._isSelected;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._row;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._group;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._treeStatus;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selected\n * @param {?} row\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRows(selected, row, comparefn) {\n    /** @type {?} */\n    var selectedIndex = comparefn(row, selected);\n    if (selectedIndex > -1) {\n        selected.splice(selectedIndex, 1);\n    }\n    else {\n        selected.push(row);\n    }\n    return selected;\n}\n/**\n * @param {?} selected\n * @param {?} rows\n * @param {?} index\n * @param {?} prevIndex\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n    /** @type {?} */\n    var reverse = index < prevIndex;\n    for (var i = 0; i < rows.length; i++) {\n        /** @type {?} */\n        var row = rows[i];\n        /** @type {?} */\n        var greater = i >= prevIndex && i <= index;\n        /** @type {?} */\n        var lesser = i <= prevIndex && i >= index;\n        /** @type {?} */\n        var range = { start: 0, end: 0 };\n        if (reverse) {\n            range = {\n                start: index,\n                end: prevIndex\n            };\n        }\n        else {\n            range = {\n                start: prevIndex,\n                end: index + 1\n            };\n        }\n        if ((reverse && lesser) || (!reverse && greater)) {\n            // if in the positive range to be added to `selected`, and\n            // not already in the selected array, add it\n            if (i >= range.start && i <= range.end) {\n                selected.push(row);\n            }\n        }\n    }\n    return selected;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Model() { }\nif (false) {\n    /** @type {?} */\n    Model.prototype.type;\n    /** @type {?} */\n    Model.prototype.event;\n    /** @type {?} */\n    Model.prototype.row;\n    /** @type {?} */\n    Model.prototype.rowElement;\n    /** @type {?} */\n    Model.prototype.cellElement;\n    /** @type {?} */\n    Model.prototype.cellIndex;\n}\nvar DataTableSelectionComponent = /** @class */ (function () {\n    function DataTableSelectionComponent() {\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.selectRow = /**\n     * @param {?} event\n     * @param {?} index\n     * @param {?} row\n     * @return {?}\n     */\n    function (event, index, row) {\n        var _a;\n        if (!this.selectEnabled)\n            return;\n        /** @type {?} */\n        var chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        var multi = this.selectionType === SelectionType.multi;\n        /** @type {?} */\n        var multiClick = this.selectionType === SelectionType.multiClick;\n        /** @type {?} */\n        var selected = [];\n        if (multi || chkbox || multiClick) {\n            if (event.shiftKey) {\n                selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n            }\n            else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n                selected = selectRows(__spread(this.selected), row, this.getRowSelectedIdx.bind(this));\n            }\n            else {\n                selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n            }\n        }\n        else {\n            selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n        }\n        if (typeof this.selectCheck === 'function') {\n            selected = selected.filter(this.selectCheck.bind(this));\n        }\n        this.selected.splice(0, this.selected.length);\n        (_a = this.selected).push.apply(_a, __spread(selected));\n        this.prevIndex = index;\n        this.select.emit({\n            selected: selected\n        });\n    };\n    /**\n     * @param {?} model\n     * @param {?} index\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.onActivate = /**\n     * @param {?} model\n     * @param {?} index\n     * @return {?}\n     */\n    function (model, index) {\n        var type = model.type, event = model.event, row = model.row;\n        /** @type {?} */\n        var chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        var select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n        if (select) {\n            this.selectRow(event, index, row);\n        }\n        else if (type === 'keydown') {\n            if (((/** @type {?} */ (event))).keyCode === Keys.return) {\n                this.selectRow(event, index, row);\n            }\n            else {\n                this.onKeyboardFocus(model);\n            }\n        }\n        this.activate.emit(model);\n    };\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.onKeyboardFocus = /**\n     * @param {?} model\n     * @return {?}\n     */\n    function (model) {\n        var keyCode = (/** @type {?} */ (model.event)).keyCode;\n        /** @type {?} */\n        var shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n        if (shouldFocus) {\n            /** @type {?} */\n            var isCellSelection = this.selectionType === SelectionType.cell;\n            if (!model.cellElement || !isCellSelection) {\n                this.focusRow(model.rowElement, keyCode);\n            }\n            else if (isCellSelection) {\n                this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.focusRow = /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    function (rowElement, keyCode) {\n        /** @type {?} */\n        var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n        if (nextRowElement)\n            nextRowElement.focus();\n    };\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.getPrevNextRow = /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    function (rowElement, keyCode) {\n        /** @type {?} */\n        var parentElement = rowElement.parentElement;\n        if (parentElement) {\n            /** @type {?} */\n            var focusElement = void 0;\n            if (keyCode === Keys.up) {\n                focusElement = parentElement.previousElementSibling;\n            }\n            else if (keyCode === Keys.down) {\n                focusElement = parentElement.nextElementSibling;\n            }\n            if (focusElement && focusElement.children.length) {\n                return focusElement.children[0];\n            }\n        }\n    };\n    /**\n     * @param {?} cellElement\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @param {?} cellIndex\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.focusCell = /**\n     * @param {?} cellElement\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @param {?} cellIndex\n     * @return {?}\n     */\n    function (cellElement, rowElement, keyCode, cellIndex) {\n        /** @type {?} */\n        var nextCellElement;\n        if (keyCode === Keys.left) {\n            nextCellElement = cellElement.previousElementSibling;\n        }\n        else if (keyCode === Keys.right) {\n            nextCellElement = cellElement.nextElementSibling;\n        }\n        else if (keyCode === Keys.up || keyCode === Keys.down) {\n            /** @type {?} */\n            var nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n            if (nextRowElement) {\n                /** @type {?} */\n                var children = nextRowElement.getElementsByClassName('datatable-body-cell');\n                if (children.length)\n                    nextCellElement = children[cellIndex];\n            }\n        }\n        if (nextCellElement)\n            nextCellElement.focus();\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.getRowSelected = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        return this.getRowSelectedIdx(row, this.selected) > -1;\n    };\n    /**\n     * @param {?} row\n     * @param {?} selected\n     * @return {?}\n     */\n    DataTableSelectionComponent.prototype.getRowSelectedIdx = /**\n     * @param {?} row\n     * @param {?} selected\n     * @return {?}\n     */\n    function (row, selected) {\n        var _this = this;\n        if (!selected || !selected.length)\n            return -1;\n        /** @type {?} */\n        var rowId = this.rowIdentity(row);\n        return selected.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        function (r) {\n            /** @type {?} */\n            var id = _this.rowIdentity(r);\n            return id === rowId;\n        }));\n    };\n    DataTableSelectionComponent.propDecorators = {\n        rows: [{ type: Input }],\n        selected: [{ type: Input }],\n        selectEnabled: [{ type: Input }],\n        selectionType: [{ type: Input }],\n        rowIdentity: [{ type: Input }],\n        selectCheck: [{ type: Input }],\n        activate: [{ type: Output }],\n        select: [{ type: Output }]\n    };\nDataTableSelectionComponent.ɵfac = function DataTableSelectionComponent_Factory(t) { return new (t || DataTableSelectionComponent)(); };\nDataTableSelectionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableSelectionComponent, selectors: [[\"datatable-selection\"]], inputs: { rows: \"rows\", selected: \"selected\", selectEnabled: \"selectEnabled\", selectionType: \"selectionType\", rowIdentity: \"rowIdentity\", selectCheck: \"selectCheck\" }, outputs: { activate: \"activate\", select: \"select\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function DataTableSelectionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableSelectionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-selection',\n                template: \"\\n    <ng-content></ng-content>\\n  \",\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return []; }, { activate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], rows: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], selectEnabled: [{\n            type: Input\n        }], selectionType: [{\n            type: Input\n        }], rowIdentity: [{\n            type: Input\n        }], selectCheck: [{\n            type: Input\n        }] }); })();\n    return DataTableSelectionComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selected;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectEnabled;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.activate;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.select;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.prevIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ISummaryColumn() { }\nif (false) {\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryFunc;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryTemplate;\n    /** @type {?} */\n    ISummaryColumn.prototype.prop;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.pipe;\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction defaultSumFunc(cells) {\n    /** @type {?} */\n    var cellsWithValues = cells.filter((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    function (cell) { return !!cell; }));\n    if (!cellsWithValues.length) {\n        return null;\n    }\n    if (cellsWithValues.some((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    function (cell) { return typeof cell !== 'number'; }))) {\n        return null;\n    }\n    return cellsWithValues.reduce((/**\n     * @param {?} res\n     * @param {?} cell\n     * @return {?}\n     */\n    function (res, cell) { return res + cell; }));\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction noopSumFunc(cells) {\n    return null;\n}\nvar DataTableSummaryRowComponent = /** @class */ (function () {\n    function DataTableSummaryRowComponent() {\n        this.summaryRow = {};\n    }\n    /**\n     * @return {?}\n     */\n    DataTableSummaryRowComponent.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.columns || !this.rows) {\n            return;\n        }\n        this.updateInternalColumns();\n        this.updateValues();\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DataTableSummaryRowComponent.prototype.updateInternalColumns = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._internalColumns = this.columns.map((/**\n         * @param {?} col\n         * @return {?}\n         */\n        function (col) { return (__assign({}, col, { cellTemplate: col.summaryTemplate })); }));\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    DataTableSummaryRowComponent.prototype.updateValues = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.summaryRow = {};\n        this.columns\n            .filter((/**\n         * @param {?} col\n         * @return {?}\n         */\n        function (col) { return !col.summaryTemplate; }))\n            .forEach((/**\n         * @param {?} col\n         * @return {?}\n         */\n        function (col) {\n            /** @type {?} */\n            var cellsFromSingleColumn = _this.rows.map((/**\n             * @param {?} row\n             * @return {?}\n             */\n            function (row) { return row[col.prop]; }));\n            /** @type {?} */\n            var sumFunc = _this.getSummaryFunction(col);\n            _this.summaryRow[col.prop] = col.pipe\n                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n                : sumFunc(cellsFromSingleColumn);\n        }));\n    };\n    /**\n     * @private\n     * @param {?} column\n     * @return {?}\n     */\n    DataTableSummaryRowComponent.prototype.getSummaryFunction = /**\n     * @private\n     * @param {?} column\n     * @return {?}\n     */\n    function (column) {\n        if (column.summaryFunc === undefined) {\n            return defaultSumFunc;\n        }\n        else if (column.summaryFunc === null) {\n            return noopSumFunc;\n        }\n        else {\n            return column.summaryFunc;\n        }\n    };\n    DataTableSummaryRowComponent.propDecorators = {\n        rows: [{ type: Input }],\n        columns: [{ type: Input }],\n        rowHeight: [{ type: Input }],\n        offsetX: [{ type: Input }],\n        innerWidth: [{ type: Input }]\n    };\nDataTableSummaryRowComponent.ɵfac = function DataTableSummaryRowComponent_Factory(t) { return new (t || DataTableSummaryRowComponent)(); };\nDataTableSummaryRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DataTableSummaryRowComponent, selectors: [[\"datatable-summary-row\"]], hostAttrs: [1, \"datatable-summary-row\"], inputs: { rows: \"rows\", columns: \"columns\", rowHeight: \"rowHeight\", offsetX: \"offsetX\", innerWidth: \"innerWidth\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\", 4, \"ngIf\"], [\"tabindex\", \"-1\", 3, \"innerWidth\", \"offsetX\", \"columns\", \"rowHeight\", \"row\", \"rowIndex\"]], template: function DataTableSummaryRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DataTableSummaryRowComponent_datatable_body_row_0_Template, 1, 6, \"datatable-body-row\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.summaryRow && ctx._internalColumns);\n    } }, directives: [ɵngcc1.NgIf, DataTableBodyRowComponent], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableSummaryRowComponent, [{\n        type: Component,\n        args: [{\n                selector: 'datatable-summary-row',\n                template: \"\\n    <datatable-body-row\\n      *ngIf=\\\"summaryRow && _internalColumns\\\"\\n      tabindex=\\\"-1\\\"\\n      [innerWidth]=\\\"innerWidth\\\"\\n      [offsetX]=\\\"offsetX\\\"\\n      [columns]=\\\"_internalColumns\\\"\\n      [rowHeight]=\\\"rowHeight\\\"\\n      [row]=\\\"summaryRow\\\"\\n      [rowIndex]=\\\"-1\\\"\\n    >\\n    </datatable-body-row>\\n  \",\n                host: {\n                    class: 'datatable-summary-row'\n                }\n            }]\n    }], function () { return []; }, { rows: [{\n            type: Input\n        }], columns: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], offsetX: [{\n            type: Input\n        }], innerWidth: [{\n            type: Input\n        }] }); })();\n    return DataTableSummaryRowComponent;\n}());\nif (false) {\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.columns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype._internalColumns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.summaryRow;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxDatatableModule = /** @class */ (function () {\n    function NgxDatatableModule() {\n    }\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param configuration\n     */\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param {?} configuration\n     * @return {?}\n     */\n    NgxDatatableModule.forRoot = /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param {?} configuration\n     * @return {?}\n     */\n    function (configuration) {\n        return {\n            ngModule: NgxDatatableModule,\n            providers: [{ provide: 'configuration', useValue: configuration }]\n        };\n    };\nNgxDatatableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxDatatableModule });\nNgxDatatableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxDatatableModule_Factory(t) { return new (t || NgxDatatableModule)(); }, providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDatatableModule, { declarations: function () { return [DataTableFooterTemplateDirective, VisibilityDirective, DraggableDirective, ResizeableDirective, OrderableDirective, LongPressDirective, ScrollerComponent, DatatableComponent, DataTableColumnDirective, DataTableHeaderComponent, DataTableHeaderCellComponent, DataTableBodyComponent, DataTableFooterComponent, DataTablePagerComponent, ProgressBarComponent, DataTableBodyRowComponent, DataTableRowWrapperComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableBodyCellComponent, DataTableSelectionComponent, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DatatableFooterDirective, DatatableGroupHeaderTemplateDirective, DataTableSummaryRowComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DatatableComponent, DatatableRowDetailDirective, DatatableGroupHeaderDirective, DatatableRowDetailTemplateDirective, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableFooterTemplateDirective, DatatableFooterDirective, DataTablePagerComponent, DatatableGroupHeaderTemplateDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxDatatableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n                declarations: [\n                    DataTableFooterTemplateDirective,\n                    VisibilityDirective,\n                    DraggableDirective,\n                    ResizeableDirective,\n                    OrderableDirective,\n                    LongPressDirective,\n                    ScrollerComponent,\n                    DatatableComponent,\n                    DataTableColumnDirective,\n                    DataTableHeaderComponent,\n                    DataTableHeaderCellComponent,\n                    DataTableBodyComponent,\n                    DataTableFooterComponent,\n                    DataTablePagerComponent,\n                    ProgressBarComponent,\n                    DataTableBodyRowComponent,\n                    DataTableRowWrapperComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableBodyCellComponent,\n                    DataTableSelectionComponent,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DatatableFooterDirective,\n                    DatatableGroupHeaderTemplateDirective,\n                    DataTableSummaryRowComponent\n                ],\n                exports: [\n                    DatatableComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableColumnDirective,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DataTableFooterTemplateDirective,\n                    DatatableFooterDirective,\n                    DataTablePagerComponent,\n                    DatatableGroupHeaderTemplateDirective\n                ]\n            }]\n    }], function () { return []; }, null); })();\n    return NgxDatatableModule;\n}());\n/**\n * Interface definition for INgxDatatableConfig global configuration\n * @record\n */\nfunction INgxDatatableConfig() { }\nif (false) {\n    /** @type {?} */\n    INgxDatatableConfig.prototype.messages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar ClickType = {\n    single: 'single',\n    double: 'double',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column Type\n * @record\n */\nfunction TableColumn() { }\nif (false) {\n    /**\n     * Internal unique id\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$id;\n    /**\n     * Internal for column width distributions\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$oldWidth;\n    /**\n     * Internal for setColumnDefaults\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$valueGetter;\n    /**\n     * Determines if column is checkbox\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.checkboxable;\n    /**\n     * Determines if the column is frozen to the left\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenLeft;\n    /**\n     * Determines if the column is frozen to the right\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenRight;\n    /**\n     * The grow factor relative to other columns. Same as the flex-grow\n     * API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n     * take any available extra width and distribute it proportionally\n     * according to all columns' flexGrow values.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.flexGrow;\n    /**\n     * Min width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.minWidth;\n    /**\n     * Max width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.maxWidth;\n    /**\n     * The default width of the column, in pixels\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.width;\n    /**\n     * Can the column be resized\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.resizeable;\n    /**\n     * Custom sort comparator\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.comparator;\n    /**\n     * Custom pipe transforms\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.pipe;\n    /**\n     * Can the column be sorted\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.sortable;\n    /**\n     * Can the column be re-arranged by dragging\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.draggable;\n    /**\n     * Whether the column can automatically resize to fill space in the table.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.canAutoResize;\n    /**\n     * Column name or label\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.name;\n    /**\n     * Property to bind to the row. Example:\n     *\n     * `someField` or `some.field.nested`, 0 (numeric)\n     *\n     * If left blank, will use the name as camel case conversion\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.prop;\n    /**\n     * Cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellTemplate;\n    /**\n     * Header template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerTemplate;\n    /**\n     * Tree toggle template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeToggleTemplate;\n    /**\n     * CSS Classes for the cell\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellClass;\n    /**\n     * CSS classes for the header\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerClass;\n    /**\n     * Header checkbox enabled\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerCheckboxable;\n    /**\n     * Is tree displayed on this column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.isTreeColumn;\n    /**\n     * Width of the tree level indent\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeLevelIndent;\n    /**\n     * Summary function\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryFunc;\n    /**\n     * Summary cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryTemplate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SortPropDir() { }\nif (false) {\n    /** @type {?} */\n    SortPropDir.prototype.dir;\n    /** @type {?} */\n    SortPropDir.prototype.prop;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n    document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction elementsFromPoint(x, y) {\n    /** @type {?} */\n    var elements = [];\n    /** @type {?} */\n    var previousPointerEvents = [];\n    /** @type {?} */\n    var current;\n    // TODO: window.getComputedStyle should be used with inferred type (Element)\n    /** @type {?} */\n    var i;\n    /** @type {?} */\n    var d;\n    //if (document === undefined) return elements;\n    // get all elements via elementFromPoint, and remove them from hit-testing in order\n    while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n        // push the element and its current style\n        elements.push(current);\n        previousPointerEvents.push({\n            value: current.style.getPropertyValue('pointer-events'),\n            priority: current.style.getPropertyPriority('pointer-events')\n        });\n        // add \"pointer-events: none\", to get to the underlying element\n        current.style.setProperty('pointer-events', 'none', 'important');\n    }\n    // restore the previous pointer-events values\n    for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]);) {\n        elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n    }\n    // return our results\n    return elements;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY };\n\n//# sourceMappingURL=swimlane-ngx-datatable.js.map","<div class=\"autocomplete\" [formGroup]=\"formGroup\">\r\n  <input\r\n    type=\"text\"\r\n    autocomplete=\"off\"\r\n    [id]=\"id\"\r\n    [formControlName]=\"id\"\r\n    [placeholder]=\"placeholder\"\r\n    [value]=\"itemSelected?.name\">\r\n  <ul #result *ngIf=\"activateOptions\">\r\n    <li [id]=\"itemId\" #item *ngFor=\"let item of itemsFiltered\" [class.active]=\"itemActived?.code === item.code\" (click)=\"selectItem(item)\">\r\n      <span [class]=\"textClass\" [id]=\"itemTextId\">{{item.name}}</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n  ElementRef,\n  ViewChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { scrollear } from '@core/helpers/scroll.helper';\nimport { AutoCompleteItem } from '../../entities/common.entities';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AutocompleteComponent implements OnInit, OnDestroy {\n  @Input() formGroup: FormGroup;\n  @Input() id: string;\n  @Input() placeholder: string;\n  @Input() items: AutoCompleteItem[] = [];\n  @Input() textClass: string = 'default';\n  @Input() containerId: string;\n\n  @Output() doBlur: EventEmitter<void> = new EventEmitter();\n  @Output() doFocus: EventEmitter<void> = new EventEmitter();\n  @Output() selected: EventEmitter<AutoCompleteItem> = new EventEmitter();\n\n  @ViewChild('result', { static: false }) public resultElement: ElementRef;\n  @ViewChildren('item') public itemElement: QueryList<ElementRef>;\n\n  public itemsFiltered: AutoCompleteItem[] = [];\n  public itemSelected: AutoCompleteItem;\n  public isOpen: boolean = false;\n  public clickOut: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public counter: number = 0;\n  public itemActived: AutoCompleteItem;\n  public maxItemsVisibles: number = 0;\n  public isItemSelected: boolean = false;\n  public readonly itemId: string = 'item';\n  public readonly itemTextId: string = 'item-text';\n  public readonly maxListHeight: number = 156;\n  public cumulativeHeight: number = 0;\n  public itemElementArray: ElementRef[] = [];\n  public subscriptions: Array<Subscription> = [];\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.formGroup.get(this.id).valueChanges.subscribe((data) => {\n        this.filterList(data);\n      }),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  clickedOutside($event: any): void {\n    const idTarget = $event.target.id;\n    const id = !!$event.toElement.offsetParent\n      ? $event.toElement.offsetParent.id || 'id'\n      : 'id';\n    if (\n      !!id &&\n      id !== this.containerId &&\n      ![this.itemId, this.itemTextId].includes(idTarget)\n    ) {\n      this.isOpen = false;\n      this.clickOut.next(true);\n    }\n  }\n\n  public selectItem(item: AutoCompleteItem): void {\n    if (!!item) {\n      this.formGroup.get(this.id).setValue(item.name);\n      this.itemSelected = item;\n      this.isOpen = false;\n      this.isItemSelected = true;\n      this.selected.emit(item);\n    }\n  }\n\n  public filterList(text: string): void {\n    if (!!text) {\n      this.checkItemSelected(text);\n      this.applyFilter(text);\n    } else {\n      this.restartList();\n    }\n    setTimeout(() => {\n      this.itemElementArray = this.itemElement.toArray();\n      this.maxItemsVisibles = this.calculateMaxItems();\n    }, 200);\n  }\n\n  public activateItem(\n    item: AutoCompleteItem,\n    position: number,\n    increase: boolean,\n  ): void {\n    this.itemActived = item;\n    if (position > this.maxItemsVisibles && increase) {\n      this.cumulativeHeight += this.itemElementArray[\n        position - 1\n      ].nativeElement.scrollHeight;\n    } else if (position > this.maxItemsVisibles && !increase) {\n      this.cumulativeHeight -= this.itemElementArray[\n        position\n      ].nativeElement.scrollHeight;\n    } else {\n      this.cumulativeHeight = 0;\n    }\n\n    const scroll = this.calculatePositionScroll(position);\n    scrollear(this.resultElement, scroll);\n  }\n\n  public focusInput(): void {\n    const valFocus = this.formGroup.get(this.id).value;\n    this.filterList(valFocus);\n    this.isOpen = true;\n    this.doFocus.emit();\n  }\n\n  private applyFilter(text: string): void {\n    if (!!this.items) {\n      this.itemsFiltered = this.items.filter((data) =>\n        data.filter.includes(text),\n      );\n    }\n  }\n\n  private calculatePositionScroll(position: number): number {\n    return position > this.maxItemsVisibles ? this.cumulativeHeight : 0;\n  }\n\n  private restartList(): void {\n    this.isOpen = false;\n    this.itemsFiltered = [];\n    this.itemActived = null;\n    this.counter = 0;\n  }\n\n  private checkItemSelected(text: string): void {\n    if (this.isItemSelected) {\n      if (this.itemSelected.name === text) {\n        this.isOpen = false;\n        this.restartList();\n      } else {\n        this.isOpen = true;\n        this.isItemSelected = false;\n      }\n    } else {\n      this.isOpen = true;\n    }\n  }\n\n  private calculateMaxItems(): number {\n    let maxItems = 1;\n    if (!!this.itemElementArray && this.itemElementArray.length > 0) {\n      const sumHeight = this.itemElementArray\n        .filter((element, index) => index < 3)\n        .map((element) => element.nativeElement.scrollHeight)\n        .reduce((prev, cur) => prev + cur);\n      maxItems = sumHeight > this.maxListHeight ? 2 : 3;\n    }\n    return maxItems;\n  }\n\n  get activateOptions(): boolean {\n    return this.isOpen && !!this.itemsFiltered && this.itemsFiltered.length > 0;\n  }\n\n  get clickOut$(): Observable<boolean> {\n    return this.clickOut.asObservable();\n  }\n}\n","import { ElementRef } from '@angular/core';\n\nexport const scrollear = (element: ElementRef, position: number = 0) => {\n  element.nativeElement.scrollTop = position;\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormatClaimPipe } from './format-request.pipe';\nimport { FormatCustomerPipe } from './format-customer.pipe';\nimport { StatePipe } from './state.pipe';\nimport { RequestTypePipe } from './request-type.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    FormatClaimPipe,\n    FormatCustomerPipe,\n    StatePipe,\n    RequestTypePipe,\n  ],\n  exports: [FormatClaimPipe, FormatCustomerPipe, StatePipe, RequestTypePipe],\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AssignState } from '../constants/common.constants';\n\n@Pipe({\n  name: 'state',\n})\nexport class StatePipe implements PipeTransform {\n  public transform(value: string): string {\n    if (!!value) {\n      return `COMMONS.STATES.${AssignState[value]}`;\n    }\n\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatCustomer',\n})\nexport class FormatCustomerPipe implements PipeTransform {\n  public transform(value: any): string {\n    return `${value?.identification_number} - ${value?.first_name} ${value?.last_name}`;\n  }\n}\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AssignType } from '../constants/common.constants';\n\n@Pipe({\n  name: 'requestType',\n})\nexport class RequestTypePipe implements PipeTransform {\n  public transform(value: string): string {\n    if (!!value) {\n      return AssignType[value];\n    }\n\n    return value;\n  }\n}\n"],"sourceRoot":"webpack:///"}